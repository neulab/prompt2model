{"pretrained_model_name": "akhooli/ap2023", "description": "---\nlanguage: \"ar\"\ntags:\n- text-generation\ndatasets:\n- APCD\nwidget:\n - text: \".\"\n - text: \"\u0639\u064a\u062f \u0628\u0623\u064a\u0629 \u062d\u0627\u0644\"\n - text: \"\u064a\u0627 \u0642\u062f\u0633\"\n - text: \"\u064a\u0627 \u0642\u062f\u0633\"\n - text: \"\u0623\u0644\u0627 \u0644\u064a\u062a\"\n---\n\n# GPT2-Arabic-Poetry-2023\n\n## Model description\n\nFine-tuned model of Arabic poetry dataset based on aragpt2-medium.\n\n## Intended uses & limitations\n\n#### How to use\n\nTry this [HF Space](https://huggingface.co/spaces/akhooli/poetry).  \nFrom script: \n```\nfrom transformers import pipeline\npipe = pipeline('text-generation', framework='pt', device=-1, model='akhooli/ap2023', tokenizer='akhooli/ap2023')\ngen = pipe(prompt, max_length=96, temperature = 0.95,repetition_penalty=1.05,\n               num_beams=3, num_return_sequences=2, do_sample = True, \n               top_p = 1.0, top_k = 50, return_full_text=True)[0][\"generated_text\"]\npoetry =\"\"\nfor line in gen.split('.')[:-1]:\n        poetry += line \nprint(poetry)\n```\n\n#### Limitations and bias\n\nBoth the GPT2-small-arabic (trained on Arabic Wikipedia) and this model have several limitations in terms of coverage and training performance. \nUse them as demonstrations or proof of concepts but not as production code.\n\n## Training data\n\nThis pretrained model used poems from several eras with a total of around 1.4M lines (1.25M used for training). \nThe dataset was trained (fine-tuned) based on the [aragpt2-medium](https://huggingface.co/aubmindlab/aragpt2-medium) transformer model.\n\n## Training procedure\n\nTraining was done using HF Trainer using free GPU on Kaggle.\n\n## Eval results \nFinal perplexity reached was 52, eval_accuracy = 0.3704, eval_loss = 3.9513\n\n### BibTeX entry and citation info\n\n```bibtex\n@inproceedings{Abed Khooli,\n  year={2023}\n}\n```", "size_bytes": "1500858201", "downloads": 105}