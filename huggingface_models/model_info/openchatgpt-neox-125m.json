{"pretrained_model_name": "mrsteyk/openchatgpt-neox-125m", "description": "---\nlicense:\n- creativeml-openrail-m\nlanguage:\n- en\ntags:\n- generated_from_trainer\n- text generation\n- pytorch\n- casual-lm\nmetrics:\n- accuracy\nmodel-index:\n- name: openchatgpt-neox-r1\n  results: []\n---\n\n# openchatgpt-neox-r1\n\nThis model is a fine-tuned version of [EleutherAI/pythia-125m-deduped](https://huggingface.co/EleutherAI/pythia-125m-deduped) on the openchatgpt safe-r1 dataset.\nIt achieves the following results on the evaluation set:\n- Loss: 1.3585\n- Accuracy: 0.9169\n\n## Model description\n\nFinetune based on the inner workings of ChatGPT. I won't elaborate on that. You must have a faint idea of how prompt is made for it to be effective.\n\nThis is effectively a schizophrenic idea that met the light of day. Practically a collab of 3 students in a virtual shed.\n\nBTW, Pythia is so much better omg.\n\n## Intended uses & limitations\n\nIntended uses & limitations fall in line with OpenAI's. Dataset used consists of safe texts (i.e. not highly sexual/erotica type stuff). NSFW version of the dataset is not planned to exist at the moment.\n\nKeep in mind that this is a 125m version of GPT-NeoX (Pythia). My 1050Ti Mobile couldn't even handle that without gradient thingmabobs, 8BitAdam was also used. If anyone knows how to effectively finetune larger models on free colabs - feel free to let me know. Pile tokenizer also has one downside compared to native GPT-2/3 - `Assistant` is not 1 token, but 2.\n\n## Training and evaluation data\n\nData was split in ratio of 95%/5%. Preproccess included removing mentions of OpenAI wherever it was not deemed appropriete (GPT-2 has one of the appropriete mentions). Whole dataset consists of just shy off 3k input-output pairs. One input has multiple outputs (read as: one message has multiple variants of an answer). <<<1% (3 total) are curated lines (i.e. a huge mistake was spotted that needed corrections). At least 3 lines (<<<1% of line count, but more of byte count) are broken.\n\nHeavy bias on IT.\n\n## Training procedure\n\nInput and output were straight up concatenated due to the nature of how ChatGPT works.\n\nEOS was being used after the final separator.\n\n### Training hyperparameters\n\nThe following hyperparameters were used during training:\n- learning_rate: 5e-05\n- train_batch_size: 1\n- eval_batch_size: 1\n- seed: 42\n- gradient_accumulation_steps: 2\n- total_train_batch_size: 2\n- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08\n- lr_scheduler_type: linear\n- num_epochs: 3.0\n- mixed_precision_training: Native AMP\n\n### Training results\n\n| Training Loss | Epoch | Step | Validation Loss | Accuracy |\n|:-------------:|:-----:|:----:|:---------------:|:--------:|\n| 1.1311        | 1.0   | 1377 | 1.3116          | 0.9127   |\n| 0.6691        | 2.0   | 2754 | 1.2978          | 0.9160   |\n| 0.3463        | 3.0   | 4131 | 1.3585          | 0.9169   |\n\n\n### Framework versions\n\n- Transformers 4.25.1\n- Pytorch 1.13.1+cu116\n- Datasets 2.8.0\n- Tokenizers 0.13.2\n", "size_bytes": "699525549", "downloads": 35}