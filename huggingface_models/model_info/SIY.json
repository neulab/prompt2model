{"pretrained_model_name": "Siyris/SIY", "description": "---\nthumbnail: https://huggingface.co/front/thumbnails/dialogpt.png\ntags:\n- conversational\nlicense: mit\n---\n# DialoGPT Trained on a customized version of The Law of One.\nThis is an instance of [microsoft/DialoGPT-medium](https://huggingface.co/microsoft/DialoGPT-medium) trained on the energy complex known as Ra. Some text has been changed from the original with the intention of making it fit our discord server better.\nI built a Discord AI chatbot based on this model for internal use within Siyris, Inc.\nChat with the model:\n```python\nfrom transformers import AutoTokenizer, AutoModelWithLMHead\n  \ntokenizer = AutoTokenizer.from_pretrained(\"Siyris/SIY\")\nmodel = AutoModelWithLMHead.from_pretrained(\"Siyris/SIY\")\n# Let's chat for 4 lines\nfor step in range(4):\n    # encode the new user input, add the eos_token and return a tensor in Pytorch\n    new_user_input_ids = tokenizer.encode(input(\">> User:\") + tokenizer.eos_token, return_tensors='pt')\n    # print(new_user_input_ids)\n    # append the new user input tokens to the chat history\n    bot_input_ids = torch.cat([chat_history_ids, new_user_input_ids], dim=-1) if step > 0 else new_user_input_ids\n    # generated a response while limiting the total chat history to 1000 tokens, \n    chat_history_ids = model.generate(\n        bot_input_ids, max_length=200,\n        pad_token_id=tokenizer.eos_token_id,  \n        no_repeat_ngram_size=3,       \n        do_sample=True, \n        top_k=100, \n        top_p=0.7,\n        temperature=0.8\n    )\n    \n    # pretty print last ouput tokens from bot\n    print(\"SIY: {}\".format(tokenizer.decode(chat_history_ids[:, bot_input_ids.shape[-1]:][0], skip_special_tokens=True)))\n```", "size_bytes": "510403817", "downloads": 0}