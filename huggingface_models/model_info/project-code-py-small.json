{"pretrained_model_name": "gagan3012/project-code-py-small", "description": "# Leetcode using AI :robot:\nGPT-2 Model for Leetcode Questions in python \n\n**Note**: the Answers might not make sense in some cases because of the bias in GPT-2\n\n**Contribtuions:** If you would like to make the model better contributions are welcome Check out [CONTRIBUTIONS.md](https://github.com/gagan3012/project-code-py/blob/master/CONTRIBUTIONS.md)\n\n### \ud83d\udce2 Favour:\n\nIt would be highly motivating, if you can STAR\u2b50 this repo if you find it helpful.\n\n## Model\n\nTwo models have been developed for different use cases and they can be found at https://huggingface.co/gagan3012\n\nThe model weights can be found here: [GPT-2](https://huggingface.co/gagan3012/project-code-py) and [DistilGPT-2](https://huggingface.co/gagan3012/project-code-py-small)\n\n### Example usage:\n```python\nfrom transformers import AutoTokenizer, AutoModelWithLMHead\n\ntokenizer = AutoTokenizer.from_pretrained(\"gagan3012/project-code-py\")\n\nmodel = AutoModelWithLMHead.from_pretrained(\"gagan3012/project-code-py\")\n```\n\n## Demo\n[![Streamlit App](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://share.streamlit.io/gagan3012/project-code-py/app.py)\n\n\nA streamlit webapp has been setup to use the model: https://share.streamlit.io/gagan3012/project-code-py/app.py\n\n![image](https://user-images.githubusercontent.com/49101362/110356042-e69e4780-804a-11eb-94c6-a47fa3cd66b3.png)\n\n\n## Example results:\n\n### Question:\n\n```\nWrite a function to delete a node in a singly-linked list. You will not be given access to the head of the list, instead you will be given access to the node to be deleted directly. It is guaranteed that the node to be deleted is not a tail node in the list.\n```\n\n### Answer:\n\n```python\n\"\"\" Write a function to delete a node in a singly-linked list. You will not be given access to the head of the list, instead you will be given access to the node to be deleted directly. It is guaranteed that the node to be deleted is not a tail node in the list.\n\nFor example,\na = 1->2->3\nb = 3->1->2\nt = ListNode(-1, 1)\n\nNote: The lexicographic ordering of the nodes in a tree matters. Do not assign values to nodes in a tree.\nExample 1:\n\nInput: [1,2,3]\nOutput: 1->2->5\nExplanation: 1->2->3->3->4, then 1->2->5[2] and then 5->1->3->4.\n\n\nNote:\n\nThe length of a linked list will be in the range [1, 1000].\nNode.val must be a valid LinkedListNode type.\nBoth the length and the value of the nodes in a linked list will be in the range [-1000, 1000].\nAll nodes are distinct.\n\"\"\"\n# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def deleteNode(self, head: ListNode, val: int) -> None:\n        \"\"\"\n        BFS\n        Linked List\n        :param head: ListNode\n        :param val: int\n        :return: ListNode\n        \"\"\"\n        if head is not None:\n            return head\n        dummy = ListNode(-1, 1)\n        dummy.next = head\n        dummy.next.val = val\n        dummy.next.next = head\n        dummy.val = \"\"\n\n\ns1 = Solution()\nprint(s1.deleteNode(head))\nprint(s1.deleteNode(-1))\nprint(s1.deleteNode(-1))\n\n   ```\n", "size_bytes": "333975623", "downloads": 4}