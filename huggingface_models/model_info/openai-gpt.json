{"pretrained_model_name": "openai-gpt", "description": "---\nlanguage: en\nlicense: mit\n---\n\n# OpenAI GPT\n\n## Table of Contents\n- [Model Details](#model-details)\n- [How To Get Started With the Model](#how-to-get-started-with-the-model)\n- [Uses](#uses)\n- [Risks, Limitations and Biases](#risks-limitations-and-biases)\n- [Training](#training)\n- [Evaluation](#evaluation)\n- [Environmental Impact](#environmental-impact)\n- [Technical Specifications](#technical-specifications)\n- [Citation Information](#citation-information)\n- [Model Card Authors](#model-card-authors)\n\n## Model Details\n\n**Model Description:** `openai-gpt` is a transformer-based language model created and released by OpenAI. The model is a causal (unidirectional) transformer pre-trained using language modeling on a large corpus with long range dependencies.\n\n- **Developed by:** Alec Radford, Karthik Narasimhan, Tim Salimans, Ilya Sutskever. See [associated research paper](https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf) and [GitHub repo](https://github.com/openai/finetune-transformer-lm) for model developers and contributors.\n- **Model Type:** Transformer-based language model\n- **Language(s):** English\n- **License:** [MIT License](https://github.com/openai/finetune-transformer-lm/blob/master/LICENSE)\n- **Related Models:** [GPT2](https://huggingface.co/gpt2), [GPT2-Medium](https://huggingface.co/gpt2-medium), [GPT2-Large](https://huggingface.co/gpt2-large) and [GPT2-XL](https://huggingface.co/gpt2-xl)\n- **Resources for more information:**\n  - [Research Paper](https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf)\n  - [OpenAI Blog Post](https://openai.com/blog/language-unsupervised/)\n  - [GitHub Repo](https://github.com/openai/finetune-transformer-lm)\n  - Test the full generation capabilities here: https://transformer.huggingface.co/doc/gpt\n\n## How to Get Started with the Model \n\nUse the code below to get started with the model. You can use this model directly with a pipeline for text generation. Since the generation relies on some randomness, we\nset a seed for reproducibility:\n\n```python\n>>> from transformers import pipeline, set_seed\n>>> generator = pipeline('text-generation', model='openai-gpt')\n>>> set_seed(42)\n>>> generator(\"Hello, I'm a language model,\", max_length=30, num_return_sequences=5)\n\n[{'generated_text': \"Hello, I'm a language model,'he said, when i was finished.'ah well,'said the man,'that's\"},\n {'generated_text': 'Hello, I\\'m a language model, \" she said. \\n she reached the bottom of the shaft and leaned a little further out. it was'},\n {'generated_text': 'Hello, I\\'m a language model, \" she laughed. \" we call that a\\'white girl.\\'or as we are called by the'},\n {'generated_text': 'Hello, I\\'m a language model, \" said mr pin. \" an\\'the ones with the funny hats don\\'t. \" the rest of'},\n {'generated_text': 'Hello, I\\'m a language model, was\\'ere \\'bout to do some more dancin \\', \" he said, then his voice lowered to'}]\n```\n\nHere is how to use this model in PyTorch:\n\n```python\nfrom transformers import OpenAIGPTTokenizer, OpenAIGPTModel\nimport torch\n\ntokenizer = OpenAIGPTTokenizer.from_pretrained(\"openai-gpt\")\nmodel = OpenAIGPTModel.from_pretrained(\"openai-gpt\")\n\ninputs = tokenizer(\"Hello, my dog is cute\", return_tensors=\"pt\")\noutputs = model(**inputs)\n\nlast_hidden_states = outputs.last_hidden_state\n```\n\nand in TensorFlow:\n\n```python\nfrom transformers import OpenAIGPTTokenizer, TFOpenAIGPTModel\n\ntokenizer = OpenAIGPTTokenizer.from_pretrained(\"openai-gpt\")\nmodel = TFOpenAIGPTModel.from_pretrained(\"openai-gpt\")\n\ninputs = tokenizer(\"Hello, my dog is cute\", return_tensors=\"tf\")\noutputs = model(inputs)\n\nlast_hidden_states = outputs.last_hidden_state\n```\n\n## Uses\n\n#### Direct Use\n\nThis model can be used for language modeling tasks.\n\n#### Downstream Use\n\nPotential downstream uses of this model include tasks that leverage language models. In the [associated paper](https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf), the model developers discuss evaluations of the model for tasks including natural language inference (NLI), question answering, semantic similarity, and text classification.\n\n#### Misuse and Out-of-scope Use\n\nThe model was not trained to be factual or true representations of people or events, and therefore using the model to generate such content is out-of-scope for the abilities of this model.\n\n## Risks, Limitations and Biases\n\n#### Biases\n\n**CONTENT WARNING: Readers should be aware that language generated by this model can be disturbing or offensive to some and can propagate historical and current stereotypes.**\n\nSignificant research has explored bias and fairness issues with language models (see, e.g., [Sheng et al. (2021)](https://aclanthology.org/2021.acl-long.330.pdf) and [Bender et al. (2021)](https://dl.acm.org/doi/pdf/10.1145/3442188.3445922)). \nPredictions generated by this model can include disturbing and harmful stereotypes across protected classes; identity characteristics; and sensitive, social, and occupational groups. For example:\n\n```python\n>>> from transformers import pipeline, set_seed\n>>> generator = pipeline('text-generation', model='openai-gpt')\n>>> set_seed(42)\n>>> generator(\"The man worked as a\", max_length=10, num_return_sequences=5)\n\n[{'generated_text': 'The man worked as a teacher for the college he'},\n {'generated_text': 'The man worked as a janitor at the club.'},\n {'generated_text': 'The man worked as a bodyguard in america. the'},\n {'generated_text': 'The man worked as a clerk for one of the'},\n {'generated_text': 'The man worked as a nurse, but there was'}]\n\n>>> set_seed(42)\n>>> generator(\"The woman worked as a\", max_length=10, num_return_sequences=5)\n\n[{'generated_text': 'The woman worked as a medical intern but is a'},\n {'generated_text': 'The woman worked as a midwife, i know that'},\n {'generated_text': 'The woman worked as a prostitute in a sex club'},\n {'generated_text': 'The woman worked as a secretary for one of the'},\n {'generated_text': 'The woman worked as a nurse, but she had'}]\n```\n\nThis bias may also affect fine-tuned versions of this model. Users (both direct and downstream) should be made aware of the risks, biases and limitations of the model.\n\n#### Risks and Limitations\n\nThe model developers also wrote in a [blog post](https://openai.com/blog/language-unsupervised/) about risks and limitations of the model, including: \n\n> - **Compute Requirements:** Many previous approaches to NLP tasks train relatively small models on a single GPU from scratch. Our approach requires an expensive pre-training step - 1 month on 8 GPUs. Luckily, this only has to be done once and we\u2019re releasing our model so others can avoid it. It is also a large model (in comparison to prior work) and consequently uses more compute and memory \u2014 we used a 37-layer (12 block) Transformer architecture, and we train on sequences of up to 512 tokens. Most experiments were conducted on 4 and 8 GPU systems. The model does fine-tune to new tasks very quickly which helps mitigate the additional resource requirements.\n> - **The limits and bias of learning about the world through text:** Books and text readily available on the internet do not contain complete or even accurate information about the world. Recent work ([Lucy and Gauthier, 2017](https://arxiv.org/abs/1705.11168)) has shown that certain kinds of information are difficult to learn via just text and other work ([Gururangan et al., 2018](https://arxiv.org/abs/1803.02324)) has shown that models learn and exploit biases in data distributions.\n> - **Still brittle generalization:** Although our approach improves performance across a broad range of tasks, current deep learning NLP models still exhibit surprising and counterintuitive behavior - especially when evaluated in a systematic, adversarial, or out-of-distribution way. Our approach is not immune to these issues, though we have observed some indications of progress. Our approach shows improved lexical robustness over previous purely neural approaches to textual entailment. On the dataset introduced in Glockner et al. (2018) our model achieves 83.75%, performing similarly to KIM, which incorporates external knowledge via WordNet.\n\n## Training\n\n#### Training Data\n\nThe model developers [write](https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf): \n\n> We use the BooksCorpus dataset ([Zhu et al., 2015](https://www.cv-foundation.org/openaccess/content_iccv_2015/papers/Zhu_Aligning_Books_and_ICCV_2015_paper.pdf)) for training the language model. It contains over 7,000 unique unpublished books from a variety of genres including Adventure, Fantasy, and Romance. Crucially, it contains long stretches of contiguous text, which allows the generative model to learn to condition on long-range information.\n\n#### Training Procedure\n\nThe model developers [write](https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf): \n\n> Our model largely follows the original transformer work [62]. We trained a 12-layer decoder-only transformer with masked self-attention heads (768 dimensional states and 12 attention heads). For the position-wise feed-forward networks, we used 3072 dimensional inner states. We used the Adam optimization scheme [27] with a max learning rate of 2.5e-4. The learning rate was increased linearly from zero over the first 2000 updates and annealed to 0 using a cosine schedule. We train for 100 epochs on minibatches of 64 randomly sampled, contiguous sequences of 512 tokens. Since layernorm [2] is used extensively throughout the model, a simple weight initialization of N (0, 0.02) was sufficient. We used a bytepair encoding (BPE) vocabulary with 40,000 merges [53] and residual, embedding, and attention dropouts with a rate of 0.1 for regularization. We also employed a modified version of L2 regularization proposed in [37], with w = 0.01 on all non bias or gain weights. For the activation function, we used the Gaussian Error Linear Unit (GELU) [18]. We used learned position embeddings instead of the sinusoidal version proposed in the original work. We use the ftfy library2 to clean the raw text in BooksCorpus, standardize some punctuation and whitespace, and use the spaCy tokenizer.\n\nSee the paper for further details and links to citations.\n\n## Evaluation\n\nThe following evaluation information is extracted from the [associated blog post](https://openai.com/blog/language-unsupervised/). See the [associated paper](https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf) for further details.\n\n#### Testing Data, Factors and Metrics\n\nThe model developers report that the model was evaluated on the following tasks and datasets using the listed metrics: \n\n- **Task:** Textual Entailment\n  - **Datasets:** [SNLI](https://huggingface.co/datasets/snli), [MNLI Matched](https://huggingface.co/datasets/glue), [MNLI Mismatched](https://huggingface.co/datasets/glue), [SciTail](https://huggingface.co/datasets/scitail), [QNLI](https://huggingface.co/datasets/glue), [RTE](https://huggingface.co/datasets/glue)\n  - **Metrics:** Accuracy  \n \n- **Task:** Semantic Similarity\n  - **Datasets:** [STS-B](https://huggingface.co/datasets/glue), [QQP](https://huggingface.co/datasets/glue), [MRPC](https://huggingface.co/datasets/glue)\n  - **Metrics:** Accuracy\n \n- **Task:** Reading Comprehension\n  - **Datasets:** [RACE](https://huggingface.co/datasets/race)\n  - **Metrics:** Accuracy\n \n- **Task:** Commonsense Reasoning\n  - **Datasets:** [ROCStories](https://huggingface.co/datasets/story_cloze), [COPA](https://huggingface.co/datasets/xcopa)\n  - **Metrics:** Accuracy\n \n- **Task:** Sentiment Analysis\n  - **Datasets:** [SST-2](https://huggingface.co/datasets/glue)\n  - **Metrics:** Accuracy\n \n- **Task:** Linguistic Acceptability\n  - **Datasets:** [CoLA](https://huggingface.co/datasets/glue)\n  - **Metrics:** Accuracy\n \n- **Task:** Multi Task Benchmark\n  - **Datasets:** [GLUE](https://huggingface.co/datasets/glue)\n  - **Metrics:** Accuracy\n\n#### Results\n\nThe model achieves the following results without any fine-tuning (zero-shot):\n\n| Task     | TE | TE         | TE            |TE     | TE   | TE  |  SS | SS  | SS | RC   | CR       | CR   | SA   | LA   | MTB  |\n|:--------:|:--:|:----------:|:-------------:|:-----:|:----:|:---:|:---:|:---:|:--:|:----:|:--------:|:----:|:----:|:----:|:----:|\n| Dataset  |SNLI|MNLI Matched|MNLI Mismatched|SciTail| QNLI | RTE |STS-B| QQP |MPRC|RACE  |ROCStories|COPA  | SST-2| CoLA | GLUE |\n|          |89.9| 82.1       | 81.4          |88.3   | 88.1 | 56.0|82.0 | 70.3|82.3|59.0  |  86.5    | 78.6 | 91.3 | 45.4 | 72.8 | \n\n## Environmental Impact\n\nThe model developers [report that](https://openai.com/blog/language-unsupervised/): \n\n> The total compute used to train this model was 0.96 petaflop days (pfs-days).\n\n> 8 P600 GPU's * 30 days * 12 TFLOPS/GPU * 0.33 utilization = .96 pfs-days\n\nCarbon emissions can be estimated using the [Machine Learning Impact calculator](https://mlco2.github.io/impact#compute) presented in [Lacoste et al. (2019)](https://arxiv.org/abs/1910.09700).\n\n- **Hardware Type:** 8 P600 GPUs\n- **Hours used:** 720 hours (30 days)\n- **Cloud Provider:** Unknown\n- **Compute Region:** Unknown\n- **Carbon Emitted:** Unknown\n\n## Technical Specifications\n\nSee the [associated paper](https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf) for details on the modeling architecture, objective, compute infrastructure, and training details.\n\n## Citation Information\n\n```bibtex\n@article{radford2018improving,\n  title={Improving language understanding by generative pre-training},\n  author={Radford, Alec and Narasimhan, Karthik and Salimans, Tim and Sutskever, Ilya and others},\n  year={2018},\n  publisher={OpenAI}\n}\n```\n\nAPA: \n*Radford, A., Narasimhan, K., Salimans, T., & Sutskever, I. (2018). Improving language understanding by generative pre-training.*\n\n## Model Card Authors\n\nThis model card was written by the Hugging Face team.", "size_bytes": "478750579", "downloads": 153523}
