{"pretrained_model_name": "ddobokki/gpt2_poem", "description": "```python\nimport torch\nfrom transformers import AutoTokenizer, AutoModelForCausalLM\n\n# device setting\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n# load model and tokenizer\nmodel_name_or_path = \"ddobokki/gpt2_poem\"\n\ntokenizer = AutoTokenizer.from_pretrained(model_name_or_path)\nmodel = AutoModelForCausalLM.from_pretrained(model_name_or_path)\nmodel.to(device)\n\nkeyword_start_token = \"<k>\"\nkeyword_end_token = \"</k>\"\ntext = \"\uc0b0 \uaf2d\ub300\uae30\uac00 \ubcf4\uc774\ub294 \uacbd\uce58\"\ninput_text = keyword_start_token + text + keyword_end_token\n\ninput_ids = tokenizer.encode(input_text, return_tensors=\"pt\").to(device)\ngen_ids = model.generate(\n    input_ids, max_length=64, num_beams=100, no_repeat_ngram_size=2\n)\ngenerated = tokenizer.decode(gen_ids[0, :].tolist(), skip_special_tokens=True)\n>> \uc624\ub974\ub77d\ub0b4\ub9ac\ub77d\n\uc0b0 \uaf2d\ub300\uae30\ub97c \uc62c\ub824\ub2e4\ubcf4\ub2c8\n\uc544\ub4dd\ud788 \uba40\uace0 \uc544\ub4dd\ud55c\n\ub098\ubb47\uac00\uc9c0\uc5d0 \ub9e4\ub2ec\ub9b0\n\uc791\uc740 \uc0b0\uc0c8 \ud55c \ub9c8\ub9ac\n\uc774\ub984 \ubaa8\ub97c \ud480 \ud55c\ud3ec\uae30 \uc548\uace0\n\uc5b4\ub514\ub860\uac00 \ud6cc\uca4d \ub5a0\ub098\uac00 \ubc84\ub838\ub2e4\n```", "size_bytes": "513306857", "downloads": 0}