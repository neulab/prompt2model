{"pretrained_model_name": "microsoft/Promptist", "description": "# Promptist: reinforcement learning for automatic prompt optimization\n\n## News\n- [Demo Release] Dec, 2022: [Demo at HuggingFace Space](https://aka.ms/promptist-demo)\n- [Model Release] Dec, 2022: [link](#load-pretrained-model-for-stable-diffusion-v14)\n- [Paper Release] Dec, 2022: [Optimizing Prompts for Text-to-Image Generation](https://aka.ms/promptist-paper)\n\n> - Language models serve as a prompt interface that optimizes user input into model-preferred prompts.\n\n> - Learn a language model for automatic prompt optimization via reinforcement learning.\n\n![image](https://user-images.githubusercontent.com/1070872/207856962-02f08d92-f2bf-441a-b1c3-efff1a4b6187.png)\n\n\n## Load Pretrained Model for [Stable Diffusion v1.4](https://huggingface.co/CompVis/stable-diffusion-v1-4)\n\nYou can try the online demo at [https://huggingface.co/spaces/microsoft/Promptist](https://huggingface.co/spaces/microsoft/Promptist).\n\n`[Note]` the online demo at HuggingFace Space is using CPU, so slow generation speed would be expected. Please load the model locally with GPUs for faster generation.\n\n```python\nimport gradio as grad\nimport torch\nfrom transformers import AutoModelForCausalLM, AutoTokenizer\n\ndef load_prompter():\n  prompter_model = AutoModelForCausalLM.from_pretrained(\"microsoft/Promptist\")\n  tokenizer = AutoTokenizer.from_pretrained(\"gpt2\")\n  tokenizer.pad_token = tokenizer.eos_token\n  tokenizer.padding_side = \"left\"\n  return prompter_model, tokenizer\n\nprompter_model, prompter_tokenizer = load_prompter()\n\ndef generate(plain_text):\n    input_ids = prompter_tokenizer(plain_text.strip()+\" Rephrase:\", return_tensors=\"pt\").input_ids\n    eos_id = prompter_tokenizer.eos_token_id\n    outputs = prompter_model.generate(input_ids, do_sample=False, max_new_tokens=75, num_beams=8, num_return_sequences=8, eos_token_id=eos_id, pad_token_id=eos_id, length_penalty=-1.0)\n    output_texts = prompter_tokenizer.batch_decode(outputs, skip_special_tokens=True)\n    res = output_texts[0].replace(plain_text+\" Rephrase:\", \"\").strip()\n    return res\n\ntxt = grad.Textbox(lines=1, label=\"Initial Text\", placeholder=\"Input Prompt\")\nout = grad.Textbox(lines=1, label=\"Optimized Prompt\")\nexamples = [\"A rabbit is wearing a space suit\", \"Several railroad tracks with one train passing by\", \"The roof is wet from the rain\", \"Cats dancing in a space club\"]\n\ngrad.Interface(fn=generate,\n               inputs=txt,\n               outputs=out,\n               title=\"Promptist Demo\",\n               description=\"Promptist is a prompt interface for Stable Diffusion v1-4 (https://huggingface.co/CompVis/stable-diffusion-v1-4) that optimizes user input into model-preferred prompts.\",\n               examples=examples,\n               allow_flagging='never',\n               cache_examples=False,\n               theme=\"default\").launch(enable_queue=True, debug=True)\n```\n", "size_bytes": "510395581", "downloads": 12370}