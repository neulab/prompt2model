{"pretrained_model_name": "iliemihai/GPT-JT-6B-v1-8bit", "description": "---\ndatasets: \n  - natural_instructions\n  - the_pile\n  - cot\n  - Muennighoff/P3\ninference: \n  parameters: \n    max_new_tokens: 5\n    temperature: 1.0\n    top_k: 1\nlanguage: \n  - en\npipeline_tag: text-generation\nwidget: \n  - \n    example_title: \"Sentiment Analysis\"\n    text: |-\n        The task is to label the post's emotion as sadness, joy, love, anger, fear, or surprise.\n\n        Input: I'm feeling quite sad and sorry for myself but ill snap out of it soon.\n        Output: sadness\n        \n        Input: I am just feeling cranky and blue.\n        Output: anger\n        \n        Input: I can have for a treat or if i am feeling festive.\n        Output:\n  - \n    example_title: \"Country Currency\"\n    text: |-\n        Return the currency of the given country.\n        \n        Input: Switzerland\n        Output: Swiss Franc\n\n        Input: India\n        Output:\n  - \n    example_title: \"Tweet Eval Hate\"\n    text: |-\n        Label whether the following tweet contains hate speech against either immigrants or women. Hate Speech (HS) is commonly defined as any communication that disparages a person or a group on the basis of some characteristic such as race, color, ethnicity, gender, sexual orientation, nationality, religion, or other characteristics.\n        Possible labels:\n        1. hate speech\n        2. not hate speech\n        \n        Tweet: HOW REFRESHING! In South Korea, there is no such thing as 'political correctness\" when it comes to dealing with Muslim refugee wannabes via @user\n        Label: hate speech\n        \n        Tweet: New to Twitter-- any men on here know what the process is to get #verified?\n        Label: not hate speech\n        \n        Tweet: Dont worry @user you are and will always be the most hysterical woman.\n        Label:\n  -\n    example_title: \"Entity Recognition\"\n    text: |-\n        Extract all the names of people, places, and organizations from the following sentences.\n\n        Sentence: Satya Nadella, the CEO of Microsoft, was visiting the Bahamas last May.\n        Entities: Satya Nadella, Microsoft, Bahamas\n        \n        Sentence: Pacific Northwest cities include Seattle and Portland, which I have visited with Vikash.\n        Entities:\n  - \n    example_title: \"Data Clearning\"\n    text: |-\n        Format the data into a CSV file:\n\n        Input: Jane Doe jane.doe@gmail.com (520) 382 2435\n        Output: Jane Doe,jane.doe@gmail.com,520-382-2435\n        \n        Input: Peter Lee (510) 333-2429 email: peter@yahoo.com\n        Output:\n---\n\n<h1 style=\"font-size: 42px\">GPT-JT<h1/>\n\n\n***<p style=\"font-size: 24px\">Feel free to try out our [Online Demo](https://huggingface.co/spaces/togethercomputer/GPT-JT)!</p>***\n\n\n# Model Summary\n\n> **NOTE**: This model was converted to 8-bit using the scripts from [hivemind](https://huggingface.co/hivemind/gpt-j-6B-8bit).\n\n> With a new decentralized training algorithm, we fine-tuned GPT-J (6B) on 3.53 billion tokens, resulting in GPT-JT (6B), a model that outperforms many 100B+ parameter models on classification benchmarks.\n\nWe incorporated a collection of open techniques and datasets to build GPT-JT:\n- GPT-JT is a fork of [EleutherAI](https://www.eleuther.ai)'s [GPT-J (6B)](https://huggingface.co/EleutherAI/gpt-j-6B);\n- We used [UL2](https://github.com/google-research/google-research/tree/master/ul2)'s training objective, allowing the model to see bidirectional context of the prompt;\n- The model was trained on a large collection of diverse data, including [Chain-of-Thought (CoT)](https://ai.googleblog.com/2022/05/language-models-perform-reasoning-via.html), [Public Pool of Prompts (P3) dataset](https://huggingface.co/datasets/bigscience/P3), [Natural-Instructions (NI) dataset](https://github.com/allenai/natural-instructions).\n\nWith the help of techniques mentioned above, GPT-JT significantly improves the performance of classification tasks over the original GPT-J, and even outperforms most 100B+ parameter models!\n\n# Quick Start\n\n```python\nfrom transformers import pipeline\npipe = pipeline(model='togethercomputer/GPT-JT-6B-v1')\npipe('''\"I love this!\" Is it positive? A:''')\n```\nor\n```python\nfrom transformers import AutoTokenizer, AutoModelForCausalLM\ntokenizer = AutoTokenizer.from_pretrained(\"togethercomputer/GPT-JT-6B-v1\")\nmodel = AutoModelForCausalLM.from_pretrained(\"togethercomputer/GPT-JT-6B-v1\")\n```\n\n# Training Details\n\n## UL2 Training Objective\n\nWe train GPT-JT using UL2 training objective [1][2].\nThe original GPT-J uses causal mask (as shown below left) for autoregressive generation. So for each token, it can only see its previous context.\nIn order to fully leverage the context information, we continue to train GPT-J with UL2 training objectives, and uses causal mask with prefix (as shown below right) -- using bidirectional attention for the prompt / input and causal attention for token generation.\nIntuitively, being able to see context bidirectionally might improve downstream tasks that require this information.\n\n$$ \n\\begin{bmatrix}\n1 & 0 & 0 & 0 & 0 \\\\\n1 & 1 & 0 & 0 & 0 \\\\\n1 & 1 & 1 & 0 & 0 \\\\\n1 & 1 & 1 & 1 & 0 \\\\\n1 & 1 & 1 & 1 & 1 \n\\end{bmatrix}\n\n\\begin{bmatrix}\n1 & 1 & 1 & 0 & 0 \\\\\n1 & 1 & 1 & 0 & 0 \\\\\n1 & 1 & 1 & 0 & 0 \\\\\n1 & 1 & 1 & 1 & 0 \\\\\n1 & 1 & 1 & 1 & 1 \n\\end{bmatrix}  \n$$\n\nFurthermore, we leverage a large collection of data, including [Natural-Instructions](https://github.com/allenai/natural-instructions), [P3](https://huggingface.co/datasets/Muennighoff/P3), [MMLU-COT](https://github.com/jasonwei20/flan-2/blob/main/mmlu-cot.json), and [the Pile](https://huggingface.co/datasets/the_pile)\nSpecifically, we first conduct training for 2.62 billion tokens using the UL2 loss on the Pile, followed by 0.92 billion tokens with a mixture of the above datasets: 5% of COT, 20% of P3, 20% of NI, and 55% of the Pile.\n\n## Hyperparameters\n\nWe used AdamW with a learning rate of 1e-5 and global batch size of 64 (16 for each data parallel worker).\nWe used mix-precision training where the activation is in FP16 while the optimizer states are kept in FP32.\nWe use both data parallelism and pipeline parallelism to conduct training.\nDuring training, we truncate the input sequence to 2048 tokens, and for input sequence that contains less than 2048 tokens, we concatenate multiple sequences into one long sequence to improve the data efficiency.\n\n## Infrastructure\n\nWe used [the Together Research Computer](https://together.xyz/) to conduct training. \n\n# References\n\n[1]: Tay, Yi, Mostafa Dehghani, Vinh Q. Tran, Xavier Garcia, Dara Bahri, Tal Schuster, Huaixiu Steven Zheng, Neil Houlsby, and Donald Metzler. \"Unifying Language Learning Paradigms.\" arXiv preprint arXiv:2205.05131 (2022).\n\n[2]: Tay, Yi, Jason Wei, Hyung Won Chung, Vinh Q. Tran, David R. So, Siamak Shakeri, Xavier Garcia et al. \"Transcending scaling laws with 0.1% extra compute.\" arXiv preprint arXiv:2210.11399 (2022).", "size_bytes": "6176991233", "downloads": 47}