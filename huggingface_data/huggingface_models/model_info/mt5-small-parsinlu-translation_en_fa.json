{"pretrained_model_name": "persiannlp/mt5-small-parsinlu-translation_en_fa", "description": "---\nlanguage:\n- fa\n- multilingual\nthumbnail: https://upload.wikimedia.org/wikipedia/commons/a/a2/Farsi.svg\ntags:\n- machine-translation\n- mt5\n- persian\n- farsi\nlicense: cc-by-nc-sa-4.0\ndatasets:\n- parsinlu\nmetrics:\n- sacrebleu\n---\n\n# Machine Translation (\u062a\u0631\u062c\u0645\u0647\u200c\u06cc \u0645\u0627\u0634\u06cc\u0646\u06cc)\n\nThis is an mT5-based model for machine translation (English -> Persian). \nHere is an example of how you can run this model: \n\n```python \nfrom transformers import MT5ForConditionalGeneration, MT5Tokenizer\n\nmodel_size = \"small\"\nmodel_name = f\"persiannlp/mt5-{model_size}-parsinlu-translation_en_fa\"\ntokenizer = MT5Tokenizer.from_pretrained(model_name)\nmodel = MT5ForConditionalGeneration.from_pretrained(model_name)\n\n\ndef run_model(input_string, **generator_args):\n    input_ids = tokenizer.encode(input_string, return_tensors=\"pt\")\n    res = model.generate(input_ids, **generator_args)\n    output = tokenizer.batch_decode(res, skip_special_tokens=True)\n    print(output)\n    return output\n\n\nrun_model(\"Praise be to Allah, the Cherisher and Sustainer of the worlds;\")\nrun_model(\"shrouds herself in white and walks penitentially disguised as brotherly love through factories and parliaments; offers help, but desires power;\")\nrun_model(\"He thanked all fellow bloggers and organizations that showed support.\")\nrun_model(\"Races are held between April and December at the Veliefendi Hippodrome near Bakerky, 15 km (9 miles) west of Istanbul.\")\nrun_model(\"I want to pursue PhD in Computer Science about social network,what is the open problem in social networks?\")\n```\nwhich should output: \n```\n['\u0628\u0631\u0627\u06cc \u0627\u0644\u0644\u0647\u060c \u06cc\u0639\u0646\u06cc \u0686\u0631\u0646\u062f\u0647 \u0648 \u0633\u0648\u0632\u0627\u0646 \u062f\u0646\u06cc\u0627\u060c \u062a\u062d\u0633\u06cc\u0646 \u06a9\u0646\u06cc\u062f']\n['\u062e\u0648\u062f\u0634 \u0631\u0627 \u062f\u0631 \u0633\u0641\u06cc\u062f \u067e\u0648\u0633\u062a\u0647 \u0645\u06cc \u06a9\u0646\u062f \u0648 \u0628\u0647 \u0635\u0648\u0631\u062a \u0639\u0634\u0642 \u0628\u0631\u0627\u062f\u0631\u0627\u0646\u0647']\n['\u0627\u0648 \u0627\u0632 \u062a\u0645\u0627\u0645 \u0628\u0644\u0627\u06af\u0631\u0647\u0627 \u0648 \u0633\u0627\u0632\u0645\u0627\u0646 \u0647\u0627\u06cc\u06cc \u06a9\u0647 \u062d\u0645\u0627\u06cc\u062a\u0634\u0627\u0646 \u0631\u0627 \u0646\u0634\u0627\u0646 \u0645\u06cc \u062f\u0627\u062f']\n['\u062f\u0631 \u0637\u0648\u0644 \u0645\u0627\u0647 \u0622\u0648\u0631\u06cc\u0644 \u0648 \u062f\u0633\u0627\u0645\u0628\u0631 \u062f\u0631 \u0648\u0627\u0644\u06cc \u0641\u06cc\u0648\u062f\u0648\u0631\u0648\u0646\u0627 \u0646\u0632\u062f\u06cc\u06a9 \u0628\u06cc\u06a9\u0631']\n['\u0645\u0646 \u0645\u06cc \u062e\u0648\u0627\u0647\u0645 \u062f\u0631 \u0645\u0648\u0631\u062f \u0634\u0628\u06a9\u0647 \u0627\u062c\u062a\u0645\u0627\u0639\u06cc \u062a\u062d\u0642\u06cc\u0642\u0627\u062a \u0639\u0644\u0648\u0645 \u06a9\u0627\u0645\u067e\u06cc\u0648\u062a\u0631\u06cc \u0631\u0627 \u062f\u0646']\n```\n\nFor more details, visit this page: https://github.com/persiannlp/parsinlu/ \n", "size_bytes": "1200773595", "downloads": 216}