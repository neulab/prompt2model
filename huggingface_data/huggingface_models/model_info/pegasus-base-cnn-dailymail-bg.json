{"pretrained_model_name": "rmihaylov/pegasus-base-cnn-dailymail-bg", "description": "---\ninference: false\nlanguage:\n- bg\nlicense: mit\ndatasets:\n- oscar\n- chitanka\n- wikipedia\ntags:\n- torch\n---\n\n# PEGASUS BASE\n\nThis model was pretrained on Bulgarian language. It was intorduced in [this paper](https://arxiv.org/pdf/1912.08777.pdf). \n\n## Model description\n\nThe training data is private Bulgarian text from CNN, DailyMail articles. \n\n## Intended uses & limitations\n\nYou can use the raw model for summarization.\n\n### How to use\n\nHere is how to use this model in PyTorch:\n\n```python\n>>> from transformers import PegasusForConditionalGeneration, AutoTokenizer\n>>>\n>>> model_id = \"rmihaylov/pegasus-base-cnn-dailymail-bg\"\n>>> model = PegasusForConditionalGeneration.from_pretrained(model_id)\n>>> tokenizer = AutoTokenizer.from_pretrained(model_id)\n>>>\n>>> text = \"\"\"\u041b\u0443\u043a\u0430\u0448\u0435\u043d\u043a\u043e \u043f\u043e\u0438\u0441\u043a\u0430 \u043e\u0449\u0435 \u043f\u043e\u043b\u0438\u0446\u0438\u044f\u0442\u0430 \"\u0434\u0430 \u0437\u0430\u0449\u0438\u0442\u0438 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0442\u0435 \u043a\u043e\u043b\u0435\u043a\u0442\u0438\u0432\u0438 \u0438 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u043c\u0435\u0434\u0438\u0438 \u043e\u0442 \u0437\u0430\u043f\u043b\u0430\u0445\u0438\u0442\u0435 \u043d\u0430 \u0443\u043b\u0438\u0446\u0430\u0442\u0430\", \u0430 \u043a\u043e\u0439\u0442\u043e \u043e\u0442 \u0434\u044a\u0440\u0436\u0430\u0432\u043d\u0438\u0442\u0435 \u043c\u0435\u0434\u0438\u0438 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0430, \u0438\u0437\u043e\u0431\u0449\u043e \u0434\u0430 \u043d\u0435 \u0441\u0435 \u0432\u0440\u044a\u0449\u0430 \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430. \u041d\u0430 \u0433\u0440\u0430\u043d\u0438\u0447\u043d\u0438\u0442\u0435 \u0441\u043b\u0443\u0436\u0431\u0438 \u0431\u0435 \u043d\u0430\u0440\u0435\u0434\u0435\u043d\u043e \u0434\u0430 \u0437\u0430\u0441\u0438\u043b\u044f\u0442 \u043e\u0445\u0440\u0430\u043d\u0430\u0442\u0430 \u043d\u0430 \u0446\u044f\u043b\u0430\u0442\u0430 \u0433\u0440\u0430\u043d\u0438\u0446\u0430, \"\u0437\u0430 \u0434\u0430 \u043d\u0435 \u0441\u0435 \u0434\u043e\u043f\u0443\u0441\u043a\u0430\u0442 \u0432 \u0411\u0435\u043b\u0430\u0440\u0443\u0441 \u043e\u0442 \u0434\u0440\u0443\u0433\u0438 \u0434\u044a\u0440\u0436\u0430\u0432\u0438 \u0431\u043e\u0439\u0446\u0438, \u043e\u0440\u044a\u0436\u0438\u0435, \u0431\u043e\u0435\u043f\u0440\u0438\u043f\u0430\u0441\u0438, \u043f\u0430\u0440\u0438 \u0437\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u0431\u0435\u0437\u0440\u0435\u0434\u0438\u0446\u0438\u0442\u0435, \u0437\u0430\u0449\u043e\u0442\u043e \u0432\u0438\u0436\u0434\u0430\u043c\u0435, \u0447\u0435 \u0442\u0430\u043a\u0438\u0432\u0430 \u043f\u0430\u0440\u0438 \u043f\u0440\u0438\u0441\u0442\u0438\u0433\u0430\u0442\". \u041c\u0438\u043d\u0438\u0441\u0442\u0435\u0440\u0441\u0442\u0432\u043e\u0442\u043e \u043d\u0430 \u043e\u0442\u0431\u0440\u0430\u043d\u0430\u0442\u0430 \u0442\u0440\u044f\u0431\u0432\u0430 \u0434\u0430 \u0441\u043b\u0435\u0434\u0438 \"\u0434\u0432\u0438\u0436\u0435\u043d\u0438\u0435\u0442\u043e \u043d\u0430 \u0432\u043e\u0439\u0441\u043a\u0438 \u043d\u0430 \u041d\u0410\u0422\u041e \u043d\u0430 \u0442\u0435\u0440\u0438\u0442\u043e\u0440\u0438\u044f\u0442\u0430 \u043d\u0430 \u041f\u043e\u043b\u0448\u0430 \u0438 \u041b\u0438\u0442\u0432\u0430, \u0442\u044f\u0445\u043d\u043e\u0442\u043e \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438 \u0437\u0430\u043c\u0438\u0441\u043b\u0438, \u043a\u043e\u0438\u0442\u043e \u0432 \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432\u0438\u0436\u0434\u0430\u043c\u0435 - \u0438 \u043d\u044f\u043a\u043e\u0438 \u043e\u0442 \u0442\u044f\u0445 \u043d\u0438 \u043a\u0430\u0440\u0430\u0442 \u0434\u0430 \u0441\u0435 \u0437\u0430\u043c\u0438\u0441\u043b\u0438\u043c - \u0438 \u0434\u0430 \u043d\u0435 \u0441\u0435 \u043f\u0440\u0438\u0442\u0435\u0441\u043d\u044f\u0432\u0430 \u0434\u0430 \u0438\u0437\u043a\u0430\u0440\u0432\u0430 \u043d\u0430\u0448\u0438\u0442\u0435 \u0432\u044a\u043e\u0440\u044a\u0436\u0435\u043d\u0438 \u0441\u0438\u043b\u0438 \u0438 \u0442\u0435\u0445\u043d\u0438\u043a\u0430 \u0432 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u0442\u043e \u043d\u0430 \u0442\u044f\u0445\u043d\u043e\u0442\u043e \u043f\u0440\u0438\u0434\u0432\u0438\u0436\u0432\u0430\u043d\u0435\". \u041b\u0443\u043a\u0430\u0448\u0435\u043d\u043a\u043e \u0438\u0437\u0440\u0438\u0447\u043d\u043e \u043f\u043e\u0441\u043e\u0447\u0438 \u0441\u044a\u0431\u0438\u0442\u0438\u044f\u0442\u0430 \u0432 \u0433\u0440\u0430\u0434 \u0413\u0440\u043e\u0434\u043d\u043e, \"\u0437\u0430\u0449\u043e\u0442\u043e \u0442\u0430\u043c \u0438\u043c\u0430 \u043f\u043e-\u0433\u043e\u043b\u044f\u043c\u043e \u0436\u0435\u043b\u0430\u043d\u0438\u0435 \u0437\u0430 \u0434\u0435\u0441\u0442\u0430\u0431\u0438\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0430 \u043e\u0431\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\u0442\u0430, \u043e\u0442\u043a\u043e\u043b\u043a\u043e\u0442\u043e \u0432 \u041c\u0438\u043d\u0441\u043a\". \u0413\u0440\u043e\u0434\u043d\u043e \u0441\u0442\u0430\u043d\u0430 \u0432\u0447\u0435\u0440\u0430 \u043f\u044a\u0440\u0432\u0438\u044f\u0442 \u043f\u043e-\u0433\u043e\u043b\u044f\u043c \u0433\u0440\u0430\u0434, \u0432 \u043a\u043e\u0439\u0442\u043e \u0432\u043b\u0430\u0441\u0442\u0438\u0442\u0435 \u0441\u0435 \u0440\u0430\u0437\u0431\u0440\u0430\u0445\u0430 \u0441 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0430\u0449\u0438\u0442\u0435 \u0434\u0430 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0430\u0442 \u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438 \u043c\u0435\u0441\u0442\u0430 \u0432 \u0446\u0435\u043d\u0442\u044a\u0440\u0430 \u043d\u0430 \u0433\u0440\u0430\u0434\u0430. \u0422\u043e\u0439 \u043d\u0430\u0440\u0435\u0447\u0435 \u043e\u043f\u043e\u0437\u0438\u0446\u0438\u044f\u0442\u0430 \"\u0447\u0435\u0440\u043d\u043e\u0441\u043e\u0442\u043d\u0438\u0446\u0438\", \u0442\u043b\u0430\u0441\u043a\u0430\u0449\u0438 \u0441\u0442\u0440\u0430\u043d\u0430\u0442\u0430 \u043a\u044a\u043c \u043f\u0440\u043e\u043f\u0430\u0441\u0442 \u0438 \u0443\u043d\u0438\u0449\u043e\u0436\u0435\u043d\u0438\u0435, \u043a\u0430\u043a\u0442\u043e \u0438 \u043a\u044a\u043c \u0441\u0431\u043b\u044a\u0441\u044a\u043a \u0441 \"\u0438\u0441\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0438 \u0431\u0440\u0430\u0442\u0441\u043a\u0438\u044f \u0440\u0443\u0441\u043a\u0438 \u043d\u0430\u0440\u043e\u0434\". \u041c\u0435\u0434\u0438\u0438\u0442\u0435 \u0442\u0440\u044f\u0431\u0432\u0430 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u043d\u043e \u0434\u0430 \u0441\u0435 \u0430\u043a\u0442\u0438\u0432\u0438\u0437\u0438\u0440\u0430\u0442 \u0441\u0440\u0435\u0449\u0443 \u0442\u043e\u0432\u0430, \u0437\u0430\u0440\u044a\u0447\u0430 \u041b\u0443\u043a\u0430\u0448\u0435\u043d\u043a\u043e.\"\"\"\n>>>\n>>> batch = tokenizer(\n>>>     src_text, \n>>>     truncation=True, \n>>>     padding=\"longest\", \n>>>     return_tensors=\"pt\", \n>>>     return_token_type_ids=False)\n>>> \n>>> inputs = {\n>>>     'max_length': 150,\n>>>     'min_length': 10,\n>>>     'do_sample': False,\n>>>     'temperature': 1.0,\n>>>     'top_k': 50,\n>>>     'top_p': 1.0,\n>>>     'repetition_penalty': 1.0,\n>>>     'no_repeat_ngram_size': 0,\n>>>     'use_cache': True,\n>>>     'num_beams': 2,\n>>>     'length_penalty': 1.0,\n>>>     'num_return_sequences': 1,\n>>>     'early_stopping': False}\n>>> \n>>> batch.update(inputs)\n>>> \n>>> summary = model.generate(**batch)\n>>> \n>>> tgt_text = tokenizer.batch_decode(summary, skip_special_tokens=True)\n>>> print(tgt_text)\n\n['\u041b\u0443\u043a\u0430\u0448\u0435\u043d\u043a\u043e \u0438\u0437\u0440\u0438\u0447\u043d\u043e \u043f\u043e\u0441\u043e\u0447\u0438 \u0441\u044a\u0431\u0438\u0442\u0438\u044f\u0442\u0430 \u0432 \u0413\u0440\u043e\u0434\u043d\u043e, \"\u0437\u0430\u0449\u043e\u0442\u043e \u0442\u0430\u043c \u0438\u043c\u0430 \u043f\u043e-\u0433\u043e\u043b\u044f\u043c\u043e \u0436\u0435\u043b\u0430\u043d\u0438\u0435 \u0437\u0430 \u0434\u0435\u0441\u0442\u0430\u0431\u0438\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0430 \u043e\u0431\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\u0442\u0430, \u043e\u0442\u043a\u043e\u043b\u043a\u043e\u0442\u043e \u0432 \u041c\u0438\u043d\u0441\u043a\" \u0422\u043e\u0439 \u043d\u0430\u0440\u0435\u0447\u0435 \u043e\u043f\u043e\u0437\u0438\u0446\u0438\u044f\u0442\u0430 \"\u0447\u0435\u0440\u043d\u043e\u0441\u043e\u0442\u043d\u0438\u0446\u0438\", \u0442\u043b\u0430\u0441\u043a\u0430\u0449\u0438 \u0441\u0442\u0440\u0430\u043d\u0430\u0442\u0430 \u043a\u044a\u043c \u043f\u0440\u043e\u043f\u0430\u0441\u0442 \u0438 \u0443\u043d\u0438\u0449\u043e\u0436\u0435\u043d\u0438\u0435, \u043a\u0430\u043a\u0442\u043e \u0438 \u0441\u0431\u043b\u044a\u0441\u044a\u043a \u0441 \"\u0438\u0441\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0438 \u0431\u0440\u0430\u0442\u0441\u043a\u0438\u044f \u0440\u0443\u0441\u043a\u0438 \u043d\u0430\u0440\u043e\u0434\"']\n```\n", "size_bytes": "554782841", "downloads": 2}