{"pretrained_model_name": "talalH/summarizer_on_T5_base", "description": "---\ndatasets:\n- xsum\n- quora\nlanguage:\n- en\nmetrics:\n- rouge\npipeline_tag: text2text-generation\n---\n\n# Model\n\n**NOTE:** **FEEL FREE TO DOWNLOAD FOR INFERENCE YOU WON'T REGRET IT :)**\n\n<!-- Provide a quick summary of what the model is/does. -->\nThis model card provides information about a fine-tuned T5 base model that has been specifically trained for generating summaries. We have made some key modifications to the training process to optimize the model's performance and provide the best possible summaries, particularly supporting greater length outputs. One notable difference between this model and other similar models is that it is trained on the target output length of 512. This means that the model is explicitly trained to generate summaries that are up to 512 tokens long. By focusing on this target output length, we aim to provide summaries that are more comprehensive and informative, while still maintaining a reasonable length for large text.\n\n**Dataset and Training:**\nThe fine-tuned T5 base model is trained on a carefully curated subset of the XSum and ChatGPT datasets. These datasets contain a wide range of text samples, including news articles and conversational data. By utilizing this diverse data, the model gains a broader understanding of language and improves its ability to generate accurate and coherent summaries.\n\n**Transfer Learning for Summarization:**\nTransfer learning is employed to enhance the model's performance in generating summaries. The T5 base model, pre-trained on a large corpus of text, is fine-tuned using the curated dataset mentioned above. This process allows the model to leverage its pre-existing knowledge while adapting specifically to the summarization task. By fine-tuning the model, we aim to improve its ability to capture important information and generate concise summaries.\n\n**Enhanced Support for Greater Length Output:**\nWe are confident that this fine-tuned T5 model will generate the best possible summaries, particularly for supporting greater length outputs. By training the model with a specific focus on generating longer summaries, we have enhanced its ability to handle and convey more detailed information. This makes the model particularly useful in scenarios where longer summaries are required, such as summarizing lengthy documents or providing in-depth analysis.\n\n**Conclusion:**\nThe fine-tuned T5 base model described in this model card offers an advanced summarization capability, with a specific emphasis on supporting greater length outputs. By utilizing a carefully curated dataset and applying transfer learning techniques, the model has been optimized to generate accurate and informative summaries. We believe that this model will be a valuable tool for a wide range of applications that require comprehensive and well-structured summaries.\n\n\n## How to Get Started with the Model\n\nUse the code below to get started with the model.\n\n```python\nfrom transformers import AutoTokenizer, AutoModelForSeq2SeqLM\nfrom math import ceil \n\nmodel_name = \"talalH/summarizer_on_T5_base\"\ntokenizer = AutoTokenizer.from_pretrained(model_name, device_map='auto')\nmodel = AutoModelForSeq2SeqLM.from_pretrained(model_name, device_map='auto')\n\nprint(\"-\"*100)\nprint(\"\\nHi !! ENTER A TEXT TO SUMMARIZE (type 'exit' to end)\\n\")\n\nwhile True:\n    user_input = input(\"USER: \")\n    if user_input.lower() == \"exit\":\n        break\n\n    input_text = user_input\n    input_ids = tokenizer(f'summarize: {input_text}</s>', return_tensors=\"pt\"\n                            , max_length=512, truncation=True,).input_ids\n    min_len = ceil(len(input_text.split())/2)\n    outputs = model.generate(input_ids, temperature=0.3, repetition_penalty=10.0\n                            , num_return_sequences=3, no_repeat_ngram_size=2\n                            , num_beams=10, num_beam_groups=5\n                            , min_length = min_len, max_length=512, diversity_penalty=2.0\n                            )\n    sequences = tokenizer.batch_decode(outputs, skip_special_tokens=True)\n\n    print(\"\\nOUTPUT\")   \n    try:\n        if len(sequences):\n            for seq in sequences:\n                print(\"T5: \",seq,\"\\n\")\n        else: \n            print(\"T5: NO RESPONSE RETURNED\")\n    except:\n        print(\"T5: NO RESPONSE RETURNED\")\n\n    print(\"-\"*100)\n\n```\n<!-- Provide a longer summary of what this model is. -->\n\n- **Developed by:** Talal Hassan (talalhassan141@gmail.com)\n- **Finetuned from model:** T5 BASE\n\n\n## Uses\n\n<!-- Address questions around how the model is intended to be used, including the foreseeable users of the model and those affected by the model. -->\n\nFor Text Summarization\n\n## Training Details\n\nepochs: 4\nWarmup_steps: 50\nmax_step: -1\nlr:5e-5\nbatch_size = 4\n\n- **Hardware Type:** Tesla K80 GPUs\n\n\n## Model Card Authors\n\nTalal Hassan (talalhassan141@gmail.com)\n\n## Model Card Contact\n\nTalal Hassan (talalhassan141@gmail.com)", "size_bytes": "891699345", "downloads": 9}