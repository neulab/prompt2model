{"pretrained_model_name": "krotima1/mbart-at2h-c", "description": "---\nlanguage:\n- cs\n- cs\ntags:\n- abstractive summarization\n- mbart-cc25\n- Czech\nlicense: apache-2.0\ndatasets:\n- private Czech News Center dataset news-based\nmetrics:\n- rouge\n- rougeraw\n---\n\n# mBART fine-tuned model for Czech abstractive summarization (AT2H-C)\nThis model is a fine-tuned checkpoint of [facebook/mbart-large-cc25](https://huggingface.co/facebook/mbart-large-cc25) on the Czech news dataset to produce Czech abstractive summaries.\n## Task\nThe model deals with the task ``Abstract + Text to Headline`` (AT2H) which consists in generating a one- or two-sentence summary considered as a headline from a Czech news text.\n\n## Dataset\nThe model has been trained on the private CNC dataset provided by Czech News Center. The dataset includes 3/4M Czech news-based documents consisting of a Headline, Abstract, and Full-text sections. Truncation and padding were set to 512 tokens for the encoder and 64 for the decoder.\n\n## Training\nThe model has been trained on 4x NVIDIA Tesla V100 32GB for 15 hours, 4x NVIDIA Tesla A100 40GB for 10 hours, and 1x NVIDIA Tesla A100 40GB for 20 hours. During training, the model has seen 5984K documents corresponding to roughly 9 epochs.\n\n# Use\nAssuming that you are using the provided Summarizer.ipynb file.\n```python\ndef summ_config():\n    cfg = OrderedDict([\n        # summarization model - checkpoint from website\n        (\"model_name\", \"krotima1/mbart-at2h-c\"),\n        (\"inference_cfg\", OrderedDict([\n            (\"num_beams\", 4),\n            (\"top_k\", 40),\n            (\"top_p\", 0.92),\n            (\"do_sample\", True),\n            (\"temperature\", 0.89),\n            (\"repetition_penalty\", 1.2),\n            (\"no_repeat_ngram_size\", None),\n            (\"early_stopping\", True),\n            (\"max_length\", 64),\n            (\"min_length\", 10),\n        ])),\n        #texts to summarize\n        (\"text\",\n            [\n                \"Input your Czech text\",\n            ]\n        ),\n    ])\n    return cfg\ncfg = summ_config()\n#load model    \nmodel = AutoModelForSeq2SeqLM.from_pretrained(cfg[\"model_name\"])\ntokenizer = AutoTokenizer.from_pretrained(cfg[\"model_name\"])\n# init summarizer\nsummarize = Summarizer(model, tokenizer, cfg[\"inference_cfg\"])\nsummarize(cfg[\"text\"])\n```", "size_bytes": "2444592057", "downloads": 6}