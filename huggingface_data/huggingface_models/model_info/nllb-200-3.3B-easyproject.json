{"pretrained_model_name": "ychenNLP/nllb-200-3.3B-easyproject", "description": "---\nlanguage:\n- ace\n- acm\n- acq\n- aeb\n- af\n- ajp\n- ak\n- als\n- am\n- apc\n- ar\n- ars\n- ary\n- arz\n- as\n- ast\n- awa\n- ayr\n- azb\n- azj\n- ba\n- bm\n- ban\n- be\n- bem\n- bn\n- bho\n- bjn\n- bo\n- bs\n- bug\n- bg\n- ca\n- ceb\n- cs\n- cjk\n- ckb\n- crh\n- cy\n- da\n- de\n- dik\n- dyu\n- dz\n- el\n- en\n- eo\n- et\n- eu\n- ee\n- fo\n- fj\n- fi\n- fon\n- fr\n- fur\n- fuv\n- gaz\n- gd\n- ga\n- gl\n- gn\n- gu\n- ht\n- ha\n- he\n- hi\n- hne\n- hr\n- hu\n- hy\n- ig\n- ilo\n- id\n- is\n- it\n- jv\n- ja\n- kab\n- kac\n- kam\n- kn\n- ks\n- ka\n- kk\n- kbp\n- kea\n- khk\n- km\n- ki\n- rw\n- ky\n- kmb\n- kmr\n- knc\n- kg\n- ko\n- lo\n- lij\n- li\n- ln\n- lt\n- lmo\n- ltg\n- lb\n- lua\n- lg\n- luo\n- lus\n- lvs\n- mag\n- mai\n- ml\n- mar\n- min\n- mk\n- mt\n- mni\n- mos\n- mi\n- my\n- nl\n- nn\n- nb\n- npi\n- nso\n- nus\n- ny\n- oc\n- ory\n- pag\n- pa\n- pap\n- pbt\n- pes\n- plt\n- pl\n- pt\n- prs\n- quy\n- ro\n- rn\n- ru\n- sg\n- sa\n- sat\n- scn\n- shn\n- si\n- sk\n- sl\n- sm\n- sn\n- sd\n- so\n- st\n- es\n- sc\n- sr\n- ss\n- su\n- sv\n- swh\n- szl\n- ta\n- taq\n- tt\n- te\n- tg\n- tl\n- th\n- ti\n- tpi\n- tn\n- ts\n- tk\n- tum\n- tr\n- tw\n- tzm\n- ug\n- uk\n- umb\n- ur\n- uzn\n- vec\n- vi\n- war\n- wo\n- xh\n- ydd\n- yo\n- yue\n- zh\n- zsm\n- zu\n\nlanguage_details: \"ace_Arab, ace_Latn, acm_Arab, acq_Arab, aeb_Arab, afr_Latn, ajp_Arab, aka_Latn, amh_Ethi, apc_Arab, arb_Arab, ars_Arab, ary_Arab, arz_Arab, asm_Beng, ast_Latn, awa_Deva, ayr_Latn, azb_Arab, azj_Latn, bak_Cyrl, bam_Latn, ban_Latn,bel_Cyrl, bem_Latn, ben_Beng, bho_Deva, bjn_Arab, bjn_Latn, bod_Tibt, bos_Latn, bug_Latn, bul_Cyrl, cat_Latn, ceb_Latn, ces_Latn, cjk_Latn, ckb_Arab, crh_Latn, cym_Latn, dan_Latn, deu_Latn, dik_Latn, dyu_Latn, dzo_Tibt, ell_Grek, eng_Latn, epo_Latn, est_Latn, eus_Latn, ewe_Latn, fao_Latn, pes_Arab, fij_Latn, fin_Latn, fon_Latn, fra_Latn, fur_Latn, fuv_Latn, gla_Latn, gle_Latn, glg_Latn, grn_Latn, guj_Gujr, hat_Latn, hau_Latn, heb_Hebr, hin_Deva, hne_Deva, hrv_Latn, hun_Latn, hye_Armn, ibo_Latn, ilo_Latn, ind_Latn, isl_Latn, ita_Latn, jav_Latn, jpn_Jpan, kab_Latn, kac_Latn, kam_Latn, kan_Knda, kas_Arab, kas_Deva, kat_Geor, knc_Arab, knc_Latn, kaz_Cyrl, kbp_Latn, kea_Latn, khm_Khmr, kik_Latn, kin_Latn, kir_Cyrl, kmb_Latn, kon_Latn, kor_Hang, kmr_Latn, lao_Laoo, lvs_Latn, lij_Latn, lim_Latn, lin_Latn, lit_Latn, lmo_Latn, ltg_Latn, ltz_Latn, lua_Latn, lug_Latn, luo_Latn, lus_Latn, mag_Deva, mai_Deva, mal_Mlym, mar_Deva, min_Latn, mkd_Cyrl, plt_Latn, mlt_Latn, mni_Beng, khk_Cyrl, mos_Latn, mri_Latn, zsm_Latn, mya_Mymr, nld_Latn, nno_Latn, nob_Latn, npi_Deva, nso_Latn, nus_Latn, nya_Latn, oci_Latn, gaz_Latn, ory_Orya, pag_Latn, pan_Guru, pap_Latn, pol_Latn, por_Latn, prs_Arab, pbt_Arab, quy_Latn, ron_Latn, run_Latn, rus_Cyrl, sag_Latn, san_Deva, sat_Beng, scn_Latn, shn_Mymr, sin_Sinh, slk_Latn, slv_Latn, smo_Latn, sna_Latn, snd_Arab, som_Latn, sot_Latn, spa_Latn, als_Latn, srd_Latn, srp_Cyrl, ssw_Latn, sun_Latn, swe_Latn, swh_Latn, szl_Latn, tam_Taml, tat_Cyrl, tel_Telu, tgk_Cyrl, tgl_Latn, tha_Thai, tir_Ethi, taq_Latn, taq_Tfng, tpi_Latn, tsn_Latn, tso_Latn, tuk_Latn, tum_Latn, tur_Latn, twi_Latn, tzm_Tfng, uig_Arab, ukr_Cyrl, umb_Latn, urd_Arab, uzn_Latn, vec_Latn, vie_Latn, war_Latn, wol_Latn, xho_Latn, ydd_Hebr, yor_Latn, yue_Hant, zho_Hans, zho_Hant, zul_Latn\"\n\ntags:\n- nllb\n- translation\nlicense: \"cc-by-nc-4.0\"\ndatasets:\n- flores-200\nmetrics:\n- bleu\n- spbleu\n- chrf++\ninference: false\n---\n\n<!-- This model card has been generated automatically according to the information the Trainer had access to. You\nshould probably proofread and complete it, then remove this comment. -->\n\nThis model is a fine-tuned version of [facebook/nllb-200-3.3B](https://huggingface.co/facebook/nllb-200-3.3B) on the [EasyProject](https://github.com/edchengg/easyproject) dataset.\n\n### Framework versions\n\n- Transformers 4.29.2\n- Pytorch 1.11.0+cu113\n- Datasets 2.8.0\n- Tokenizers 0.13.2\n\n- Paper link: [Frustratingly Easy Label Projection for Cross-lingual Transfer](https://arxiv.org/abs/2211.15613)\n- Github link: https://github.com/edchengg/easyproject\n- Please use the transformers==4.29.2 library as Huggingface recently fixed a bug in [NLLB tokenizer](https://github.com/huggingface/transformers/pull/22313)\n\n# Code\n```python\nfrom transformers import AutoModelForSeq2SeqLM, AutoTokenizer\nimport torch\n\ntokenizer = AutoTokenizer.from_pretrained(\n        \"facebook/nllb-200-distilled-600M\",  src_lang=\"eng_Latn\")\n    \nprint(\"Loading model\")\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"ychenNLP/nllb-200-3.3b-easyproject\")\nmodel.cuda()\n\ninput_chunks = [\"A translator always risks inadvertently introducing source-language words, grammar, or syntax into the target-language rendering.\"]\nprint(\"Start translation...\")\noutput_result = []\n\nbatch_size = 1\nfor idx in tqdm(range(0, len(input_chunks), batch_size)):\n    start_idx = idx\n    end_idx = idx + batch_size\n    inputs = tokenizer(input_chunks[start_idx: end_idx], padding=True, truncation=True, max_length=128, return_tensors=\"pt\").to('cuda')\n\n    with torch.no_grad():\n        translated_tokens = model.generate(**inputs, forced_bos_token_id=tokenizer.lang_code_to_id[\"zho_Hans\"], \n                        max_length=128, num_beams=5, num_return_sequences=1, early_stopping=True)\n\n    output = tokenizer.batch_decode(translated_tokens, skip_special_tokens=True)\n    output_result.extend(output)\nprint(output_result)\n```\n\n## Citation\n\n```\n@inproceedings{chen2023easyproject,\n  title={Frustratingly Easy Label Projection for Cross-lingual Transfer},\n  author={Chen, Yang and Jiang, Chao and Ritter, Alan and Xu, Wei},\n  booktitle={Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Findings)},\n  year={2023}\n}\n```", "size_bytes": 19692781568, "downloads": 64}