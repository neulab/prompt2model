{"pretrained_model_name": "shibing624/bart4csc-base-chinese", "description": "---\nlanguage: \n- zh\ntags:\n- bart\n- pytorch\n- zh\n- Text2Text-Generation\nlicense: \"apache-2.0\"\nwidget:\n- text: \"\u5c11\u5148\u961f\u5458\u56e0\u8be5\u4e3a\u8001\u4eba\u8ba9\u5750\"\n\n---\n\n# Bart for Chinese Spelling Correction(bart4csc) Model\nBART\u4e2d\u6587\u62fc\u5199\u7ea0\u9519\u6a21\u578b\n\n`bart4csc-base-chinese` evaluate SIGHAN2015 test data\uff1a\n\nSentence Level: acc:0.6845, precision:0.6984, recall:0.6354, f1:0.6654\n\ncase:\n\n|input_text|pred|\n|:-- |:--- |\n|\u8fb0\u5bfc\u4e2d\u5f15\u8ff0\u5979\u7684\u8bdd\u8bf4\uff1a\u6838\u5b50\u95f4\u9898\u7684\u89e3\u51b3\u4e4b\u9053\u7cfb\u4e8e\u514b\u4ec0\u7c73\u5c14\u7eb7\u4e89\u3002|\u62a5\u5bfc\u4e2d\u5f15\u8ff0\u5979\u7684\u8bdd\u8bf4\uff1a\u6838\u5b50\u95ee\u9898\u7684\u89e3\u51b3\u4e4b\u9053\u7cfb\u4e8e\u514b\u4ec0\u7c73\u5c14\u7eb7\u4e89\u3002|\n|\u62a5\u5bfc\u5e76\u672b\u8bf4\u660e\u4e8b\u6545\u53d1\u751f\u7684\u539f\u56e0\u3002|\u62a5\u5bfc\u5e76\u672a\u8bf4\u660e\u4e8b\u6545\u53d1\u751f\u7684\u539f\u56e0\u3002|\n\n\u8bad\u7ec3\u4f7f\u7528\u4e86SIGHAN+Wang271K\u4e2d\u6587\u7ea0\u9519\u6570\u636e\u96c6\uff0c\u5728SIGHAN2015\u7684\u6d4b\u8bd5\u96c6\u4e0a\u8fbe\u5230\u63a5\u8fd1SOTA\u6c34\u5e73\u3002\n\n\n## Usage\n\n\u672c\u9879\u76ee\u5f00\u6e90\u5728\u6587\u672c\u751f\u6210\u9879\u76ee\uff1a[textgen](https://github.com/shibing624/textgen)\uff0c\u53ef\u652f\u6301Bart\u6a21\u578b\uff0c\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u8c03\u7528\uff1a\n\nInstall package:\n```shell\npip install -U textgen\n```\n\n```python\nfrom transformers import BertTokenizerFast\nfrom textgen import BartSeq2SeqModel\n\ntokenizer = BertTokenizerFast.from_pretrained('shibing624/bart4csc-base-chinese')\nmodel = BartSeq2SeqModel(\n    encoder_type='bart',\n    encoder_decoder_type='bart',\n    encoder_decoder_name='shibing624/bart4csc-base-chinese',\n    tokenizer=tokenizer,\n    args={\"max_length\": 128, \"eval_batch_size\": 128})\nsentences = [\"\u5c11\u5148\u961f\u5458\u56e0\u8be5\u4e3a\u8001\u4eba\u8ba9\u5750\"]\nprint(model.predict(sentences))\n# ['\u5c11\u5148\u961f\u5458\u5e94\u8be5\u4e3a\u8001\u4eba\u8ba9\u5ea7']\n```\n\n\n\u6a21\u578b\u6587\u4ef6\u7ec4\u6210\uff1a\n```\nbart4csc-base-chinese\n    \u251c\u2500\u2500 config.json\n    \u251c\u2500\u2500 model_args.json\n    \u251c\u2500\u2500 pytorch_model.bin\n    \u251c\u2500\u2500 special_tokens_map.json\n    \u251c\u2500\u2500 tokenizer_config.json\n    \u251c\u2500\u2500 spiece.model\n    \u2514\u2500\u2500 vocab.txt\n```\n\n\n### \u8bad\u7ec3\u6570\u636e\u96c6\n#### SIGHAN+Wang271K\u4e2d\u6587\u7ea0\u9519\u6570\u636e\u96c6\n\n\n| \u6570\u636e\u96c6 | \u8bed\u6599 | \u4e0b\u8f7d\u94fe\u63a5 | \u538b\u7f29\u5305\u5927\u5c0f |\n| :------- | :--------- | :---------: | :---------: |\n| **`SIGHAN+Wang271K\u4e2d\u6587\u7ea0\u9519\u6570\u636e\u96c6`** | SIGHAN+Wang271K(27\u4e07\u6761) | [\u767e\u5ea6\u7f51\u76d8\uff08\u5bc6\u780101b9\uff09](https://pan.baidu.com/s/1BV5tr9eONZCI0wERFvr0gQ)| 106M |\n| **`\u539f\u59cbSIGHAN\u6570\u636e\u96c6`** | SIGHAN13 14 15 | [\u5b98\u65b9csc.html](http://nlp.ee.ncu.edu.tw/resource/csc.html)| 339K |\n| **`\u539f\u59cbWang271K\u6570\u636e\u96c6`** | Wang271K | [Automatic-Corpus-Generation dimmywang\u63d0\u4f9b](https://github.com/wdimmy/Automatic-Corpus-Generation/blob/master/corpus/train.sgml)| 93M |\n\n\nSIGHAN+Wang271K\u4e2d\u6587\u7ea0\u9519\u6570\u636e\u96c6\uff0c\u6570\u636e\u683c\u5f0f\uff1a\n```json\n[\n    {\n        \"id\": \"B2-4029-3\",\n        \"original_text\": \"\u665a\u95f4\u4f1a\u542c\u5230\u55d3\u97f3\uff0c\u767d\u5929\u7684\u65f6\u5019\u5927\u5bb6\u90fd\u4e0d\u4f1a\u592a\u5728\u610f\uff0c\u4f46\u662f\u5728\u7761\u89c9\u7684\u65f6\u5019\u8fd9\u55d3\u97f3\u6210\u4e3a\u5927\u5bb6\u7684\u6076\u68a6\u3002\",\n        \"wrong_ids\": [\n            5,\n            31\n        ],\n        \"correct_text\": \"\u665a\u95f4\u4f1a\u542c\u5230\u566a\u97f3\uff0c\u767d\u5929\u7684\u65f6\u5019\u5927\u5bb6\u90fd\u4e0d\u4f1a\u592a\u5728\u610f\uff0c\u4f46\u662f\u5728\u7761\u89c9\u7684\u65f6\u5019\u8fd9\u566a\u97f3\u6210\u4e3a\u5927\u5bb6\u7684\u6076\u68a6\u3002\"\n    },\n]\n```\n\n\n- \u5982\u679c\u9700\u8981\u8bad\u7ec3Bart\u6a21\u578b\uff0c\u8bf7\u53c2\u8003[https://github.com/shibing624/textgen/blob/main/examples/seq2seq/training_bartseq2seq_zh_demo.py](https://github.com/shibing624/textgen/blob/main/examples/seq2seq/training_bartseq2seq_zh_demo.py)\n- \u4e86\u89e3\u66f4\u591a\u7ea0\u9519\u6a21\u578b\uff0c\u8bf7\u79fb\u6b65\uff1a[https://github.com/shibing624/pycorrector](https://github.com/shibing624/pycorrector)\n\n## Citation\n\n```latex\n@software{textgen,\n  author = {Xu Ming},\n  title = {textgen: Implementation of Text Generation models},\n  year = {2022},\n  url = {https://github.com/shibing624/textgen},\n}\n```\n", "size_bytes": "465198009", "downloads": 905}