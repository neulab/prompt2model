{"pretrained_model_name": "Narrativa/NarbioBART", "description": "---\nlanguage: es\ntags:\n- Spanish\n- BART\n- biology\n- medical\n- seq2seq\nlicense: mit\nthumbnail: https://huggingface.co/Narrativa/NarbioBART/resolve/main/NarbioBART-logo.png\n---\n\n<div style=\"text-align:center;width:250px;height:250px;\">\n    <img src=\"https://huggingface.co/Narrativa/NarbioBART/resolve/main/NarbioBART-logo.png\" alt=\"NarbioBART logo\"\">\n</div>\n\n\n\n## \ud83e\udda0 NarbioBART \ud83c\udfe5 \n\n**NarbioBART** (base) is a BART-like model trained on [Spanish Biomedical Crawled Corpus](https://zenodo.org/record/5510033#.Yhdk1ZHMLJx).\n\nBART is a transformer *encoder-decoder* (seq2seq) model with a bidirectional (BERT-like) encoder and an autoregressive (GPT-like) decoder. BART is pre-trained by (1) corrupting text with an arbitrary noising function and (2) learning a model to reconstruct the original text.\n\nThis model is particularly effective when fine-tuned for text generation tasks (e.g., summarization, translation) but also works well for comprehension tasks (e.g., text classification, question answering).\n\n\n\n## Training details\n\n- Dataset: `Spanish Biomedical Crawled Corpus` - 90% for training / 10% for validation.\n- Training script: see [here](https://github.com/huggingface/transformers/blob/main/examples/flax/language-modeling/run_bart_dlm_flax.py)\n\n\n## [Evaluation metrics](https://huggingface.co/mrm8488/bart-bio-base-es/tensorboard?params=scalars#frame) \ud83e\uddfe\n\n|Metric | # Value |\n|-------|---------|\n|Accuracy| 0.802|\n|Loss| 1.04|\n\n\n## Benchmarks \ud83d\udd28\n\nWIP \ud83d\udea7\n\n## How to use with `transformers`\n\n```py\nfrom transformers import BartForConditionalGeneration, BartTokenizer\n\nmodel_id = \"Narrativa/NarbioBART\"\n\nmodel = BartForConditionalGeneration.from_pretrained(model_id, forced_bos_token_id=0)\ntokenizer = BartTokenizer.from_pretrained(model_id)\n\ndef fill_mask_span(text):\n  batch = tokenizer(text, return_tensors=\"pt\")\n  generated_ids = model.generate(batch[\"input_ids\"])\n  print(tokenizer.batch_decode(generated_ids, skip_special_tokens=True))\n\ntext = \"your text with a <mask> token.\"\nfill_mask_span(text)\n```\n\n## Citation\n\n```\n@misc {narrativa_2023,\n\tauthor       = { {Narrativa} },\n\ttitle        = { NarbioBART (Revision c9a4e07) },\n\tyear         = 2023,\n\turl          = { https://huggingface.co/Narrativa/NarbioBART },\n\tdoi          = { 10.57967/hf/0500 },\n\tpublisher    = { Hugging Face }\n}\n```", "size_bytes": "563944221", "downloads": 2}