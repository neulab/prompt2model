{"pretrained_model_name": "olgaduchovny/t5-base-ner-mit-restaurant", "description": "---\nlanguage: \n  - en\n\ntags:\n- pytorch\n- ner\n- text generation\n- seq2seq\n\ninference: false\n\nlicense: mit\n\ndatasets:\n- conll2003\n\nmetrics:\n- f1\n---\n# t5-base-qa-ner-conll\n\nUnofficial implementation of [InstructionNER](https://arxiv.org/pdf/2203.03903v1.pdf).\nt5-base model tuned on conll2003 dataset.\n\nhttps://github.com/ovbystrova/InstructionNER \n\n## Inference \n```shell\ngit clone https://github.com/ovbystrova/InstructionNER \ncd InstructionNER\n```\n\n```python\nfrom instruction_ner.model import Model\n\nmodel = Model(\n    model_path_or_name=\"olgaduchovny/t5-base-ner-mit-restaurant\",\n    tokenizer_path_or_name=\"olgaduchovny/t5-base-mit-restaurant\"\n)\n\noptions = [\"LOC\", \"PER\", \"ORG\", \"MISC\"]\n\ninstruction = \"please extract entities and their types from the input sentence, \" \\\n              \"all entity types are in options\"\n\ntext = \"Once I visited Sovok in Nizny Novgorod. I had asian wok there. It was the best WOK i ever had\"\\\n        \"It was cheap but lemonades cost 5 dollars.\"\n\ngeneration_kwargs = {\n    \"num_beams\": 2,\n    \"max_length\": 128\n}\n\npred_spans = model.predict(\n    text=text,\n    generation_kwargs=generation_kwargs,\n    instruction=instruction,\n    options=options\n)\n\n>>> ('sovok is a Restaurant_Name, Nizny Novgorod is a Location, asian wok is a Dish, cheap is a Price, lemonades is a Dish, 5 dollars is a Price.',\n [(24, 38, 'Location'),\n  (46, 55, 'Dish'),\n  (100, 105, 'Price'),\n  (110, 119, 'Dish'),\n  (125, 134, 'Price')])\n```", "size_bytes": "891730879", "downloads": 12}