{"pretrained_model_name": "amphora/FinABSA-Longer", "description": "---\nlanguage: en        # <-- my language\nwidget:\n - text: \" Chinese stocks\u2019 plunge on Monday over fears about China\u2019s new leadership team \u201cmay be misguided,\u201d consulting firm Teneo said. Chinese stocks in Hong Kong and New York, especially internet tech giants such as [TGT], dropped on the first trading day after Chinese President Xi Jinping cemented his firm grip on power with a new core leadership team filled with his loyalists. Over the last several years, Xi has shown a preference for greater state involvement in the economy. \u201cClose relationships with Xi notwithstanding, Li Qiang, Li Xi, and Cai Qi all enter the [Politburo standing committee] after heading up rich provinces where economic growth is still the top priority,\u201d Teneo Managing Director Gabriel Wildau and a team said in a note.\"\ntags:\n- t5\n- finbert\n- financial-sentiment-analysis\n- sentiment-analysis\nlicense:\n- apache-2.0\n---\n## Model Description\nFinABSA-Longer is a T5-Large model trained for Aspect-Based Sentiment Analysis(ABSA) tasks using [SEntFiN 1.0](https://asistdl.onlinelibrary.wiley.com/doi/10.1002/asi.24634?af=R) and additional augmentation techniques. It shows robust behavior to even longer sequences compared to the previous [FinABSA model](https://huggingface.co/amphora/FinABSA). By replacing the target aspect with a [TGT] token the model predicts the sentiment concentrating to the aspect.[GitHub Repo](https://github.com/guijinSON/FinABSA)\n## How to use\nYou can use this model directly using the AutoModelForSeq2SeqLM class.\n```python\n>>> from transformers import AutoModelForSeq2SeqLM, AutoTokenizer\n\n>>> tokenizer = AutoTokenizer.from_pretrained(\"amphora/FinABSA\")\n>>> model = AutoModelForSeq2SeqLM.from_pretrained(\"amphora/FinABSA\")\n\n>>> input_str = \"[TGT] stocks dropped 42% while Samsung rallied.\"\n>>> input = tokenizer(input_str, return_tensors='pt')\n>>> output = model.generate(**input, max_length=20)\n>>> print(tokenizer.decode(output[0]))\nThe sentiment for [TGT] in the given sentence is NEGATIVE.\n>>> input_str = \"Tesla stocks dropped 42% while [TGT] rallied.\"\n>>> input = tokenizer(input_str, return_tensors='pt')\n>>> output = model.generate(**input, max_length=20)\n>>> print(tokenizer.decode(output[0]))\nThe sentiment for [TGT] in the given sentence is POSITIVE.\n```\n## Evaluation Results\nUsing a test split arbitarly extracted from [SEntFiN 1.0](https://asistdl.onlinelibrary.wiley.com/doi/10.1002/asi.24634?af=R) the model scores an average accuracy of 87%.", "size_bytes": "2950739399", "downloads": 46}