{"pretrained_model_name": "DunnBC22/pegasus-multi_news-NewsSummarization_BBC", "description": "---\ntags:\n- generated_from_trainer\nmodel-index:\n- name: pegasus-multi_news-NewsSummarization_BBC\n  results: []\nlanguage:\n- en\nmetrics:\n- rouge\npipeline_tag: summarization\n---\n\n# pegasus-multi_news-NewsSummarization_BBC\n\nThis model is a fine-tuned version of [google/pegasus-multi_news](https://huggingface.co/google/pegasus-multi_news).\n\n## Model description\n\nThis is a text summarization model of news articles.\n\nFor more information on how it was created, check out the following link: https://github.com/DunnBC22/NLP_Projects/blob/main/Text%20Summarization/Text_Summarization_BBC_News-Pegasus.ipynb\n\n## Intended uses & limitations\n\nThis model is intended to demonstrate my ability to solve a complex problem using technology.\n\n## Training and evaluation data\n\nDataset Source: https://www.kaggle.com/datasets/pariza/bbc-news-summary\n\n## Training procedure\n\n### Training hyperparameters\n\nThe following hyperparameters were used during training:\n- learning_rate: 2e-05\n- train_batch_size: 1\n- eval_batch_size: 1\n- seed: 42\n- gradient_accumulation_steps: 16\n- total_train_batch_size: 16\n- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08\n- lr_scheduler_type: linear\n- lr_scheduler_warmup_steps: 50\n- num_epochs: 2\n\n### Training results\n\nUnfortunately, I did not set the metrics to automatically upload here. They are as follows:\n\n| Training Loss | Epoch | Step |  rouge1  |  rouge2  |  rougeL  |  rougeLsum |\n|:-------------:|:-----:|:----:|:--------:|:--------:|:--------:|:----------:|\n|    6.41979    |  2.0  | 214  | 0.584474 | 0.463574 | 0.408729 |  0.408431  |\n\n### Framework versions\n\n- Transformers 4.21.3\n- Pytorch 1.12.1\n- Datasets 2.4.0\n- Tokenizers 0.12.1", "size_bytes": "2283790449", "downloads": 1462}