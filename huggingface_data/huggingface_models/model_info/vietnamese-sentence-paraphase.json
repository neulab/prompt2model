{"pretrained_model_name": "chieunq/vietnamese-sentence-paraphase", "description": "---\nlanguage:\n- vi\ntags:\n- vi-T5\n- paraphase\n- sentence-paraphase\n---\nThis is tool for paraphase Vietnamese sentence. \n### How to run\nFor more details, do check out [our Github repo](https://github.com/nqchieutb01/vietnamese-sentence-paraphase). \n\n```python\nCKPT = 'chieunq/vietnamese-sentence-paraphase'\nfrom transformers import MT5Tokenizer, MT5ForConditionalGeneration\ntokenizer = MT5Tokenizer.from_pretrained(CKPT)\nmodel = MT5ForConditionalGeneration.from_pretrained(CKPT)\ndef paraphase(text):\n    inputs = tokenizer(text, padding='longest', max_length=64, return_tensors='pt')\n    input_ids = inputs.input_ids\n    attention_mask = inputs.attention_mask\n    output = model.generate(input_ids, attention_mask=attention_mask, max_length=64)\n    return tokenizer.decode(output[0], skip_special_tokens=True)\n\ntexts = [\n        \"Th\u1eadt t\u1ef1 h\u00e0o khi l\u00e0 sinh vi\u00ean tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7\",\n        \"C\u00e1ch ki\u1ebfm nhi\u1ec1u ti\u1ec1n ?\",\n        \"Nh\u1eefng nguy\u00ean l\u00ed c\u01a1 b\u1ea3n c\u1ee7a v\u1eadt l\u00fd ?\",\n        \"L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 h\u1ecdc ng\u00f4n ng\u1eef Java\",\n        \"Ngo\u00e0i ra, n\u1eafng n\u00f3ng c\u00f2n c\u00f3 th\u1ec3 g\u00e2y t\u00ecnh tr\u1ea1ng m\u1ea5t n\u01b0\u1edbc, ki\u1ec7t s\u1ee9c, \u0111\u1ed9t q\u1ee5y do s\u1ed1c nhi\u1ec7t \u0111\u1ed1i v\u1edbi c\u01a1 th\u1ec3 ng\u01b0\u1eddi khi ti\u1ebfp x\u00fac l\u00e2u v\u1edbi n\u1ec1n nhi\u1ec7t \u0111\u1ed9 cao.\"\n        ]\nfor text in texts:\n    print(f'Input: {text}')\n    print(f'Output: {paraphase(text)}')\n    print('-'*100)\n\n```\n### Output\n```\nInput: Th\u1eadt t\u1ef1 h\u00e0o khi l\u00e0 sinh vi\u00ean tr\u01b0\u1eddng \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7\nOutput: L\u00e0 sinh vi\u00ean \u0110\u1ea1i h\u1ecdc C\u00f4ng ngh\u1ec7, t\u00f4i r\u1ea5t t\u1ef1 h\u00e0o v\u1ec1 \u0111i\u1ec1u \u0111\u00f3.\n----------------------------------------------------------------------------------------------------\nInput: C\u00e1ch ki\u1ebfm nhi\u1ec1u ti\u1ec1n ?\nOutput: M\u1ed9t s\u1ed1 c\u00e1ch \u0111\u1ec3 ki\u1ebfm \u0111\u01b0\u1ee3c nhi\u1ec1u ti\u1ec1n l\u00e0 g\u00ec?\n----------------------------------------------------------------------------------------------------\nInput: Nh\u1eefng nguy\u00ean l\u00ed c\u01a1 b\u1ea3n c\u1ee7a v\u1eadt l\u00fd ?\nOutput: C\u00e1c nguy\u00ean t\u1eafc c\u01a1 b\u1ea3n c\u1ee7a v\u1eadt l\u00fd l\u00e0 g\u00ec?\n----------------------------------------------------------------------------------------------------\nInput: L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 h\u1ecdc ng\u00f4n ng\u1eef Java\nOutput: C\u00e1c b\u01b0\u1edbc \u0111\u1ec3 th\u00e0nh th\u1ea1o ng\u00f4n ng\u1eef Java l\u00e0 g\u00ec?\n----------------------------------------------------------------------------------------------------\nInput: Ngo\u00e0i ra, n\u1eafng n\u00f3ng c\u00f2n c\u00f3 th\u1ec3 g\u00e2y t\u00ecnh tr\u1ea1ng m\u1ea5t n\u01b0\u1edbc, ki\u1ec7t s\u1ee9c, \u0111\u1ed9t q\u1ee5y do s\u1ed1c nhi\u1ec7t \u0111\u1ed1i v\u1edbi c\u01a1 th\u1ec3 ng\u01b0\u1eddi khi ti\u1ebfp x\u00fac l\u00e2u v\u1edbi n\u1ec1n nhi\u1ec7t \u0111\u1ed9 cao.\nOutput: H\u01a1n n\u1eefa, n\u1eafng n\u00f3ng c\u00f3 th\u1ec3 d\u1eabn \u0111\u1ebfn m\u1ea5t n\u01b0\u1edbc, ki\u1ec7t s\u1ee9c, \u0111\u1ed9t qu\u1ef5 do s\u1ed1c nhi\u1ec7t \u0111\u1ed1i v\u1edbi c\u01a1 th\u1ec3 ng\u01b0\u1eddi khi ti\u1ebfp x\u00fac l\u00e2u v\u1edbi n\u1ec1n nhi\u1ec7t \u0111\u1ed9 cao.\n----------------------------------------------------------------------------------------------------\n```", "size_bytes": "1014776021", "downloads": 25}