{"pretrained_model_name": "google/deplot", "description": "---\nlanguage:\n  - en\n  - fr\n  - ro\n  - de\n  - multilingual\ninference: false\npipeline_tag: visual-question-answering\nlicense: apache-2.0\n---\n# Model card for DePlot\n\n<img src=\"https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/transformers/model_doc/deplot_architecture.png\"\nalt=\"drawing\" width=\"600\"/>\n\n\n#  Table of Contents\n\n0. [TL;DR](#TL;DR)\n1. [Using the model](#using-the-model)\n2. [Contribution](#contribution)\n3. [Citation](#citation)\n\n# TL;DR\n\nThe abstract of the paper states that: \n\n> Visual language such as charts and plots is ubiquitous in the human world. Comprehending plots and charts requires strong reasoning skills. Prior state-of-the-art (SOTA) models require at least tens of thousands of training examples and their reasoning capabilities are still much limited, especially on complex human-written queries. This paper presents the first one-shot solution to visual language reasoning. We decompose the challenge of visual language reasoning into two steps: (1) plot-to-text translation, and (2) reasoning over the translated text. The key in this method is a modality conversion module, named as DePlot, which translates the image of a plot or chart to a linearized table. The output of DePlot can then be directly used to prompt a pretrained large language model (LLM), exploiting the few-shot reasoning capabilities of LLMs. To obtain DePlot, we standardize the plot-to-table task by establishing unified task formats and metrics, and train DePlot end-to-end on this task. DePlot can then be used off-the-shelf together with LLMs in a plug-and-play fashion. Compared with a SOTA model finetuned on more than >28k data points, DePlot+LLM with just one-shot prompting achieves a 24.0% improvement over finetuned SOTA on human-written queries from the task of chart QA.\n\n\n# Using the model \n\nYou can run a prediction by querying an input image together with a question as follows:\n\n```python\nfrom transformers import Pix2StructProcessor, Pix2StructForConditionalGeneration\nimport requests\nfrom PIL import Image\n\nprocessor = Pix2StructProcessor.from_pretrained('google/deplot')\nmodel = Pix2StructForConditionalGeneration.from_pretrained('google/deplot')\n\nurl = \"https://raw.githubusercontent.com/vis-nlp/ChartQA/main/ChartQA%20Dataset/val/png/5090.png\"\nimage = Image.open(requests.get(url, stream=True).raw)\n\ninputs = processor(images=image, text=\"Generate underlying data table of the figure below:\", return_tensors=\"pt\")\npredictions = model.generate(**inputs, max_new_tokens=512)\nprint(processor.decode(predictions[0], skip_special_tokens=True))\n```\n\n# Converting from T5x to huggingface\n\nYou can use the [`convert_pix2struct_checkpoint_to_pytorch.py`](https://github.com/huggingface/transformers/blob/main/src/transformers/models/pix2struct/convert_pix2struct_original_pytorch_to_hf.py) script as follows:\n```bash\npython convert_pix2struct_checkpoint_to_pytorch.py --t5x_checkpoint_path PATH_TO_T5X_CHECKPOINTS --pytorch_dump_path PATH_TO_SAVE --is_vqa\n```\nif you are converting a large model, run:\n```bash\npython convert_pix2struct_checkpoint_to_pytorch.py --t5x_checkpoint_path PATH_TO_T5X_CHECKPOINTS --pytorch_dump_path PATH_TO_SAVE --use-large --is_vqa\n```\nOnce saved, you can push your converted model with the following snippet:\n```python\nfrom transformers import Pix2StructForConditionalGeneration, Pix2StructProcessor\n\nmodel = Pix2StructForConditionalGeneration.from_pretrained(PATH_TO_SAVE)\nprocessor = Pix2StructProcessor.from_pretrained(PATH_TO_SAVE)\n\nmodel.push_to_hub(\"USERNAME/MODEL_NAME\")\nprocessor.push_to_hub(\"USERNAME/MODEL_NAME\")\n```\n\n# Contribution\n\nThis model was originally contributed by Fangyu Liu, Julian Martin Eisenschlos et al. and added to the Hugging Face ecosystem by [Younes Belkada](https://huggingface.co/ybelkada).\n\n# Citation\n\nIf you want to cite this work, please consider citing the original paper:\n```\n@misc{liu2022deplot,\n      title={DePlot: One-shot visual language reasoning by plot-to-table translation},\n      author={Liu, Fangyu and Eisenschlos, Julian Martin and Piccinno, Francesco and Krichene, Syrine and Pang, Chenxi and Lee, Kenton and Joshi, Mandar and Chen, Wenhu and Collier, Nigel and Altun, Yasemin},\n      year={2022},\n      eprint={2212.10505},\n      archivePrefix={arXiv},\n      primaryClass={cs.CL}\n}\n```", "size_bytes": "1129238081", "downloads": 12084}