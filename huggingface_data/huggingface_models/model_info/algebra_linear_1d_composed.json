{"pretrained_model_name": "dbernsohn/algebra_linear_1d_composed", "description": "# algebra_linear_1d_composed\n---\nlanguage: en\ndatasets:\n- algebra_linear_1d_composed\n---\n\nThis is a [t5-small](https://ai.googleblog.com/2020/02/exploring-transfer-learning-with-t5.html) fine-tuned version on the [math_dataset/algebra_linear_1d_composed](https://www.tensorflow.org/datasets/catalog/math_dataset#mathdatasetalgebra_linear_1d_composed) for solving **algebra linear 1d composed equations** mission.\n\nTo load the model:\n(necessary packages: !pip install transformers sentencepiece)\n```python\nfrom transformers import AutoTokenizer, AutoModelWithLMHead\ntokenizer = AutoTokenizer.from_pretrained(\"dbernsohn/algebra_linear_1d_composed\")\nmodel = AutoModelWithLMHead.from_pretrained(\"dbernsohn/algebra_linear_1d_composed\")\n```\n\nYou can then use this model to solve algebra 1d equations into numbers.\n\n```python\nquery = \"Suppose -d = 5 - 16. Let b = -579 + 584. Solve -b*c + 36 = d for c.\"\ninput_text = f\"{query} </s>\"\nfeatures = tokenizer([input_text], return_tensors='pt')\nmodel.to('cuda')\noutput = model.generate(input_ids=features['input_ids'].cuda(), \n                        attention_mask=features['attention_mask'].cuda())\n\ntokenizer.decode(output[0])\n# <pad> 5</s>\n```\n\nAnother examples:\n\n+ Suppose -d = 5 - 16. Let b = -579 + 584. Solve -b*c + 36 = d for c.\n+ Answer:  5 Pred:  5\n----\n+ Suppose 3*v - l + 9 = 4*v, 0 = -5*v + 5*l - 5. Let f(s) = 3*s**2 + 1. Let g be f(-1). Suppose 63 = g*x - x. Solve -5*i + v + x = 0 for i.\n+ Answer:  5 Pred:  5\n----\n+ Let w be 2 - (0 - 0)/(-2). Let f = -110 - -110. Suppose f*m - 4*m + 3*m = 0. Solve m*v = -w*v for v.\n+ Answer:  0 Pred:  0\n----\n+ Let a(h) = -34*h**3 - 15 + 3*h + 36*h**3 + 8*h**2 + 5*h**2. Let r be a(-6). Solve 2*z = r*z for z.\n+ Answer:  0 Pred:  0\n----\n+ Suppose -3*p + 24 = -3*c, 0*c + 6 = -2*c. Suppose -67 = 4*i + 289. Let t = i + 94. Solve t = 2*y - p for y.\n+ Answer:  5 Pred:  5\n----\n+ Let b = -36 + 53. Suppose -7*u - b = -73. Solve j + 3*j = -u for j.\n+ Answer:  -2 Pred:  -2\n----\n+ Let h be 8*((-2)/2 + 14)*1. Let y = -101 + h. Solve y*p = -p for p.\n+ Answer:  0 Pred:  0\n----\n+ Let b = 178 - 79. Let s be 9/(-1 - 2 - b/(-22)). Solve s = -k - k for k.\n+ Answer:  -3 Pred:  -3\n----\n+ Suppose 31 = -4*z + 11, -3*k - 5*z - 22 = 0. Solve 23 = -11*p + k for p.\n+ Answer:  -2 Pred:  -2\n\nThe whole training process and hyperparameters are in my [GitHub repo](https://github.com/DorBernsohn/CodeLM/tree/main/MathLM)\n> Created by [Dor Bernsohn](https://www.linkedin.com/in/dor-bernsohn-70b2b1146/)\n", "size_bytes": "242087802", "downloads": 2}