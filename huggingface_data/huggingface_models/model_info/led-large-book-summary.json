{"pretrained_model_name": "pszemraj/led-large-book-summary", "description": "---\nlanguage:\n- en\nlicense:\n- apache-2.0\n- bsd-3-clause\ntags:\n- summarization\n- led\n- summary\n- longformer\n- booksum\n- long-document\n- long-form\ndatasets:\n- kmfoda/booksum\nmetrics:\n- rouge\nwidget:\n- text: large earthquakes along a given fault segment do not occur at random intervals\n    because it takes time to accumulate the strain energy for the rupture. The rates\n    at which tectonic plates move and accumulate strain at their boundaries are approximately\n    uniform. Therefore, in first approximation, one may expect that large ruptures\n    of the same fault segment will occur at approximately constant time intervals.\n    If subsequent main shocks have different amounts of slip across the fault, then\n    the recurrence time may vary, and the basic idea of periodic mainshocks must be\n    modified. For great plate boundary ruptures the length and slip often vary by\n    a factor of 2. Along the southern segment of the San Andreas fault the recurrence\n    interval is 145 years with variations of several decades. The smaller the standard\n    deviation of the average recurrence interval, the more specific could be the long\n    term prediction of a future mainshock.\n  example_title: earthquakes\n- text: ' A typical feed-forward neural field algorithm. Spatiotemporal coordinates\n    are fed into a neural network that predicts values in the reconstructed domain.\n    Then, this domain is mapped to the sensor domain where sensor measurements are\n    available as supervision. Class and Section Problems Addressed Generalization\n    (Section 2) Inverse problems, ill-posed problems, editability; symmetries. Hybrid\n    Representations (Section 3) Computation & memory efficiency, representation capacity,\n    editability: Forward Maps (Section 4) Inverse problems Network Architecture (Section\n    5) Spectral bias, integration & derivatives. Manipulating Neural Fields (Section\n    6) Edit ability, constraints, regularization. Table 2: The five classes of techniques\n    in the neural field toolbox each addresses problems that arise in learning, inference,\n    and control. (Section 3). We can supervise reconstruction via differentiable forward\n    maps that transform Or project our domain (e.g, 3D reconstruction via 2D images;\n    Section 4) With appropriate network architecture choices, we can overcome neural\n    network spectral biases (blurriness) and efficiently compute derivatives and integrals\n    (Section 5). Finally, we can manipulate neural fields to add constraints and regularizations,\n    and to achieve editable representations (Section 6). Collectively, these classes\n    constitute a ''toolbox'' of techniques to help solve problems with neural fields\n    There are three components in a conditional neural field: (1) An encoder or inference\n    function \u20ac that outputs the conditioning latent variable 2 given an observation\n    0 E(0) =2. 2 is typically a low-dimensional vector, and is often referred to aS\n    a latent code Or feature code_ (2) A mapping function 4 between Z and neural field\n    parameters O: Y(z) = O; (3) The neural field itself $. The encoder \u20ac finds the\n    most probable z given the observations O: argmaxz P(2/0). The decoder maximizes\n    the inverse conditional probability to find the most probable 0 given Z: arg-\n    max P(Olz). We discuss different encoding schemes with different optimality guarantees\n    (Section 2.1.1), both global and local conditioning (Section 2.1.2), and different\n    mapping functions Y (Section 2.1.3) 2. Generalization Suppose we wish to estimate\n    a plausible 3D surface shape given a partial or noisy point cloud. We need a suitable\n    prior over the sur- face in its reconstruction domain to generalize to the partial\n    observations. A neural network expresses a prior via the function space of its\n    architecture and parameters 0, and generalization is influenced by the inductive\n    bias of this function space (Section 5).'\n  example_title: scientific paper\n- text: ' the big variety of data coming from diverse sources is one of the key properties\n    of the big data phenomenon. It is, therefore, beneficial to understand how data\n    is generated in various environments and scenarios, before looking at what should\n    be done with this data and how to design the best possible architecture to accomplish\n    this The evolution of IT architectures, described in Chapter 2, means that the\n    data is no longer processed by a few big monolith systems, but rather by a group\n    of services In parallel to the processing layer, the underlying data storage has\n    also changed and became more distributed This, in turn, required a significant\n    paradigm shift as the traditional approach to transactions (ACID) could no longer\n    be supported. On top of this, cloud computing is becoming a major approach with\n    the benefits of reducing costs and providing on-demand scalability but at the\n    same time introducing concerns about privacy, data ownership, etc In the meantime\n    the Internet continues its exponential growth: Every day both structured and unstructured\n    data is published and available for processing: To achieve competitive advantage\n    companies have to relate their corporate resources to external services, e.g.\n    financial markets, weather forecasts, social media, etc While several of the sites\n    provide some sort of API to access the data in a more orderly fashion; countless\n    sources require advanced web mining and Natural Language Processing (NLP) processing\n    techniques: Advances in science push researchers to construct new instruments\n    for observing the universe O conducting experiments to understand even better\n    the laws of physics and other domains. Every year humans have at their disposal\n    new telescopes, space probes, particle accelerators, etc These instruments generate\n    huge streams of data, which need to be stored and analyzed. The constant drive\n    for efficiency in the industry motivates the introduction of new automation techniques\n    and process optimization: This could not be done without analyzing the precise\n    data that describe these processes. As more and more human tasks are automated,\n    machines provide rich data sets, which can be analyzed in real-time to drive efficiency\n    to new levels. Finally, it is now evident that the growth of the Internet of Things\n    is becoming a major source of data. More and more of the devices are equipped\n    with significant computational power and can generate a continuous data stream\n    from their sensors. In the subsequent sections of this chapter, we will look at\n    the domains described above to see what they generate in terms of data sets. We\n    will compare the volumes but will also look at what is characteristic and important\n    from their respective points of view. 3.1 The Internet is undoubtedly the largest\n    database ever created by humans. While several well described; cleaned, and structured\n    data sets have been made available through this medium, most of the resources\n    are of an ambiguous, unstructured, incomplete or even erroneous nature. Still,\n    several examples in the areas such as opinion mining, social media analysis, e-governance,\n    etc, clearly show the potential lying in these resources. Those who can successfully\n    mine and interpret the Internet data can gain unique insight and competitive advantage\n    in their business An important area of data analytics on the edge of corporate\n    IT and the Internet is Web Analytics.'\n  example_title: data science textbook\n- text: 'Transformer-based models have shown to be very useful for many NLP tasks.\n    However, a major limitation of transformers-based models is its O(n^2)O(n 2) time\n    & memory complexity (where nn is sequence length). Hence, it''s computationally\n    very expensive to apply transformer-based models on long sequences n > 512n>512.\n    Several recent papers, e.g. Longformer, Performer, Reformer, Clustered attention\n    try to remedy this problem by approximating the full attention matrix. You can\n    checkout \ud83e\udd17''s recent blog post in case you are unfamiliar with these models.\n\n    BigBird (introduced in paper) is one of such recent models to address this issue.\n    BigBird relies on block sparse attention instead of normal attention (i.e. BERT''s\n    attention) and can handle sequences up to a length of 4096 at a much lower computational\n    cost compared to BERT. It has achieved SOTA on various tasks involving very long\n    sequences such as long documents summarization, question-answering with long contexts.\n\n    BigBird RoBERTa-like model is now available in \ud83e\udd17Transformers. The goal of this\n    post is to give the reader an in-depth understanding of big bird implementation\n    & ease one''s life in using BigBird with \ud83e\udd17Transformers. But, before going into\n    more depth, it is important to remember that the BigBird''s attention is an approximation\n    of BERT''s full attention and therefore does not strive to be better than BERT''s\n    full attention, but rather to be more efficient. It simply allows to apply transformer-based\n    models to much longer sequences since BERT''s quadratic memory requirement quickly\n    becomes unbearable. Simply put, if we would have \u221e compute & \u221e time, BERT''s attention\n    would be preferred over block sparse attention (which we are going to discuss\n    in this post).\n\n    If you wonder why we need more compute when working with longer sequences, this\n    blog post is just right for you!\n\n    Some of the main questions one might have when working with standard BERT-like\n    attention include:\n\n    Do all tokens really have to attend to all other tokens? Why not compute attention\n    only over important tokens? How to decide what tokens are important? How to attend\n    to just a few tokens in a very efficient way? In this blog post, we will try to\n    answer those questions.\n\n    What tokens should be attended to? We will give a practical example of how attention\n    works by considering the sentence ''BigBird is now available in HuggingFace for\n    extractive question answering''. In BERT-like attention, every word would simply\n    attend to all other tokens.\n\n    Let''s think about a sensible choice of key tokens that a queried token actually\n    only should attend to by writing some pseudo-code. Will will assume that the token\n    available is queried and build a sensible list of key tokens to attend to.\n\n    >>> # let''s consider following sentence as an example >>> example = [''BigBird'',\n    ''is'', ''now'', ''available'', ''in'', ''HuggingFace'', ''for'', ''extractive'',\n    ''question'', ''answering'']\n\n    >>> # further let''s assume, we''re trying to understand the representation of\n    ''available'' i.e. >>> query_token = ''available'' >>> # We will initialize an\n    empty `set` and fill up the tokens of our interest as we proceed in this section.\n    >>> key_tokens = [] # => currently ''available'' token doesn''t have anything\n    to attend Nearby tokens should be important because, in a sentence (sequence of\n    words), the current word is highly dependent on neighboring past & future tokens.\n    This intuition is the idea behind the concept of sliding attention.'\n  example_title: bigbird blog intro\n- text: 'The majority of available text summarization datasets include short-form\n    source documents that lack long-range causal and temporal dependencies, and often\n    contain strong layout and stylistic biases. While relevant, such datasets will\n    offer limited challenges for future generations of text summarization systems.\n    We address these issues by introducing BookSum, a collection of datasets for long-form\n    narrative summarization. Our dataset covers source documents from the literature\n    domain, such as novels, plays and stories, and includes highly abstractive, human\n    written summaries on three levels of granularity of increasing difficulty: paragraph-,\n    chapter-, and book-level. The domain and structure of our dataset poses a unique\n    set of challenges for summarization systems, which include: processing very long\n    documents, non-trivial causal and temporal dependencies, and rich discourse structures.\n    To facilitate future work, we trained and evaluated multiple extractive and abstractive\n    summarization models as baselines for our dataset.'\n  example_title: BookSum Abstract\ninference:\n  parameters:\n    max_length: 64\n    min_length: 8\n    no_repeat_ngram_size: 3\n    early_stopping: true\n    repetition_penalty: 3.5\n    length_penalty: 0.3\n    encoder_no_repeat_ngram_size: 3\n    num_beams: 4\nmodel-index:\n- name: pszemraj/led-large-book-summary\n  results:\n  - task:\n      type: summarization\n      name: Summarization\n    dataset:\n      name: kmfoda/booksum\n      type: kmfoda/booksum\n      config: kmfoda--booksum\n      split: test\n    metrics:\n    - type: rouge\n      value: 31.7308\n      name: ROUGE-1\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNjJmZjMxYTY0OGU3MzNjNmIzNmYyODNlNDg2ZGRhZDAzNTMwMDM5YWMxODc1OTc1ZWE3MzM2OTg1ODFhZDBkNCIsInZlcnNpb24iOjF9.B8BCKgySYVZW910_1zP0LfCpQYJbAe6loyWut76JlgZb2kV1_x9ybqtNESX0ka-lNqhYyXUNDpuS-7pTmsJVDg\n    - type: rouge\n      value: 5.3311\n      name: ROUGE-2\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiYzViMmY4ODFjYTc5ODk5MmRhMDQ3ZDRiYWQwMDg0OTk3ZTA4NDAxYTNiNDgyMmI4NDA3ZDMwYWViOTBkODBjNyIsInZlcnNpb24iOjF9.MOhJLDcgvv93mVFL1igIgIiTAH3b2Xa4gmBObq7RF44Mmu8Kxtd1KP7rOlDVFOrtrsooGPGsyE1GMCQ2kqeMDg\n    - type: rouge\n      value: 16.1465\n      name: ROUGE-L\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNzNjMzEwMTliZGE3ZmQ4M2UxMDAyMTY3YzJjZmMyMDYyN2YyNDM0N2VhNzI1MDc1YTg4MTRjMmEzNjVkNTk1NCIsInZlcnNpb24iOjF9.XLJ-DVKiYLlbw5E5rWADKbzUzf5fNHhlTCWPCC5dU4NI9Yeh76aR7TPt36ZzLDwTBknnR8KHqlaF8F8YAvBUAg\n    - type: rouge\n      value: 29.0883\n      name: ROUGE-LSUM\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiMTcwNzEwMmE5NjQxZTkzYmQyZDZmNzllYzYyNGI5OTMyNWMwNjdiM2I2YmM5YjdmY2E5OWQ3OTk3ZDA1MTc3YyIsInZlcnNpb24iOjF9.d6rFxjCB6RJNI_pn2DNNSjuZe4rdvj0RatkaTJRp5lP0F_AFfU5Zn9zRWzZJV7V-xMauIc4UhfdoLp9r_-CABA\n    - type: loss\n      value: 4.815707206726074\n      name: loss\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNTMwMTgxMmJkODY3MjkzOWJhMzJhOTIxMWVkODhjZmM0MWUzMWQ1N2JkZjRhOTQxNmU1YWVjYzQ0MDNlZWI3OSIsInZlcnNpb24iOjF9.mkBQHYhYFfDV6F4klXGJ1dSsF-pbCs-6F9zcw6IYznwmXUjtk7m5J4Zt4JAju5LKz4YizvEcUCl_L0WddnfvDA\n    - type: gen_len\n      value: 154.9036\n      name: gen_len\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiMTc0ZmM1ZDM4MDE0MzY3MDM3OWJhNDkzZjJkZDdkMjU5M2JmMDJjYTIxODA1OTllNmY5ZWQzZDlmNWFiYzk4NiIsInZlcnNpb24iOjF9.VQ_O_xSTz870tnM08PJXQOwg9OsNNwI_HVX4S7AuW57_FzGGyRaWSuGE5SWzRS4Tur9YP0QxV4VV0Yoaoi3IAA\n  - task:\n      type: summarization\n      name: Summarization\n    dataset:\n      name: samsum\n      type: samsum\n      config: samsum\n      split: test\n    metrics:\n    - type: rouge\n      value: 33.4484\n      name: ROUGE-1\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNTk4Yjg1YTc4YmY0MzBiZDU4ZjFhNzI4MjZkMWU1MzBlOWNlMjQ5ODMzY2YzYzRhYjJkMGUzNmI3ZjdkMzIzZSIsInZlcnNpb24iOjF9.AqS8A1OUiM0IZFBEGirv5F3Novk8lSUYSfPc3bYWLA6t-W7wgup3qA207eGbE5j9CkDWZ7QrSG1U6Z9A0sOqAA\n    - type: rouge\n      value: 10.4249\n      name: ROUGE-2\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiN2U4NjUyNTFmOGM5OTlhZDMyMTlmM2E4OWI2NGFiMDAyMGJjMzRjNWNlMGEyYWFmNTE5ZWMxM2I0ZGZmNWNmOCIsInZlcnNpb24iOjF9.SgJcHJ4qoRWXFvFiwv1PUutWktvsxQNynVPEv-GtBgxd6WI7o561ONyco5U-5tcyE_1SbSCJzz-L-R-q3cvoDA\n    - type: rouge\n      value: 24.5802\n      name: ROUGE-L\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiZmQ5MDI5MzdiNGE5NDM0MmU5OThmZTBkNjkxMzg5N2IxNGVlODdhZTZhNjg3NzFjYWEyMzA3MTQxNjMyMjRkOCIsInZlcnNpb24iOjF9.Bg5dHqCcJjmxa-xGWNR5lD9g3quX7lKkH0pjiTd2xE5WiPoLLN2c0mYa2GovdW7__WnYwhhHC7es03jmvyZbCw\n    - type: rouge\n      value: 29.8226\n      name: ROUGE-LSUM\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNGFhOTEwNGM1MmZkNDk2ZjQ1Y2MyNjM3MGI5MGY3MWVkM2I0MjU2NWFiYmEwMjE4MTJlZWIwOGQ2MjQ3YjgzYSIsInZlcnNpb24iOjF9.W_aQKs10oXQdKEczJBGM3iiwJgb-VaXTpyA3sGof5WbhHf9vITAQA-xvynh5LgKtXQ1zjx737hnHgjEsu_Y0Cw\n    - type: loss\n      value: 4.176078796386719\n      name: loss\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiN2JhODQ5YTZkNDZkZGYyNGU2MzkxMWU5MTEwMGM2YmVjZTA5YzI5NTMxMDNhYjhlOTAxMzFiMDYwYmM0MjEzZCIsInZlcnNpb24iOjF9.OvZrPBOR5jhkoTGBgsInkH7j3_xpacXHDoT7UIXEnyXzadfBO-O-K6fjalLNZw8wSkbjHIFcL_6S_qTTxPsNAQ\n    - type: gen_len\n      value: 65.4005\n      name: gen_len\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiM2NhYjc3ZjQzNDEwYmMzOTM0ODkyZTJhZWNhNzZhYmEyZTYxMzA2YTYzMWFjOTA5ZjlhYWMzODg3NzY1ZTUwYSIsInZlcnNpb24iOjF9.vk9bgmtQFeRwdY3VXjtrJr_5wUCIeoAkI3kO0cHxhxmJo6RvUnyXiut72FuB-mlLZvqgiNkaZ-u_bh0Z3DjuCw\n  - task:\n      type: summarization\n      name: Summarization\n    dataset:\n      name: billsum\n      type: billsum\n      config: default\n      split: test\n    metrics:\n    - type: rouge\n      value: 40.5843\n      name: ROUGE-1\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNTVjMDkyMWZjYTQ0NzgzNGUxZjNiMTg3NjU1MWJlNTQ2MWQ1NjE1MDk1OTU4ZjJiNGQ5ODg3Y2VlMWUyMzllNyIsInZlcnNpb24iOjF9.OhqBcVIuHk7fzmdrsWMvUe1bLeVMZVstZUoZpP7C1vR-3aIDl7r6eBmPrt5w-KcNq5p4teNPBsq7oKzbd5ZgDQ\n    - type: rouge\n      value: 17.3401\n      name: ROUGE-2\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNGQxYmQzMmE0OTcyNTM5NmMwNjIxNzYxZDcwMDFkYzJkOWY4YWY3NTdhZGRhZDdlMDAxNzcwODQ5OGM3Mzc1MCIsInZlcnNpb24iOjF9.Pksn25EEqvmx757N7Swrd4yXc_xU7-AMN9yNe8lrbBa-l1LoI_2PUASvnjML4f705cfuyMAfb0FkFp5WfER2AA\n    - type: rouge\n      value: 25.1256\n      name: ROUGE-L\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiMjhjYzI5MDBiMjk2NTY3MDNmZTdiOGYwMTRlYjIwZjAwMjdlNTAyYzdhYTJlODQ4MjYzYmQ3MjRlYTA2YzhhZSIsInZlcnNpb24iOjF9.1jPepsweS2bzIqDverQzzhmhFGch7gpoEGFGqQ8zW7K10aUKWFX8lt-uZAmTa1Z5ZhzyXGBzc3dReFPhWRRJBg\n    - type: rouge\n      value: 34.6619\n      name: ROUGE-LSUM\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiM2VkZDIxNWJjOTA0NzFjOTIwOTdjYjc1M2EyNDVjZjY2ZjY3MjIxNDk3YTc5YWExNzAwN2FhOTc1NjVhYjBkYiIsInZlcnNpb24iOjF9.8opqHSUckPohoSF9jfPTpXDz2AtDwvdMqOdIXx2kE1tkOcbLPbOBfcc8RhRR98y8S26yC6EYFhFnf03CV2ejAQ\n    - type: loss\n      value: 4.792657375335693\n      name: loss\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiYTY5ZTRkMGU3OGVkODMzMDU5OWE1NTM5YjA4NDliZDlmNzc2NzZjNjFmNTA3M2EwY2NmN2E0MWJmZjQ5ZDliMiIsInZlcnNpb24iOjF9.KCKdk8xt2NWcMmYKV3-9eVEsFm9MqGllSMu9QCFJFIQlnyNXllHKdBLouoaGQz8IRYXvZKH8_TLDPIQx-31jAg\n    - type: gen_len\n      value: 163.9394\n      name: gen_len\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiYzdkZDYyZGUzYmFkZmI2NjUwYmQ0MzZjMmIyZjI1YTFiMzM4OThiZjBiMzljOTVkZTgwMjA0NTE5OGM2YmFjMiIsInZlcnNpb24iOjF9.XyMZLUdkUIF32KTJMuv_bJswQCx_Tfg4Fx823cURUixSeoIKps8_a634AreZ3Z8kb7bfE_sFGh3rM9KWsMxlDw\n  - task:\n      type: summarization\n      name: Summarization\n    dataset:\n      name: multi_news\n      type: multi_news\n      config: default\n      split: test\n    metrics:\n    - type: rouge\n      value: 39.0834\n      name: ROUGE-1\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNjYzMmVlMDM4MTNkMTI4MjAyMTU2YTg1ZWQwNTI1MmJlNGUwZmE1NTRmYTljZTQwY2RlMjcxOTgyZGMyYTc0ZiIsInZlcnNpb24iOjF9.6yuSr7UmsFatwqQ-mEO4gmsEtWI05kGB5Ib2pnl05H1OiPT2uUwmqdUytUw8KTx9u1jv9q0cTF1cL-n2kPEJAA\n    - type: rouge\n      value: 11.4043\n      name: ROUGE-2\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiMWI5N2U2ZWI1ODM2MWUwOTIzYTAzNmRhNDA2OWEzZWRjMGEzMjBmY2EwN2YyYzU1NWE0YjIyZDE3MWE0MmMxZCIsInZlcnNpb24iOjF9.wonuxbBl25TzEaHUH_E816nHJ1OSXKfkaq7eJzbLpsfeGwcDklxUSxZxRO7VBiBMaY3Qttf9ywmEIPp40HnpBA\n    - type: rouge\n      value: 19.1813\n      name: ROUGE-L\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiZjU1NDZhN2NkMzZiZGJkODE4NDZiYjViOTZkNGMyNDlkNjBlZmFjYzU1N2IzMjFjYjY1MDU1Zjk2MzA0M2U4NyIsInZlcnNpb24iOjF9.bTCRzv3J9NiCh4aV23tAWGTvrdQCv_RS40zGwC4AJXtGS40cY7tJHYwBf9U9_rCetDBxqfjJpdaUbCAOglxLAA\n    - type: rouge\n      value: 35.1581\n      name: ROUGE-LSUM\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiMDNhNTUyZjE4NjYxYjIzYThmMDM2YWNhM2QwYzY1ODI2ZTE3NmNjMmVhOTAzZjZlOWQwYzc1NzU2NDNjNzIxMyIsInZlcnNpb24iOjF9.cWlSbEBgrMN5D-fV_yL9geNMyMkIItcVO3wehNJPzFi3E0v1-4q8pnX-UgjLzto8X7JLi6as2V_HtZE4-C-CDw\n    - type: loss\n      value: 4.654905319213867\n      name: loss\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiYTc5Nzk0ODhiNWUzNTAxNzk2YzZmMjU2NDliY2UzOTYyYTdmZGEyYjI5NDNhOTE0MGUxOTgxMGVjMmNhM2UyMSIsInZlcnNpb24iOjF9.eBBAebcl3AwkrjR6a8BvoSjDfpw8LWTRFjyIFHVzspvoOKVfnO8_NB_UeR_K127OwXyoZ70Z7X_aKJOe-2kTDA\n    - type: gen_len\n      value: 186.2494\n      name: gen_len\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiOWI2NjVlYjgwYWJiMjcyMDUzMzEwNDNjZTMxMDM0MjAzMzk1ZmIwY2Q1ZDQ2Y2M5NDBlMDEzYzFkNWEyNzJmNiIsInZlcnNpb24iOjF9.iZ1Iy7FuWL4GH7LS5EylVj5eZRC3L2ZsbYQapAkMNzR_VXPoMGvoM69Hp-kU7gW55tmz2V4Qxhvoz9cM8fciBA\n---\n# led-large-book-summary\n\n<a href=\"https://colab.research.google.com/gist/pszemraj/3eba944ddc9fc9a4a1bfb21e83b57620/summarization-token-batching.ipynb\">\n  <img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/>\n</a>\n\nThis model is a fine-tuned version of [allenai/led-large-16384](https://huggingface.co/allenai/led-large-16384) on the `BookSum` dataset (`kmfoda/booksum`). It aims to generalize well and be useful in summarizing lengthy text for both academic and everyday purposes. \n\n- Handles up to 16,384 tokens input\n- See the Colab demo linked above or try the [demo on Spaces](https://huggingface.co/spaces/pszemraj/summarize-long-text)\n\n> **Note:** Due to inference API timeout constraints, outputs may be truncated before the fully summary is returned (try python or the demo)\n\n---\n\n## Basic Usage\n\nTo improve summary quality, use `encoder_no_repeat_ngram_size=3` when calling the pipeline object. This setting encourages the model to utilize new vocabulary and construct an abstractive summary.\n\nLoad the model into a pipeline object:\n\n```python\nimport torch\nfrom transformers import pipeline\n\nhf_name = 'pszemraj/led-large-book-summary'\n\nsummarizer = pipeline(\n    \"summarization\",\n    hf_name,\n    device=0 if torch.cuda.is_available() else -1,\n)\n```\n\nFeed the text into the pipeline object:\n\n```python\nwall_of_text = \"your words here\"\n\nresult = summarizer(\n    wall_of_text,\n    min_length=16,\n    max_length=256,\n    no_repeat_ngram_size=3,\n    encoder_no_repeat_ngram_size=3,\n    repetition_penalty=3.5,\n    num_beams=4,\n    early_stopping=True,\n)\n```\n\n**Important:** For optimal summary quality, use the global attention mask when decoding, as demonstrated in [this community notebook](https://colab.research.google.com/drive/12INTTR6n64TzS4RrXZxMSXfrOd9Xzamo?usp=sharing), see the definition of `generate_answer(batch)`.\n\nIf you're facing computing constraints, consider using the base version [`pszemraj/led-base-book-summary`](https://huggingface.co/pszemraj/led-base-book-summary). \n\n---\n\n## Training Information\n\n### Data\n\nThe model was fine-tuned on the [booksum](https://arxiv.org/abs/2105.08209) dataset. During training, the `chapter`was the input col, while the `summary_text` was the output. \n\n### Procedure\n\nFine-tuning was run on the BookSum dataset across 13+ epochs. Notably, the final four epochs combined the training and validation sets as 'train' to enhance generalization.\n\n### Hyperparameters\n\nThe training process involved different settings across stages:\n\n- **Initial Three Epochs:** Low learning rate (5e-05), batch size of 1, 4 gradient accumulation steps, and a linear learning rate scheduler.\n- **In-between Epochs:** Learning rate reduced to 4e-05, increased batch size to 2, 16 gradient accumulation steps, and switched to a cosine learning rate scheduler with a 0.05 warmup ratio.\n- **Final Two Epochs:** Further reduced learning rate (2e-05), batch size reverted to 1, maintained gradient accumulation steps at 16, and continued with a cosine learning rate scheduler, albeit with a lower warmup ratio (0.03).\n\n### Versions\n\n- Transformers 4.19.2\n- Pytorch 1.11.0+cu113\n- Datasets 2.2.2\n- Tokenizers 0.12.1\n\n---\n\n## Simplified Usage with TextSum\n\nTo streamline the process of using this and other models, I've developed [a Python package utility](https://github.com/pszemraj/textsum) named `textsum`. This package offers simple interfaces for applying summarization models to text documents of arbitrary length. \n\nInstall TextSum:\n\n```bash\npip install textsum\n```\n\nThen use it in Python with this model:\n\n```python\nfrom textsum.summarize import Summarizer\n\nmodel_name = \"pszemraj/led-large-book-summary\"\nsummarizer = Summarizer(\n    model_name_or_path=model_name,  # you can use any Seq2Seq model on the Hub\n    token_batch_length=4096,  # tokens to batch summarize at a time, up to 16384\n)\nlong_string = \"This is a long string of text that will be summarized.\"\nout_str = summarizer.summarize_string(long_string)\nprint(f\"summary: {out_str}\")\n```\n\nCurrently implemented interfaces include a Python API, a Command-Line Interface (CLI), and a demo/web UI. \n\nFor detailed explanations and documentation, check the [README](https://github.com/pszemraj/textsum) or the [wiki](https://github.com/pszemraj/textsum/wiki)\n\n\n---\n\n## Related Models\n\nCheck out these other related models, also trained on the BookSum dataset:\n\n- [LED-large continued](https://huggingface.co/pszemraj/led-large-book-summary-continued) - experiment with further fine-tuning\n- [Long-T5-tglobal-base](https://huggingface.co/pszemraj/long-t5-tglobal-base-16384-book-summary)\n- [BigBird-Pegasus-Large-K](https://huggingface.co/pszemraj/bigbird-pegasus-large-K-booksum)\n- [Pegasus-X-Large](https://huggingface.co/pszemraj/pegasus-x-large-book-summary)\n- [Long-T5-tglobal-XL](https://huggingface.co/pszemraj/long-t5-tglobal-xl-16384-book-summary)\n\nThere are also other variants on other datasets etc on my hf profile, feel free to try them out :)\n\n\n---\n", "size_bytes": "1839482407", "downloads": 2246}