{"pretrained_model_name": "NTUYG/ComFormer", "description": "---\nlanguage:\n- en\ntags:\n- summarization\nlicense: apache-2.0\ndatasets:\n- DeepCom\nmetrics:\n- bleu\n---\n\n# How To Use\n```PYTHON\nfrom transformers import BartForConditionalGeneration, BartTokenizer\nmodel = BartForConditionalGeneration.from_pretrained(\"NTUYG/ComFormer\")\ntokenizer = BartTokenizer.from_pretrained(\"NTUYG/ComFormer\")\ncode = '''    \npublic static void copyFile( File in, File out )  \n            throws IOException  \n    {  \n        FileChannel inChannel = new FileInputStream( in ).getChannel();  \n        FileChannel outChannel = new FileOutputStream( out ).getChannel();  \n        try\n        {  \n//          inChannel.transferTo(0, inChannel.size(), outChannel);      // original -- apparently has trouble copying large files on Windows  \n \n            // magic number for Windows, 64Mb - 32Kb)  \n            int maxCount = (64 * 1024 * 1024) - (32 * 1024);  \n            long size = inChannel.size();  \n            long position = 0;  \n            while ( position < size )  \n            {  \n               position += inChannel.transferTo( position, maxCount, outChannel );  \n            }  \n        }  \n        finally\n        {  \n            if ( inChannel != null )  \n            {  \n               inChannel.close();  \n            }  \n            if ( outChannel != null )  \n            {  \n                outChannel.close();  \n            }  \n        }  \n    }\n    '''\ncode_seq, sbt = utils.transformer(code) #can find in https://github.com/NTDXYG/ComFormer\ninput_text = code_seq + sbt\ninput_ids = tokenizer.encode(input_text, return_tensors=\"pt\", max_length=256, \t\ttruncation=True)\nsummary_text_ids = model.generate(\n    input_ids=input_ids,\n    bos_token_id=model.config.bos_token_id,\n    eos_token_id=model.config.eos_token_id,\n    length_penalty=2.0,\n    max_length=30,\n    min_length=2,\n    num_beams=5,\n)\ncomment = tokenizer.decode(summary_text_ids[0], skip_special_tokens=True)\nprint(comment)\n```\n# BibTeX entry and citation info\n```\n@misc{yang2021comformer,\n      title={ComFormer: Code Comment Generation via Transformer and Fusion Method-based Hybrid Code Representation}, \n      author={Guang Yang and Xiang Chen and Jinxin Cao and Shuyuan Xu and Zhanqi Cui and Chi Yu and Ke Liu},\n      year={2021},\n      eprint={2107.03644},\n      archivePrefix={arXiv},\n      primaryClass={cs.SE}\n}\n```\n\n", "size_bytes": "1624675841", "downloads": 23}