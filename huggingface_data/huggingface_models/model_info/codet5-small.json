{"pretrained_model_name": "Salesforce/codet5-small", "description": "---\nlicense: apache-2.0\ntags:\n- codet5\ndatasets:\n- code_search_net\ninference: false\n---\n\n# CodeT5 (small-sized model) \n\nPre-trained CodeT5 model. It was introduced in the paper [CodeT5: Identifier-aware Unified Pre-trained Encoder-Decoder Models\nfor Code Understanding and Generation](https://arxiv.org/abs/2109.00859) by Yue Wang, Weishi Wang, Shafiq Joty, Steven C.H. Hoi and first released in [this repository](https://github.com/salesforce/CodeT5). \n\nDisclaimer: The team releasing CodeT5 did not write a model card for this model so this model card has been written by the Hugging Face team (more specifically, [nielsr](https://huggingface.co/nielsr)).\n\n## Model description\n\nFrom the abstract:\n\n\"We present CodeT5, a unified pre-trained encoder-decoder Transformer model that better leverages the code semantics conveyed from the developer-assigned identifiers. Our model employs a unified framework to seamlessly support both code understanding and generation tasks and allows for multi-task learning. Besides, we propose a novel identifier-aware pre-training task that enables the model to distinguish which code tokens are identifiers and to recover them when they are masked. Furthermore, we propose to exploit the user-written code comments with a bimodal dual generation task for better NL-PL alignment. Comprehensive experiments show that CodeT5 significantly outperforms prior methods on understanding tasks such as code defect detection and clone detection, and generation tasks across various directions including PL-NL, NL-PL, and PL-PL. Further analysis reveals that our model can better capture semantic information from code.\"\n\n## Intended uses & limitations\n\nThis repository contains the pre-trained model only, so you can use this model for masked span prediction, as shown in the code example below. However, the main use of this model is to fine-tune it for a downstream task of interest, such as:\n* code summarization\n* code generation\n* code translation\n* code refinement\n* code defect detection\n* code clone detection. \n\nSee the [model hub](https://huggingface.co/models?search=salesforce/codet) to look for fine-tuned versions on a task that interests you.\n\n### How to use\n\nHere is how to use this model:\n\n```python\nfrom transformers import RobertaTokenizer, T5ForConditionalGeneration\n\ntokenizer = RobertaTokenizer.from_pretrained('Salesforce/codet5-small')\nmodel = T5ForConditionalGeneration.from_pretrained('Salesforce/codet5-small')\n\ntext = \"def greet(user): print(f'hello <extra_id_0>!')\"\ninput_ids = tokenizer(text, return_tensors=\"pt\").input_ids\n\n# simply generate a single sequence\ngenerated_ids = model.generate(input_ids, max_length=10)\nprint(tokenizer.decode(generated_ids[0], skip_special_tokens=True))\n# this prints \"user: {user.name}\"\n```\n\n## Training data\n\nThe CodeT5 model was pretrained on CodeSearchNet [Husain et al., 2019](https://arxiv.org/abs/1909.09436). Additionally, the authors collected two datasets of C/CSharp from [BigQuery1](https://console.cloud.google.com/marketplace/details/github/github-repos) to ensure that all downstream tasks have overlapped programming languages with the pre-training data. In total, around 8.35 million instances are used for pretraining. \n\n## Training procedure\n\n### Preprocessing\n\nThis model uses a code-specific BPE (Byte-Pair Encoding) tokenizer. One can prepare text (or code) for the model using RobertaTokenizer, with the files from this repository.\n\n## Evaluation results\n\nFor evaluation results on several downstream benchmarks, we refer to the paper.\n\n### BibTeX entry and citation info\n\n```bibtex\n@misc{wang2021codet5,\n      title={CodeT5: Identifier-aware Unified Pre-trained Encoder-Decoder Models for Code Understanding and Generation}, \n      author={Yue Wang and Weishi Wang and Shafiq Joty and Steven C. H. Hoi},\n      year={2021},\n      eprint={2109.00859},\n      archivePrefix={arXiv},\n      primaryClass={cs.CL}\n}\n```", "size_bytes": "242026427", "downloads": 44288}