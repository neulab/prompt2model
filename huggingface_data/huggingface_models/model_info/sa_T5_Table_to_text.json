{"pretrained_model_name": "Sachinkelenjaguri/sa_T5_Table_to_text", "description": "import pandas as pd\n\nimport os\n\nimport torch\n\nfrom transformers import T5Tokenizer, T5ForConditionalGeneration\n\nfrom transformers.optimization import  Adafactor \n\nimport time\n\nimport warnings\n\nwarnings.filterwarnings('ignore')\n\n\ntokenizer = T5Tokenizer.from_pretrained('Sachinkelenjaguri/sa_T5_Table_to_text')\n\nmodel = T5ForConditionalGeneration.from_pretrained('Sachinkelenjaguri/sa_T5_Table_to_text', return_dict=True)\n\n\ndef generate(text):\n\n  model.eval()\n  input_ids = tokenizer.encode(\"WebNLG:{} </s>\".format(text), return_tensors=\"pt\")  # Batch size 1\n\n  s = time.time()\n  outputs = model.generate(input_ids)\n  gen_text=tokenizer.decode(outputs[0]).replace('<pad>','').replace('</s>','')\n  elapsed = time.time() - s\n  print('Generated in {} seconds'.format(str(elapsed)[:4]))\n  \n  return gen_text\n\n\n\ngenerate(' Russia | leader | Putin')", "size_bytes": "891728831", "downloads": 122}