{"pretrained_model_name": "DebeshSahoo/text2sql-finetune", "description": "---\ndatasets:\n- wikisql\nmetrics:\n- accuracy\npipeline_tag: text-classification\ntags:\n- code\n---\n\nBase Model:t5-small\n\n#Training Result\n\n[17610/17610 1:32:31, Epoch 9/10]\nStep\tTraining Loss\tValidation Loss\n1000\t2.682400\t0.829368\n2000\t0.914000\t0.568155\n3000\t0.707700\t0.465733\n4000\t0.613500\t0.408758\n5000\t0.557300\t0.374811\n6000\t0.515800\t0.350752\n7000\t0.487000\t0.331517\n8000\t0.466100\t0.319071\n9000\t0.449400\t0.309488\n10000\t0.438800\t0.301829\n11000\t0.430000\t0.296482\n12000\t0.420200\t0.292672\n13000\t0.418200\t0.290445\n14000\t0.413400\t0.288662\n15000\t0.410100\t0.287757\n16000\t0.412600\t0.287280\n17000\t0.410000\t0.287134\n\nquestion: what is id with name jui and age equal 25\ntable: ['id', 'name', 'age']\nSELECT ID FROM table WHEREname = jui AND age equal 25\n\n#Copy below piece of code to your notebook to use the model\n\nfrom transformers import AutoTokenizer, AutoModelForSeq2SeqLM\n\n# Load the tokenizer\ntokenizer = AutoTokenizer.from_pretrained(\"DebeshSahoo/text2sql-finetune\")\n\n# Load the model\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"DebeshSahoo/text2sql-finetune\")\n\n# Rest of the code for preparing input, generating predictions, and decoding the output...\n\n\nfrom typing import List\n\ntable_prefix = \"table:\"\nquestion_prefix = \"question:\"\n\ndef prepare_input(question: str, table: List[str]):\n    print(\"question:\", question)\n    print(\"table:\", table)\n    join_table = \",\".join(table)\n    inputs = f\"{question_prefix} {question} {table_prefix} {join_table}\"\n    input_ids = tokenizer(inputs, max_length=700, return_tensors=\"pt\").input_ids\n    return input_ids\n\ndef inference(question: str, table: List[str]) -> str:\n    input_data = prepare_input(question=question, table=table)\n    input_data = input_data.to(model.device)\n    outputs = model.generate(inputs=input_data, num_beams=10, top_k=10, max_length=512)\n    result = tokenizer.decode(token_ids=outputs[0], skip_special_tokens=True)\n    return result\n\ntest_id = 1000\nprint(\"model result:\", inference(dataset[\"test\"][test_id][\"question\"], dataset[\"test\"][test_id][\"table\"][\"header\"]))\nprint(\"real result:\", dataset[\"test\"][test_id][\"sql\"][\"human_readable\"])\n\ninference(\"what is id with name jui and age equal 25\", [\"id\",\"name\", \"age\"])", "size_bytes": "242071641", "downloads": 47}