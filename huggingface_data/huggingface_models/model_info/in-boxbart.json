{"pretrained_model_name": "cogint/in-boxbart", "description": "---\nlicense: mit\nlanguage:\n- en\ntags:\n- biology\n- medical\n- language models\n- BioNLP\n---\n\nIn-BoXBART\n=============\n\nAn instruction-based unified model for performing various biomedical tasks.\n\nYou may want to check out \n* Our paper (NAACL 2022 Findings): [In-BoXBART: Get Instructions into Biomedical Multi-Task Learning](https://aclanthology.org/2022.findings-naacl.10/)\n* GitHub: [Click Here](https://github.com/Mihir3009/In-BoXBART)\n\nThis work explores the impact of instructional prompts on biomedical Multi-Task Learning. We introduce the BoX, a collection of 32 instruction tasks for Biomedical NLP across (X) various categories. Using this meta-dataset, we propose a unified model termed In-BoXBART, that can jointly learn all tasks of the BoX without any task-specific modules. To the best of our knowledge, this is the first attempt to\npropose a unified model in the biomedical domain and use instructions to achieve generalization across several biomedical tasks.\n\nDirect Use\n=============\n\nIt is possible to use this model to generate text, which is useful for experimentation and understanding its capabilities. **It should not be directly used for production or work that may directly impact people.**\n\nHow to Use\n=============\n\nYou can very easily load the models with Transformers, instead of downloading them manually. The BART-base model is the backbone of our model. Here is how to use the model in PyTorch:\n\n```python\nfrom transformers import AutoTokenizer, AutoModelForSeq2SeqLM\n\ntokenizer = AutoTokenizer.from_pretrained(\"cogint/in-boxbart\")\n\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"cogint/in-boxbart\")\n```\nOr just clone the model repo\n```\ngit lfs install\ngit clone https://huggingface.co/cogint/in-boxbart\n```\n\nInference Example\n=============\n\nHere, we provide an example for the \"Document Classification\" (HoC dataset) task. Once you load the model from huggigface for inference, you can append instruction given in `./templates` for that particular dataset with input instance. Below is an example of one instance.\n\n```python\nfrom transformers import AutoTokenizer, AutoModelForSeq2SeqLM\ntokenizer = AutoTokenizer.from_pretrained(\"cogint/in-boxbart\")\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"cogint/in-boxbart\")\n\n# Input shows how we have appended instruction from our file for HoC dataset with instance.\n\ninput = \"Instruction: Definition: In this task, you are given a medical text related to cancer. Your job is to classify into zero or more classes from (1) Sustaining proliferative signaling, (2) Resisting cell death, (3) Genomic instability and mutation, (4) Activating invasion and metastasis, (5) Tumor promoting inflammation, (6) Evading growth suppressors, (7) Inducing angiogenesis (8) Enabling replicative immortality, (9) Avoiding immune destruction and (10) Cellular energetics., Positive Examples: [[input: Studies of cell-cycle progression showed that the anti-proliferative effect of Fan was associated with an increase in the G1/S phase of PC3 cells ., output: Evading growth suppressors, Sustaining proliferative signaling, explanation: Given text is classified into two categories, hence, generated label is 'Evading growth suppressors, Sustaining proliferative signaling'.] ]; Instance: input: Similar to previous studies utilizing IGF-1 , pretreatment with Roscovitine leads to a significant up-regulation of p21 expression and a significant decrease in the number of PCNA positive cells ., output: ?\"\n\ntokenized_input= tokenizer(input)\n\n# Ideal output for this input is 'Sustaining proliferative signaling'\n\noutput = model(tokenized_input)\n```\n\n\nBibTeX Entry and Citation Info\n===============\nIf you are using our model, please cite our paper:\n\n```bibtex\n@inproceedings{parmar-etal-2022-boxbart,\n    title = \"In-{B}o{XBART}: Get Instructions into Biomedical Multi-Task Learning\",\n    author = \"Parmar, Mihir  and\n      Mishra, Swaroop  and\n      Purohit, Mirali  and\n      Luo, Man  and\n      Mohammad, Murad  and\n      Baral, Chitta\",\n    booktitle = \"Findings of the Association for Computational Linguistics: NAACL 2022\",\n    month = jul,\n    year = \"2022\",\n    address = \"Seattle, United States\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2022.findings-naacl.10\",\n    doi = \"10.18653/v1/2022.findings-naacl.10\",\n    pages = \"112--128\",\n}\n```", "size_bytes": "557979193", "downloads": 51}