{"pretrained_model_name": "hackathon-pln-es/poem-gen-spanish-t5-small", "description": "---\nlicense: mit\nlanguage: es\ntags:\n- generated_from_trainer\nmodel-index:\n- name: poem-gen-spanish-t5-small\n  results: []\n---\n\n# poem-gen-spanish-t5-small\n\nThis model is a fine-tuned version of [flax-community/spanish-t5-small](https://huggingface.co/flax-community/spanish-t5-small) on the [Spanish Poetry Dataset](https://www.kaggle.com/andreamorgar/spanish-poetry-dataset/version/1) dataset.\n\nThe model was created during the [First Spanish Hackathon](https://somosnlp.org/hackathon) organized by [Somos NLP](https://somosnlp.org/).\n\nThe team who participated was composed by:\n\n- \ud83c\udde8\ud83c\uddfa [Alberto Carmona Barthelemy](https://huggingface.co/milyiyo)\n- \ud83c\udde8\ud83c\uddf4 [Jorge Henao](https://huggingface.co/jorge-henao)\n- \ud83c\uddea\ud83c\uddf8 [Andrea Morales Garz\u00f3n](https://huggingface.co/andreamorgar)\n- \ud83c\uddee\ud83c\uddf3 [Drishti Sharma](https://huggingface.co/DrishtiSharma)\n\nIt achieves the following results on the evaluation set:\n- Loss: 2.8707\n- Perplexity: 17.65\n\n\n## Model description\n\nThe model was trained to generate spanish poems attending to some parameters like style, sentiment, words to include and starting phrase.\n\nExample:\n\n```\npoema:\n  estilo: Pablo Neruda &&\n  sentimiento: positivo &&\n  palabras: cielo, luna, mar &&\n  texto: Todos fueron a verle pasar\n```\n\n### How to use\n\nYou can use this model directly with a pipeline for masked language modeling:\n\n```python\nfrom transformers import AutoTokenizer, AutoModelForSeq2SeqLM\nmodel_name = 'hackathon-pln-es/poem-gen-spanish-t5-small'\ntokenizer = AutoTokenizer.from_pretrained(model_name)\nmodel = AutoModelForSeq2SeqLM.from_pretrained(model_name)\n\nauthor, sentiment, word, start_text = 'Pablo Neruda', 'positivo', 'cielo', 'Todos fueron a la plaza'\ninput_text = f\"\"\"poema: estilo: {author} && sentimiento: {sentiment} && palabras: {word} && texto: {start_text} \"\"\"\ninputs = tokenizer(input_text, return_tensors=\"pt\")\n\noutputs = model.generate(inputs[\"input_ids\"],\n                         do_sample = True,\n                         max_length = 30,\n                         repetition_penalty = 20.0,\n                         top_k = 50,\n                         top_p = 0.92)\ndetok_outputs = [tokenizer.decode(x, skip_special_tokens=True) for x in outputs]\nres = detok_outputs[0]\n```\n\n## Training and evaluation data\n\nThe original [dataset](https://www.kaggle.com/andreamorgar/spanish-poetry-dataset/version/1) has the columns `author`, `content` and `title`.\nFor each poem we generate new examples:\n- content: *line_i* , generated: *line_i+1*\n- content: *concatenate(line_i, line_i+1)* , generated: *line_i+2*\n- content: *concatenate(line_i, line_i+1, line_i+2)* , generated: *line_i+3*\n\nThe resulting dataset has the columns `author`, `content`, `title` and `generated`.\n\nFor each example we compute the sentiment of the generated column and the nouns. In the case of sentiment, we used the model `mrm8488/electricidad-small-finetuned-restaurant-sentiment-analysis` and for nouns extraction we used spaCy.\n \n\n## Training procedure\n\n### Training hyperparameters\n\nThe following hyperparameters were used during training:\n- learning_rate: 2e-05\n- train_batch_size: 6\n- eval_batch_size: 6\n- seed: 42\n- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08\n- lr_scheduler_type: linear\n- num_epochs: 6\n\n### Training results\n\n| Training Loss | Epoch | Step   | Validation Loss |\n|:-------------:|:-----:|:------:|:---------------:|\n| 2.7082        | 0.73  | 30000  | 2.8878          |\n| 2.6251        | 1.46  | 60000  | 2.8940          |\n| 2.5796        | 2.19  | 90000  | 2.8853          |\n| 2.5556        | 2.93  | 120000 | 2.8749          |\n| 2.527         | 3.66  | 150000 | 2.8850          |\n| 2.5024        | 4.39  | 180000 | 2.8760          |\n| 2.4887        | 5.12  | 210000 | 2.8749          |\n| 2.4808        | 5.85  | 240000 | 2.8707          |\n\n\n### Framework versions\n\n- Transformers 4.17.0\n- Pytorch 1.10.0+cu111\n- Datasets 2.0.0\n- Tokenizers 0.11.6\n", "size_bytes": "242034427", "downloads": 8}