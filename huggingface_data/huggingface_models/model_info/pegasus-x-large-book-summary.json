{"pretrained_model_name": "pszemraj/pegasus-x-large-book-summary", "description": "---\nlicense:\n- apache-2.0\n- bsd-3-clause\ntags:\n- summarization\n- summary\n- booksum\n- long-document\n- long-form\ndatasets:\n- kmfoda/booksum\nmetrics:\n- rouge\nlanguages: en\nwidget:\n- text: large earthquakes along a given fault segment do not occur at random intervals\n    because it takes time to accumulate the strain energy for the rupture. The rates\n    at which tectonic plates move and accumulate strain at their boundaries are approximately\n    uniform. Therefore, in first approximation, one may expect that large ruptures\n    of the same fault segment will occur at approximately constant time intervals.\n    If subsequent main shocks have different amounts of slip across the fault, then\n    the recurrence time may vary, and the basic idea of periodic mainshocks must be\n    modified. For great plate boundary ruptures the length and slip often vary by\n    a factor of 2. Along the southern segment of the San Andreas fault the recurrence\n    interval is 145 years with variations of several decades. The smaller the standard\n    deviation of the average recurrence interval, the more specific could be the long\n    term prediction of a future mainshock.\n  example_title: earthquakes\n- text: ' A typical feed-forward neural field algorithm. Spatiotemporal coordinates\n    are fed into a neural network that predicts values in the reconstructed domain.\n    Then, this domain is mapped to the sensor domain where sensor measurements are\n    available as supervision. Class and Section Problems Addressed Generalization\n    (Section 2) Inverse problems, ill-posed problems, editability; symmetries. Hybrid\n    Representations (Section 3) Computation & memory efficiency, representation capacity,\n    editability: Forward Maps (Section 4) Inverse problems Network Architecture (Section\n    5) Spectral bias, integration & derivatives. Manipulating Neural Fields (Section\n    6) Edit ability, constraints, regularization. Table 2: The five classes of techniques\n    in the neural field toolbox each addresses problems that arise in learning, inference,\n    and control. (Section 3). We can supervise reconstruction via differentiable forward\n    maps that transform Or project our domain (e.g, 3D reconstruction via 2D images;\n    Section 4) With appropriate network architecture choices, we can overcome neural\n    network spectral biases (blurriness) and efficiently compute derivatives and integrals\n    (Section 5). Finally, we can manipulate neural fields to add constraints and regularizations,\n    and to achieve editable representations (Section 6). Collectively, these classes\n    constitute a ''toolbox'' of techniques to help solve problems with neural fields\n    There are three components in a conditional neural field: (1) An encoder or inference\n    function \u20ac that outputs the conditioning latent variable 2 given an observation\n    0 E(0) =2. 2 is typically a low-dimensional vector, and is often referred to aS\n    a latent code Or feature code_ (2) A mapping function 4 between Z and neural field\n    parameters O: Y(z) = O; (3) The neural field itself $. The encoder \u20ac finds the\n    most probable z given the observations O: argmaxz P(2/0). The decoder maximizes\n    the inverse conditional probability to find the most probable 0 given Z: arg-\n    max P(Olz). We discuss different encoding schemes with different optimality guarantees\n    (Section 2.1.1), both global and local conditioning (Section 2.1.2), and different\n    mapping functions Y (Section 2.1.3) 2. Generalization Suppose we wish to estimate\n    a plausible 3D surface shape given a partial or noisy point cloud. We need a suitable\n    prior over the sur- face in its reconstruction domain to generalize to the partial\n    observations. A neural network expresses a prior via the function space of its\n    architecture and parameters 0, and generalization is influenced by the inductive\n    bias of this function space (Section 5).'\n  example_title: scientific paper\n- text: 'Is a else or outside the cob and tree written being of early client rope\n    and you have is for good reasons. On to the ocean in Orange for time. By''s the\n    aggregate we can bed it yet. Why this please pick up on a sort is do and also\n    M Getoi''s nerocos and do rain become you to let so is his brother is made in\n    use and Mjulia''s''s the lay major is aging Masastup coin present sea only of\n    Oosii rooms set to you We do er do we easy this private oliiishs lonthen might\n    be okay. Good afternoon everybody. Welcome to this lecture of Computational Statistics.\n    As you can see, I''m not socially my name is Michael Zelinger. I''m one of the\n    task for this class and you might have already seen me in the first lecture where\n    I made a quick appearance. I''m also going to give the tortillas in the last third\n    of this course. So to give you a little bit about me, I''m a old student here\n    with better Bulman and my research centres on casual inference applied to biomedical\n    disasters, so that could be genomics or that could be hospital data. If any of\n    you is interested in writing a bachelor thesis, a semester paper may be mastathesis\n    about this topic feel for reach out to me. you have my name on models and my email\n    address you can find in the directory I''d Be very happy to talk about it. you\n    do not need to be sure about it, we can just have a chat. So with that said, let''s\n    get on with the lecture. There''s an exciting topic today I''m going to start\n    by sharing some slides with you and later on during the lecture we''ll move to\n    the paper. So bear with me for a few seconds. Well, the projector is starting\n    up. Okay, so let''s get started. Today''s topic is a very important one. It''s\n    about a technique which really forms one of the fundamentals of data science,\n    machine learning, and any sort of modern statistics. It''s called cross validation.\n    I know you really want to understand this topic I Want you to understand this\n    and frankly, nobody''s gonna leave Professor Mineshousen''s class without understanding\n    cross validation. So to set the stage for this, I Want to introduce you to the\n    validation problem in computational statistics. So the problem is the following:\n    You trained a model on available data. You fitted your model, but you know the\n    training data you got could always have been different and some data from the\n    environment. Maybe it''s a random process. You do not really know what it is,\n    but you know that somebody else who gets a different batch of data from the same\n    environment they would get slightly different training data and you do not care\n    that your method performs as well. On this training data. you want to to perform\n    well on other data that you have not seen other data from the same environment.\n    So in other words, the validation problem is you want to quantify the performance\n    of your model on data that you have not seen. So how is this even possible? How\n    could you possibly measure the performance on data that you do not know The solution\n    to? This is the following realization is that given that you have a bunch of data,\n    you were in charge. You get to control how much that your model sees. It works\n    in the following way: You can hide data firms model. Let''s say you have a training\n    data set which is a bunch of doubtless so X eyes are the features those are typically\n    hide and national vector. It''s got more than one dimension for sure. And the\n    why why eyes. Those are the labels for supervised learning. As you''ve seen before,\n    it''s the same set up as we have in regression. And so you have this training\n    data and now you choose that you only use some of those data to fit your model.\n    You''re not going to use everything, you only use some of it the other part you\n    hide from your model. And then you can use this hidden data to do validation from\n    the point of you of your model. This hidden data is complete by unseen. In other\n    words, we solve our problem of validation.'\n  example_title: transcribed audio - lecture\n- text: 'Transformer-based models have shown to be very useful for many NLP tasks.\n    However, a major limitation of transformers-based models is its O(n^2)O(n 2) time\n    & memory complexity (where nn is sequence length). Hence, it''s computationally\n    very expensive to apply transformer-based models on long sequences n > 512n>512.\n    Several recent papers, e.g. Longformer, Performer, Reformer, Clustered attention\n    try to remedy this problem by approximating the full attention matrix. You can\n    checkout \ud83e\udd17''s recent blog post in case you are unfamiliar with these models.\n\n    BigBird (introduced in paper) is one of such recent models to address this issue.\n    BigBird relies on block sparse attention instead of normal attention (i.e. BERT''s\n    attention) and can handle sequences up to a length of 4096 at a much lower computational\n    cost compared to BERT. It has achieved SOTA on various tasks involving very long\n    sequences such as long documents summarization, question-answering with long contexts.\n\n    BigBird RoBERTa-like model is now available in \ud83e\udd17Transformers. The goal of this\n    post is to give the reader an in-depth understanding of big bird implementation\n    & ease one''s life in using BigBird with \ud83e\udd17Transformers. But, before going into\n    more depth, it is important to remember that the BigBird''s attention is an approximation\n    of BERT''s full attention and therefore does not strive to be better than BERT''s\n    full attention, but rather to be more efficient. It simply allows to apply transformer-based\n    models to much longer sequences since BERT''s quadratic memory requirement quickly\n    becomes unbearable. Simply put, if we would have \u221e compute & \u221e time, BERT''s attention\n    would be preferred over block sparse attention (which we are going to discuss\n    in this post).\n\n    If you wonder why we need more compute when working with longer sequences, this\n    blog post is just right for you!\n\n    Some of the main questions one might have when working with standard BERT-like\n    attention include:\n\n    Do all tokens really have to attend to all other tokens? Why not compute attention\n    only over important tokens? How to decide what tokens are important? How to attend\n    to just a few tokens in a very efficient way? In this blog post, we will try to\n    answer those questions.\n\n    What tokens should be attended to? We will give a practical example of how attention\n    works by considering the sentence ''BigBird is now available in HuggingFace for\n    extractive question answering''. In BERT-like attention, every word would simply\n    attend to all other tokens.\n\n    Let''s think about a sensible choice of key tokens that a queried token actually\n    only should attend to by writing some pseudo-code. Will will assume that the token\n    available is queried and build a sensible list of key tokens to attend to.\n\n    >>> # let''s consider following sentence as an example >>> example = [''BigBird'',\n    ''is'', ''now'', ''available'', ''in'', ''HuggingFace'', ''for'', ''extractive'',\n    ''question'', ''answering'']\n\n    >>> # further let''s assume, we''re trying to understand the representation of\n    ''available'' i.e. >>> query_token = ''available'' >>> # We will initialize an\n    empty `set` and fill up the tokens of our interest as we proceed in this section.\n    >>> key_tokens = [] # => currently ''available'' token doesn''t have anything\n    to attend Nearby tokens should be important because, in a sentence (sequence of\n    words), the current word is highly dependent on neighboring past & future tokens.\n    This intuition is the idea behind the concept of sliding attention.'\n  example_title: bigbird blog intro\n- text: 'To be fair, you have to have a very high IQ to understand Rick and Morty.\n    The humour is extremely subtle, and without a solid grasp of theoretical physics\n    most of the jokes will go over a typical viewer''s head. There''s also Rick''s\n    nihilistic outlook, which is deftly woven into his characterisation- his personal\n    philosophy draws heavily from Narodnaya Volya literature, for instance. The fans\n    understand this stuff; they have the intellectual capacity to truly appreciate\n    the depths of these jokes, to realise that they''re not just funny- they say something\n    deep about LIFE. As a consequence people who dislike Rick & Morty truly ARE idiots-\n    of course they wouldn''t appreciate, for instance, the humour in Rick''s existential\n    catchphrase ''Wubba Lubba Dub Dub,'' which itself is a cryptic reference to Turgenev''s\n    Russian epic Fathers and Sons. I''m smirking right now just imagining one of those\n    addlepated simpletons scratching their heads in confusion as Dan Harmon''s genius\n    wit unfolds itself on their television screens. What fools.. how I pity them.\n    \ud83d\ude02\n\n    And yes, by the way, i DO have a Rick & Morty tattoo. And no, you cannot see it.\n    It''s for the ladies'' eyes only- and even then they have to demonstrate that\n    they''re within 5 IQ points of my own (preferably lower) beforehand. Nothin personnel\n    kid \ud83d\ude0e'\n  example_title: Richard & Mortimer\nparameters:\n  max_length: 48\n  min_length: 2\n  no_repeat_ngram_size: 3\n  encoder_no_repeat_ngram_size: 3\n  early_stopping: true\n  length_penalty: 0.1\n  num_beams: 2\nmodel-index:\n- name: pszemraj/pegasus-x-large-book-summary\n  results:\n  - task:\n      type: summarization\n      name: Summarization\n    dataset:\n      name: samsum\n      type: samsum\n      config: samsum\n      split: test\n    metrics:\n    - type: rouge\n      value: 33.1401\n      name: ROUGE-1\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiYjQ1NjY1OGVjYWEwMzBjMzk3ZmMyZDA0ZTcxOTdmZTUxNTc0OGYxYmY3MzJkMzFmYTVjNzU2ZTk4MzE0NWMzMSIsInZlcnNpb24iOjF9.PSHB6DMF6tkwSw5nsFE57a2ApRAy_tkS6ziKA6PSTWddEdaqfca4pfig6_olmRmcS4KxN6HHcsmioHzv4LJQBw\n    - type: rouge\n      value: 9.3095\n      name: ROUGE-2\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiMzk3MTA3NmY1OGE3MzFjZTJhYWYzNGU4NTUzMTgwM2Y1NWZjMmEyNDNmNmEzYmQzZThjOGExMjc2ZjAyZjMzZCIsInZlcnNpb24iOjF9.tfgp8p-WlkVrfducTSg4zs-byeZMCmdZw1aizPQHXm_qRAwGtKcuVkZcmza5Y3o3VqsAEmGzg5HQD1vnZvWIDA\n    - type: rouge\n      value: 24.8552\n      name: ROUGE-L\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiOTVmMTIwNDQwNTI4MmI2MmY1ODc1Mjk0NGQ5ZWE4ZTYzOGNkMjY2ZmJhMjg2MTZlNTdhYTA2ZDAxNTFjMjA2MSIsInZlcnNpb24iOjF9.9HLgy9842oIDm6ABb3L94R1P4zAqTI0QN8aP62xzIyDxUXTbWw68PEDufYLiBJbTgZ8ElopZ9I7aou2zCgXeAA\n    - type: rouge\n      value: 29.0391\n      name: ROUGE-LSUM\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiMmNhYWJjYjdjMzMxMmE4ZTE4NGEzMDdmZDZjODI5ZWRjZWJmYTEyZGIzYWQ2NjM3YzQ4MjI4ZTM4MmU5MzRjZSIsInZlcnNpb24iOjF9.d2yoVdmxjVJnsgIYFiLuaBO5Krgw4Axl5yeOSTKrvHygrAxoqT1nl4anzQiyoR3PwYBXwBkwmgpJUfZ7RNXtDQ\n    - type: loss\n      value: 2.288182497024536\n      name: loss\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiYzM5NGIwODMxOTA3MTY3ODc2ZDczYTNmMTMwM2QyZmNlZjFmZDJjMGY3NWNkMDEyYzA4OTA2ZDRiODY3Zjg4OCIsInZlcnNpb24iOjF9.8k9mC050OS7mQSR9oA8liDRDQvEx1VxmTXGLmDYJVYYtTh2HYJFGP8Vy_krocFRIYDxh-IHPEOOSr5NrLMWHBA\n    - type: gen_len\n      value: 45.2173\n      name: gen_len\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNWZhNzQ5OTQ5Yjg5YjhlOTZiZmJhZjZiODNmY2E2OTg4YTg4NWVhYzRkNzM2Mzk4NzdlMDgxM2M4NjY2YzhhYSIsInZlcnNpb24iOjF9.tDEEsPUclZDygAdGhNrBGrF24vR8ao08Nw7hmtUt5lmSZZZK_u-8rpz97QgVS6MCJdjFVnbYC4bkFnlQWI_FAA\n  - task:\n      type: summarization\n      name: Summarization\n    dataset:\n      name: launch/gov_report\n      type: launch/gov_report\n      config: plain_text\n      split: test\n    metrics:\n    - type: rouge\n      value: 39.7279\n      name: ROUGE-1\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiOTAxODk3OTUwMTIzODU3NzU2YzAzZjE2NTM3MzBjNDA0ZWRmZGU3NWUzNTg1YThhNDQ1NjQ5ZmM3OWI2YzBhNSIsInZlcnNpb24iOjF9.vnNKucBNt2-nIyODj9P2HeaWPX5AQR8L-DL8QzrO7kj58-vZnjT6hsAGmepRNzdZ1TLF-3j2J2plcNJ8lUO8Dg\n    - type: rouge\n      value: 10.8944\n      name: ROUGE-2\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNjYzMmIxOTJmZjkxOGI5N2U0NTRmMmQwOGJhMzMxYWIzMWMzYzUwMDEyMDdiZDQ2YTUzOWU0OTViMTI2YTAwYiIsInZlcnNpb24iOjF9.De0PaAikWqfWpoIXTCYP-mSFu3PUATLX08Qq74OHXM8784heFVDX1E1sXlh_QbbKJbuMuZtTKM4qr7oLUizOAw\n    - type: rouge\n      value: 19.7018\n      name: ROUGE-L\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiYzI3MjQzOGQ3MGE3NDNkZTEyMWRkYjUyYTYzNDEwOWVjMGFmNTBiZjE4ZTBhMGYzMmI1Yzk0YjBmYmIzMWMxZSIsInZlcnNpb24iOjF9.FVikJ5Ma0gUgM-tpbomWXnC4jtmvhxqikPqCk84t4IbIdU0CIYGTQEONiz-VqI0fJeNrnTS6lxpBv7XxKoq3BQ\n    - type: rouge\n      value: 36.5634\n      name: ROUGE-LSUM\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiOTI2OTVmNDZiZWE5ZjNkODIwZjJiNTU2ZjJjYjczODUwM2JiNDEzYmE3N2U5YWM5NzJjOWEzMmYzZjdlYWJmYyIsInZlcnNpb24iOjF9.poR4zcqRvdaierfWFdTa53Cv6ZbNbnRwyRTi9HukHF5AWAQgc6zpBLkwOYFYoWjuSH83ohWeMM3MoIdw3zypBw\n    - type: loss\n      value: 2.473011016845703\n      name: loss\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNDFmMjg3NWQ2YTMxMTc1OGZiYWYzNjg5NDY3MWE4MjY5ZDQxZDZhZGI1OTc5MzZkZGEzYmVlNWFiMzZjNDdhNCIsInZlcnNpb24iOjF9.05nKB3SmEfFKSduJqlleF4Fd2_IhwJS8eTOrnzZYCQQfLCfpJAZLhp3eLQCuBY4htd-FNrZftrThL66zVxyrCQ\n    - type: gen_len\n      value: 212.8243\n      name: gen_len\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiOGNjMTg4ZDZlZjAxZGNhN2M0NWI0ZTA0OWEzNDkzNDAzOTJhODA2MmVkODI4YjYzN2FiOTU1ZDMwM2VlNWMyYyIsInZlcnNpb24iOjF9.WYx6XJFKokY2heoN-jpAMp1Z1gsyJus3zpktQgNd0FOYJxOUqW40A0kkHtd15y4dUhsbccLpuJGY1fNJgHOiDw\n  - task:\n      type: summarization\n      name: Summarization\n    dataset:\n      name: billsum\n      type: billsum\n      config: default\n      split: test\n    metrics:\n    - type: rouge\n      value: 42.1065\n      name: ROUGE-1\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiZDJhNDM2MWEwMjJlYjRmZTVkYzljODcwMzlmMGUxMDA4ZmRjNjM0NmY3ZWJlMmZjNGI3NDQ3NTQyOTQ3MjBkNSIsInZlcnNpb24iOjF9.l1MiZbXyFyXAcsfFChMrTvSaBhzBR6AuDnBuII8zY3Csz3ShWK0vo09MkQdZ1epe8PKWV9wwUBuJyKk3wL7MDw\n    - type: rouge\n      value: 15.4079\n      name: ROUGE-2\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNTY3NDBkYTVkNjdhY2I0ZmY0NTA4YzVkMGE5YWE5ODdjOGE1MDhkOTJhOWY3NmI2ZWI1MGU2MGI1NDRlYjI3MSIsInZlcnNpb24iOjF9.VN-5eK2SzFDCJnFTHHu7XCU_lynaxW_JEDc3llmcNo_ffDgRmISHHGaqV7fPFymBBMXpPly7XblO_sukyqj1Cg\n    - type: rouge\n      value: 24.8814\n      name: ROUGE-L\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiZDYyNGZmNDY3MTY4YzI4ZjZhODE0NGIyN2ZkOGEyYzM3MWZjM2QzZTg5ZjNmZmYzZDE5NzhiZDQ4OGM1YjNiMyIsInZlcnNpb24iOjF9.L73M1M5XdMQkf8zSdfLN0MUrxtO0r6UiLjoOkHfrIGbWNsNJ8tU5lciYFNIhJrICUL8LchCsFqR9LAClKS4bCg\n    - type: rouge\n      value: 36.0375\n      name: ROUGE-LSUM\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiMTBlMTQ5OTQxNTA3ZmFiMGYyZWQ0MGM0ODY2YWI3MzgyNjkwNzQyM2FmNGRjMzc3MjJmZDZkOWY4M2RhZTg2MSIsInZlcnNpb24iOjF9.IiMSSVahBgH8n34bGCC_DDGpujDXQbIvGhlcpVV2EBVQLLWUqcCy5WwBdbRrxPC-asBRCNERQxj8Uii4FvPsDQ\n    - type: loss\n      value: 1.9130958318710327\n      name: loss\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNTg2NTMxZDE3MDg3MDFkMTYxNjY1OTc5YjQ4ODcyMGUxMTFiZjJiNDgyYWZhN2NjZmE1MDQ1NTRmZGY0NjQzZSIsInZlcnNpb24iOjF9.kADUBMO8i6-oGDDt1cOiGMrGcMkF_Qc1jSpS2NSFyksDRusQa_YuuShefF4DuHVEr3CS0hNjjRH9_JBeX9ZQDg\n    - type: gen_len\n      value: 179.2184\n      name: gen_len\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNjM4NGNiMTY3YzZjMzg4MTRiMDdiZDFiMzA1ZDIyMDM2MDk1OWRhYWQzN2UxZDNlODIxOWVhY2JlYjk4Mjk5YyIsInZlcnNpb24iOjF9.nU8ImMNWgjg9BKjUBJQLFaJOBq3kyIne8ldlpL0OV0e4888wOntIAcJP0dCCYfRSLVmZuXQ1M8cpDuTf50hNCw\n  - task:\n      type: summarization\n      name: Summarization\n    dataset:\n      name: kmfoda/booksum\n      type: kmfoda/booksum\n      config: kmfoda--booksum\n      split: test\n    metrics:\n    - type: rouge\n      value: 35.2154\n      name: ROUGE-1\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiZWQ5MGMzNDc4MDBiNmRiNDY5ZDM4N2QzYTJlYTNiYTcwNDBlMzdlM2I4N2VmM2ZjMmQ3NGU3OTRlMTMzMTg3NyIsInZlcnNpb24iOjF9.E55gu7HvMwc4HejF3YOD6yqQJj7_6GCoCMWm78sY5_w2glR-oM98tu9IsG27VaPva7UklxsspzT2DIVaVKY0CQ\n    - type: rouge\n      value: 6.8702\n      name: ROUGE-2\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiZjFhN2JlYzlmMGZmYzkwYjBlNjY4YzhlYzNmMTdmZWYyYmU3NWI0ZTRkMTgxNmRiM2EyZWMyMWFjY2JkNzg1MCIsInZlcnNpb24iOjF9.I9BoHbGt8LLNtLAssIXm9tQ4lHqFCMt0zJS_zTezzxGRMS5On71c3jnlzrDtwEm6wjmZEwYIJK8qqJh-Qa5YAA\n    - type: rouge\n      value: 17.6693\n      name: ROUGE-L\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiOGZlZjcwOTZjMmNjZWFkM2M5Zjg1OTgzMzcxOTM2Y2RkMzY4NGU2NDE2MTVjMjcyMWIwNWI4ODc0YTY3YTA2MSIsInZlcnNpb24iOjF9.Ou1C6U6PrOtXPxlk9PMucdJ_vlnVnSk94QrLJL4b_g2pcY3D80Xrw09iz4BTOPzZ2UTNBLyn8YdLY3m2vHpiAQ\n    - type: rouge\n      value: 32.8365\n      name: ROUGE-LSUM\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiMmIzMGQ5MzQ1MjI4MTU0ZGZkZTRhODllNWQyOTQ4ZjA5YWE4ZTJjMzQ2ZWQzOGFiMWUzZDMxOTU5NzkxYjliZiIsInZlcnNpb24iOjF9.2mYURQZYo7e3AY0tfkpqFMNhoHvrysvBXza-XYYrX_xLpruMU9Gzrwc3jvpi2wtp4eeyhzIiZJvH0O6la6zxCg\n    - type: loss\n      value: 2.9878039360046387\n      name: loss\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiZGU0ODBmN2I3OGFkNTFiM2I3YWQyNmUzNzUwYzEwNzczZWEwZjIxYTAwZDE2ZTIwMGE3ZGNmMDQzNTFmNjEwYyIsInZlcnNpb24iOjF9.0IKWIImKTXqysQUb2IMPk2eeHlOcBjndiPcU42nfFBMhRTqeXdBqOCP6cidlho7pVN4hsC-77ArJ9pZlbTFuBg\n    - type: gen_len\n      value: 200.6785\n      name: gen_len\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiMDUzYTE3MmIxZGM3MWI1MjNhMTU3MTdkMjJjNjY5Y2UzYTdjYWRiY2I4MmUxMDY4NTA5NWZjYWU0NzliODdkYiIsInZlcnNpb24iOjF9.BqmCaWzbCMNUied6zNO744Dl-0LC47FCIv-l8kDjkhSkwQcb_hi93VYts5PTsrFY_MmM8j7AsY1PiFr6nNFMBQ\n  - task:\n      type: summarization\n      name: Summarization\n    dataset:\n      name: big_patent\n      type: big_patent\n      config: y\n      split: test\n    metrics:\n    - type: rouge\n      value: 37.376\n      name: ROUGE-1\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiMWI4ZjMxODcxMThiMzE3NjQ3Zjg0NzhmZjlhY2ZmYjQwMGY5ZjlkZGY1MzZmY2M5YTU4NmY1Y2NhZDA3YWFkOCIsInZlcnNpb24iOjF9.sYh4IynXgOpVetYYSWUp0v5QZWvXC1x7_uJR0LZUxaeYKEc4yfICNmDOPzNzoroaV4ELeOaPjHQpYVm-lpAHBA\n    - type: rouge\n      value: 11.4432\n      name: ROUGE-2\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiZTZkOGIyYzU3YTQ5ZTFmMDU3MjQ5ZWM2NGQ1MzgwMDYyZDkxN2Q2YjgyZTkzMTEyYjczMGJiYmNkZmU5MTQ3NSIsInZlcnNpb24iOjF9.Qk38acpjPjU64Z1nXEuqMXjKZrGvdC9oY586EjuCPeEAJCSzKimp8FsB-1QrjMH73q6rN2CdumJUxih6HF-KAA\n    - type: rouge\n      value: 22.2754\n      name: ROUGE-L\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNzlmOTUxYmEzYzYyYmVjNGZlNzNiZWIwZmQ5OWVlY2U3NTBiZDExYWUwODQ0Y2ZjMmQyMTNmMTlmNjdmZWUwNCIsInZlcnNpb24iOjF9.bUVhxaepySyaityby71j6h4YO_l4x8OSeZoblagwUMYGXRc0Ej286QzEtZFeRGygMJ5sjUN_loWCtOmAnHY2BA\n    - type: rouge\n      value: 32.5087\n      name: ROUGE-LSUM\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNDEyNjM5NjAzYTNjN2MwZTY4MWY2Y2U5YWUyM2Y1YjAyNjBhZTM0YTAyZjM5N2M1ZDkxOWUxNzE2OWZkYTBmMSIsInZlcnNpb24iOjF9.QfMHkcoAR3xqzsgL1xjHk3Lui1xhE12pJKvYujQ_h5o6PBXT79dsENsrqDGGBjiKdTKNwWqADgaviy1VrWMDCQ\n    - type: loss\n      value: 2.9867310523986816\n      name: loss\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiZTUzM2Q5MmE5MzU4YmFlMjFiMmUzZGU2NDAzMTQ1Y2NjZDVlYWI3NGE5MjM0NmMxMjdiOWI3MTU0NDk3NmNkZiIsInZlcnNpb24iOjF9.VoQqu6ZU3AR_cji82UkpvbLnTmZ17fZmR2E4DeonjCyTZpyyfvUsQ2nbKDovQf34DBkYXENk42EUsUF1mBZNBg\n    - type: gen_len\n      value: 172.7776\n      name: gen_len\n      verified: true\n      verifyToken: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJoYXNoIjoiNTEzNTMyMDY1N2Q5ZTMxNjNlMTI0Nzk5ZDc1ZWQ5Y2IwZWM0NWNhNWY2MTk3YTRkYzUwMTI4NjZiOWVhOGQwYSIsInZlcnNpb24iOjF9.-Rek2VFmGqIEgqeFoxU_0aCWdFbGYi9BV5c7x-izm9_4vtZdYQ4ITXm4T8C3UlpOax60veJQt2Uax5vyiFc9Ag\n---\n\n# pszemraj/pegasus-x-large-book-summary\n\n\n<a href=\"https://colab.research.google.com/gist/pszemraj/6c326c0649233ab017d63adc36958d1a/pegasus-x-large-booksum-demo.ipynb\">\n  <img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/>\n</a>\n\nGet SparkNotes-esque summaries of arbitrary text! Due to the model size, it's recommended to try it out in Colab (linked above) as the API textbox may time out.\n\nThis model is a fine-tuned version of [google/pegasus-x-large](https://huggingface.co/google/pegasus-x-large) on the `kmfoda/booksum` dataset for approx eight epochs.\n\n\n## Training and evaluation data\n\nMore information needed\n\n## Training procedure\n\n### Training hyperparameters\n\n#### Epochs 1-4\n\nTODO\n\n#### Epochs 5 & 6\nThe following hyperparameters were used during training:\n\n- learning_rate: 6e-05\n- train_batch_size: 4\n- eval_batch_size: 1\n- seed: 42\n- distributed_type: multi-GPU\n- gradient_accumulation_steps: 32\n- total_train_batch_size: 128\n- optimizer: _ADAN_ using lucidrains' `adan-pytorch` with default betas\n- lr_scheduler_type: constant_with_warmup\n- data type: TF32\n- num_epochs: 2\n\n#### Epochs 7 & 8\n\n- epochs 5 & 6 were trained with 12288 tokens input\n- this fixes that with 2 epochs at 16384 tokens input\n\nThe following hyperparameters were used during training:\n- learning_rate: 0.0004\n- train_batch_size: 4\n- eval_batch_size: 1\n- seed: 42\n- distributed_type: multi-GPU\n- gradient_accumulation_steps: 16\n- total_train_batch_size: 64\n- optimizer: _ADAN_ using lucidrains' `adan-pytorch` with default betas\n- lr_scheduler_type: cosine\n- lr_scheduler_warmup_ratio: 0.03\n- num_epochs: 2\n\n### Framework versions\n\n- Transformers 4.22.0\n- Pytorch 1.11.0a0+17540c5\n- Datasets 2.4.0\n- Tokenizers 0.12.1\n", "size_bytes": "2274842165", "downloads": 2487}