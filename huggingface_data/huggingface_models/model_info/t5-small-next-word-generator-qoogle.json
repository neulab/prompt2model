{"pretrained_model_name": "allenai/t5-small-next-word-generator-qoogle", "description": "---\nlanguage: en\n---\nNext word generator trained on questions. Receives partial questions and tries to predict the next word.\nExample use: \n\n```python\nfrom transformers import T5Config, T5ForConditionalGeneration, T5Tokenizer\n\nmodel_name = \"allenai/t5-small-next-word-generator-qoogle\"\ntokenizer = T5Tokenizer.from_pretrained(model_name)\nmodel = T5ForConditionalGeneration.from_pretrained(model_name)\n\ndef run_model(input_string, **generator_args):\n    input_ids = tokenizer.encode(input_string, return_tensors=\"pt\")\n    res = model.generate(input_ids, **generator_args)\n    output = tokenizer.batch_decode(res, skip_special_tokens=True)\n    print(output)\n    return output\n\n\nrun_model(\"Which\")\nrun_model(\"Which two\")\nrun_model(\"Which two counties\")\nrun_model(\"Which two counties are\")\nrun_model(\"Which two counties are the\")\nrun_model(\"Which two counties are the biggest\")\nrun_model(\"Which two counties are the biggest economic\")\nrun_model(\"Which two counties are the biggest economic powers\")\n\n```\nwhich should result in the following:\n```\n['one']\n['statements']\n['are']\n['in']\n['most']\n['in']\n['zones']\n['of']\n``` \n\n", "size_bytes": "242087757", "downloads": 64}