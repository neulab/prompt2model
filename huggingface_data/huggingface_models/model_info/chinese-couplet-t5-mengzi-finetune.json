{"pretrained_model_name": "hululuzhu/chinese-couplet-t5-mengzi-finetune", "description": "---\nlanguage: \n  - zh\nlicense: apache-2.0\ntags:\n  - chinese poem\n  - \u4e2d\u6587\n  - \u5bf9\u8054\nwidget:\n- text: \"\u5bf9\u8054\uff1a\u5317\u56fd\u98ce\u5149\uff0c\u5343\u91cc\u51b0\u5c01\uff0c\u4e07\u91cc\u96ea\u98d8\"\n---\n\n# \u4e00\u4e2a\u597d\u73a9\u7684\u4e2d\u6587AI\u5bf9\u8054\u6a21\u578b\n- \u8f93\u5165\u683c\u5f0f\n  - `\u5bf9\u8054\uff1a\u60a8\u7684\u4e0a\u8054`\uff0c\u6bd4\u5982 `\u5bf9\u8054\uff1a\u5317\u56fd\u98ce\u5149\uff0c\u5343\u91cc\u51b0\u5c01\uff0c\u4e07\u91cc\u96ea\u98d8`\n- \u5982\u679c\u4f60\u60f3\u5c1d\u8bd5\n  - \u5982\u679c\u81ea\u5df1\u6709GPU\u73af\u5883\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u653e\u5728huggingface\u7684[\u793a\u4f8b\u4ee3\u7801](https://huggingface.co/hululuzhu/chinese-couplet-t5-mengzi-finetune#%E8%BF%90%E8%A1%8C%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B)\n  - \u6216\u8005\u4f7f\u7528Google colab\u53ef\u4ee5\u7528\u8fd9\u4e2a[\u7b80\u5355\u7684colab notebook](https://colab.research.google.com/github/hululuzhu/chinese-ai-writing-share/blob/main/inference/2022_simple_couplet_inference_huggingface.ipynb)\n- \u8bad\u7ec3\u4ee3\u7801\u8bf7\u53c2\u8003[\u6211\u7684github\u94fe\u63a5](https://github.com/hululuzhu/chinese-ai-writing-share)\n- \u5982\u679c\u60f3\u4e86\u89e3\u4e00\u4e9b\u80cc\u666f\u548c\u8ba8\u8bba\uff0c\u53ef\u4ee5\u770b\u6211\u7684[slides](https://github.com/hululuzhu/chinese-ai-writing-share/tree/main/slides)\n\n## \u67b6\u6784\n- \u9884\u8bad\u7ec3\u4f7f\u7528 [\u6f9c\u821f\u79d1\u6280\u7684\u5b5f\u5b50 T5](https://huggingface.co/Langboat/mengzi-t5-base)\n\n## \u6570\u636e\u6765\u6e90\n- \u5bf9\u8054\u6570\u636e\u96c6 https://github.com/wb14123/couplet-dataset\n  - \u6807\u51c6\u8f93\u5165\u8f93\u51faseq2seq\uff0cT5\u4f7f\u7528`\u5bf9\u8054\uff1a`\u524d\u7f00\uff0c\u957f\u5ea6\u9650\u523632\u5b57\u7b26\n\n## \u8bed\u8a00\u652f\u6301\n- \u9ed8\u8ba4\u7b80\u4f53\u4e2d\u6587\n- \u652f\u6301\u7e41\u4f53\u4e2d\u6587\uff0c\u53c2\u8003\u4e0b\u9762\u4ee3\u7801\u6807\u8bb0 `is_input_traditional_chinese=True`\n\n## \u8bad\u7ec3\n- \u6211\u662f\u7528 Google Colab Pro\uff08\u63a8\u8350\uff0c16G\u7684GPU\u4e00\u4e2a\u6708\u624d9.99\uff01\uff09\n\n## \u8fd0\u884c\u4ee3\u7801\u793a\u4f8b\n```python\n# \u5b89\u88c5\u4ee5\u4e0b2\u4e2a\u5305\u65b9\u4fbf\u6587\u5b57\u5904\u7406\u548c\u6a21\u578b\u751f\u6210\n# !pip install -q simplet5\n# !pip install -q chinese-converter\n\n# \u5177\u4f53\u4ee3\u7801\nimport torch\nfrom simplet5 import SimpleT5\nfrom transformers import T5Tokenizer, T5ForConditionalGeneration\nimport chinese_converter\n\nMODEL_PATH = \"hululuzhu/chinese-couplet-t5-mengzi-finetune\"\nclass PoemModel(SimpleT5):\n  def __init__(self) -> None:\n    super().__init__()\n    self.device = torch.device(\"cuda\")\n\n  def load_my_model(self):\n    self.tokenizer = T5Tokenizer.from_pretrained(MODEL_PATH)\n    self.model = T5ForConditionalGeneration.from_pretrained(MODEL_PATH)\n\nCOUPLET_PROMPOT = '\u5bf9\u8054\uff1a'\nMAX_SEQ_LEN = 32\nMAX_OUT_TOKENS = MAX_SEQ_LEN\n\ndef couplet(in_str, model=couplet_model,\n            is_input_traditional_chinese=False,\n            num_beams=2):\n  model.model = model.model.to('cuda')\n  in_request = f\"{COUPLET_PROMPOT}{in_str[:MAX_SEQ_LEN]}\"\n  if is_input_traditional_chinese:\n    # model only knows s chinese\n    in_request = chinese_converter.to_simplified(in_request)\n  # Note default sampling is turned off for consistent result\n  out = model.predict(in_request,\n                      max_length=MAX_OUT_TOKENS,\n                      num_beams=num_beams)[0].replace(\",\", \"\uff0c\")\n  if is_input_traditional_chinese:\n    out = chinese_converter.to_traditional(out)\n  print(f\"\u4e0a\uff1a {in_str}\\n\u4e0b\uff1a {out}\")\n```\n\n\n## \u7b80\u4f53\u4e2d\u6587\u793a\u4f8b\n```python\nfor pre in ['\u6b22\u5929\u559c\u5730\u5ea6\u4f73\u8282',\n            '\u4e0d\u5f85\u9e23\u949f\u5df2\u6c57\u989c\uff0c\u91cd\u6765\u8bd5\u624b\u7adf\u4f55\u8270',\n            '\u5f53\u5e74\u6b32\u8dc3\u9f99\u95e8\u53bb\uff0c\u4eca\u65e5\u771f\u62ab\u9a6c\u9769\u8fd8',\n            '\u5317\u56fd\u98ce\u5149\uff0c\u5343\u91cc\u51b0\u5c01\uff0c\u4e07\u91cc\u96ea\u98d8',\n            '\u5bc2\u5bde\u5bd2\u7a97\u7a7a\u5b88\u5be1',\n            '\u70df\u9501\u6c60\u5858\u67f3',\n            '\u4e94\u79d1\u4e94\u72b6\u5143\uff0c\u91d1\u6728\u6c34\u706b\u571f',\n            '\u671b\u6c5f\u697c\uff0c\u671b\u6c5f\u6d41\uff0c\u671b\u6c5f\u697c\u4e0a\u671b\u6c5f\u6d41\uff0c\u6c5f\u697c\u5343\u53e4\uff0c\u6c5f\u6d41\u5343\u53e4']:\n  couplet(pre)\n\n\u4e0a\uff1a \u6b22\u5929\u559c\u5730\u5ea6\u4f73\u8282\n\u4e0b\uff1a \u7b11\u8bed\u6b22\u6b4c\u8fce\u65b0\u6625\n\u4e0a\uff1a \u4e0d\u5f85\u9e23\u949f\u5df2\u6c57\u989c\uff0c\u91cd\u6765\u8bd5\u624b\u7adf\u4f55\u8270\n\u4e0b\uff1a \u4f55\u582a\u51fb\u9f13\u9891\u50ac\u6cea?\u4e00\u522b\u4f24\u5fc3\u66f4\u6789\u7136\n\u4e0a\uff1a \u5f53\u5e74\u6b32\u8dc3\u9f99\u95e8\u53bb\uff0c\u4eca\u65e5\u771f\u62ab\u9a6c\u9769\u8fd8\n\u4e0b\uff1a \u6b64\u65e5\u5f53\u767b\u864e\u699c\u6765\uff0c\u4ed6\u5e74\u53c8\u89c1\u9f99\u56fe\u65b0\n\u4e0a\uff1a \u5317\u56fd\u98ce\u5149\uff0c\u5343\u91cc\u51b0\u5c01\uff0c\u4e07\u91cc\u96ea\u98d8\n\u4e0b\uff1a \u5357\u7586\u6c14\u8c61\uff0c\u4e94\u6e56\u6d6a\u6d8c\uff0c\u4e09\u6c5f\u6f6e\u6765\n\u4e0a\uff1a \u5bc2\u5bde\u5bd2\u7a97\u7a7a\u5b88\u5be1\n\u4e0b\uff1a \u900d\u9065\u91ce\u6e21\u9189\u541f\u8bd7\n\u4e0a\uff1a \u70df\u9501\u6c60\u5858\u67f3\n\u4e0b\uff1a \u4e91\u5c01\u5cad\u4e0a\u677e\n\u4e0a\uff1a \u4e94\u79d1\u4e94\u72b6\u5143\uff0c\u91d1\u6728\u6c34\u706b\u571f\n\u4e0b\uff1a \u4e09\u624d\u4e09\u8fdb\u58eb\uff0c\u8bd7\u4e66\u793c\u4e50\u8bd7\n\u4e0a\uff1a \u671b\u6c5f\u697c\uff0c\u671b\u6c5f\u6d41\uff0c\u671b\u6c5f\u697c\u4e0a\u671b\u6c5f\u6d41\uff0c\u6c5f\u697c\u5343\u53e4\uff0c\u6c5f\u6d41\u5343\u53e4\n\u4e0b\uff1a \u542c\u96e8\u9601\uff0c\u542c\u96e8\u843d\uff0c\u542c\u96e8\u9601\u4e2d\u542c\u96e8\u843d\uff0c\u96e8\u9601\u4e07\u91cd\uff0c\u96e8\u843d\u4e07\u91cd\n```\n\n# \u7e41\u4f53\u4e2d\u6587\n```python\nfor pre in ['\u98db\u9f8d\u5728\u5929', '\u81fa\u5317\u98a8\u5149\u597d']:\n  couplet(pre, is_input_traditional_chinese=True, num_beams=10)\n\n\u4e0a\uff1a \u98db\u9f8d\u5728\u5929\n\u4e0b\uff1a \u98db\u9cf3\u65bc\u5929\n\u4e0a\uff1a \u81fa\u5317\u98a8\u5149\u597d\n\u4e0b\uff1a \u795e\u5dde\u6c23\u8c61\u65b0\n```", "size_bytes": "990438349", "downloads": 7}