{"pretrained_model_name": "Short-Answer-Feedback/mbart-finetuned-saf-micro-job", "description": "---\nlanguage: de\ndatasets:\n- Short-Answer-Feedback/saf_micro_job_german\ntags:\n- generated_from_trainer\nwidget:\n- text: \"Antwort: Ich gebe mich zu erkennen und zeige das Informationsschreiben vor L\u00f6sung: Der Jobber soll sich in diesem Fall dem Personal gegen\u00fcber zu erkennen geben (0.25 P) und das entsprechende Informationsschreiben in der App vorzeigen (0.25 P). Zus\u00e4tzlich muss notiert werden, zu welchem Zeitpunkt (0.25 P) des Jobs der Jobber enttarnt wurde. Zentrale Frage ist dabei, ob ein neutrales, unvoreingenommenes Verkaufsgespr\u00e4ch stattgefunden hat. Der Job soll mit Erlaubnis der Mitarbeiter bis zum Ende durchgef\u00fchrt (0.25 P) werden. Frage: Frage 1: Wie reagierst du, wenn du auf deine T\u00e4tigkeit angesprochen wirst?\"\n---\n\n# mbart-finetuned-saf-micro-job\n\nThis model is a fine-tuned version of [facebook/mbart-large-cc25](https://huggingface.co/facebook/mbart-large-cc25) on the [saf_micro_job_german](https://huggingface.co/datasets/Short-Answer-Feedback/saf_micro_job_german) dataset for Short Answer Feedback (SAF), as proposed in [Filighera et al., ACL 2022](https://aclanthology.org/2022.acl-long.587).\n\n## Model description\n\nThis model was built on top of [mBART](https://arxiv.org/abs/2001.08210), which is a sequence-to-sequence denoising auto-encoder pre-trained on large-scale monolingual corpora in many languages.\n\nIt expects inputs in the following format:\n```\nAntwort: [answer] L\u00f6sung: [reference_answer] Frage: [question]\n```\n\nIn the example above, `[answer]`, `[reference_answer]` and `[question]` should be replaced by the provided answer, the reference answer and the question to which they refer, respectively.\n\n\nThe outputs are formatted as follows:\n```\n[verification_feedback] Feedback: [feedback]\n```\n\nHence, the `[verification_feedback]` label will be one of `Correct`, `Partially correct` or `Incorrect`, while `[feedback]` will be the textual feedback generated by the model according to the given answer.\n\n## Intended uses & limitations\n\nThis model is intended to be used for Short Answer Feedback generation in the context of micro-job training (as conducted on the crowd-worker platform appJobber). Thus, it is not expected to have particularly good performance on sets of questions and answers out of this scope.\n\nIt is important to acknowledge that the model underperforms when a question that was not seen during training is given as input for inference. In particular, it tends to classify most answers as being correct and does not provide relevant feedback in such cases. Nevertheless, this limitation could be partially overcome by extending the dataset with the desired question (and associated answers) and fine-tuning it for a few epochs on the new data.  \n\n## Training and evaluation data\n\nAs mentioned previously, the model was trained on the [saf_micro_job_german](https://huggingface.co/datasets/Short-Answer-Feedback/saf_micro_job_german) dataset, which is divided into the following splits.\n\n| Split                 | Number of examples |\n| --------------------- | ------------------ |\n| train                 | 1226\t             |\n| validation            | 308\t             |\n| test_unseen_answers   | 271\t             |\n| test_unseen_questions | 602                |\n\nEvaluation was performed on the `test_unseen_answers` and `test_unseen_questions` splits.\n\n## Training procedure\n\nThe [Trainer API](https://huggingface.co/docs/transformers/main_classes/trainer#transformers.Seq2SeqTrainer) was used to fine-tune the model. The code utilized for pre-processing and training was mostly adapted from the [summarization script](https://github.com/huggingface/transformers/tree/main/examples/pytorch/summarization) made available by HuggingFace.\n\nTraining was completed in a little under 1 hour on a GPU on Google Colab.\n\n### Training hyperparameters\n\nThe following hyperparameters were utilized during training:\n- num_epochs: 10\n- optimizer: Adam with betas=(0.9, 0.999) and epsilon=1e-08\n- learning_rate: 5e-05\n- lr_scheduler_type: linear\n- train_batch_size: 1\n- gradient_accumulation_steps: 4\n- eval_batch_size: 4\n- mixed_precision_training: Native AMP\n- PyTorch seed: 42\n\n### Framework versions\n\n- Transformers 4.25.1\n- Pytorch 1.12.1+cu113\n- Datasets 2.7.1\n- Tokenizers 0.13.2\n\n## Evaluation results\n\nThe generated feedback was evaluated through means of the [SacreBLEU](https://huggingface.co/spaces/evaluate-metric/sacrebleu), [ROUGE-2](https://huggingface.co/spaces/evaluate-metric/rouge), [METEOR](https://huggingface.co/spaces/evaluate-metric/meteor), [BERTScore](https://huggingface.co/spaces/evaluate-metric/bertscore) metrics from HuggingFace, while the [accuracy](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.accuracy_score.html) and [F1](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.f1_score.html) scores from scikit-learn were used for evaluation of the labels.\n\nThe following results were achieved.\n\n| Split                 | SacreBLEU | ROUGE-2 | METEOR | BERTScore | Accuracy | Weighted F1 | Macro F1 | \n| --------------------- | :-------: | :-----: | :----: | :-------: | :------: | :---------: | :------: |\n| test_unseen_answers   | 39.5\t    | 29.8    | 63.3   | 63.1      | 80.1     | 80.3        | 80.7     |\n| test_unseen_questions | 0.3       | 0.5     | 33.8   | 31.3      | 48.7     | 46.5        | 40.6     |\n\n\nThe script used to compute these metrics and perform evaluation can be found in the `evaluation.py` file in this repository.\n\n## Usage\n\nThe example below shows how the model can be applied to generate feedback to a given answer.\n\n```python\nfrom transformers import AutoModelForSeq2SeqLM, AutoTokenizer\n\nmodel = AutoModelForSeq2SeqLM.from_pretrained('Short-Answer-Feedback/mbart-finetuned-saf-micro-job')\ntokenizer = AutoTokenizer.from_pretrained('Short-Answer-Feedback/mbart-finetuned-saf-micro-job')\n\nexample_input = 'Antwort: Ich gebe mich zu erkennen und zeige das Informationsschreiben vor L\u00f6sung: Der Jobber soll sich in diesem Fall dem Personal gegen\u00fcber zu erkennen geben (0.25 P) und das entsprechende Informationsschreiben in der App vorzeigen (0.25 P). Zus\u00e4tzlich muss notiert werden, zu welchem Zeitpunkt (0.25 P) des Jobs der Jobber enttarnt wurde. Zentrale Frage ist dabei, ob ein neutrales, unvoreingenommenes Verkaufsgespr\u00e4ch stattgefunden hat. Der Job soll mit Erlaubnis der Mitarbeiter bis zum Ende durchgef\u00fchrt (0.25 P) werden. Frage: Frage 1: Wie reagierst du, wenn du auf deine T\u00e4tigkeit angesprochen wirst?'\ninputs = tokenizer(example_input, max_length=256, padding='max_length', truncation=True, return_tensors='pt')\n\ngenerated_tokens = model.generate(\n                inputs['input_ids'],\n                attention_mask=inputs['attention_mask'],\n                max_length=128\n            )\noutput = tokenizer.batch_decode(generated_tokens, skip_special_tokens=True)[0]\n```\n\nThe output produced by the model then looks as follows:\n\n```\nPartially correct Feedback: Sollte das Personal dies gestatten, kannst du den Check auch gerne noch abschlie\u00dfen. Bitte halte nur in fest, wann genau du auf deine T\u00e4tigkeit angesprochen wurdest.\n```\n\n## Related Work\n\n[Filighera et al., ACL 2022](https://aclanthology.org/2022.acl-long.587) trained a [mT5 model](https://huggingface.co/docs/transformers/model_doc/mt5) on this dataset, providing a baseline for SAF generation. The entire code used to define and train the model can be found on [GitHub](https://github.com/SebOchs/SAF).\n", "size_bytes": "2444579705", "downloads": 4}