{"pretrained_model_name": "Ayham/roberta_gpt2_summarization_cnn_dailymail", "description": "---\ntags:\n- generated_from_trainer\ndatasets:\n- cnn_dailymail\nmodel-index:\n- name: roberta_gpt2_summarization_cnn_dailymail\n  results: []\n---\n\n<!-- This model card has been generated automatically according to the information the Trainer had access to. You\nshould probably proofread and complete it, then remove this comment. -->\n\n# roberta_gpt2_summarization_cnn_dailymail\n\nThis model is a fine-tuned version of [](https://huggingface.co/) on the cnn_dailymail dataset.\n\n## Model description\nThis model uses RoBerta encoder and GPT2 decoder and fine-tuned on the summarization task. It got Rouge scores as follows:\n\nRouge1= 35.886\n\nRouge2= 16.292\n\nRougeL= 23.499\n## Intended uses & limitations\nTo use its API:\n\nfrom transformers import RobertaTokenizerFast, GPT2Tokenizer, EncoderDecoderModel\n\nmodel = EncoderDecoderModel.from_pretrained(\"Ayham/roberta_gpt2_summarization_cnn_dailymail\")\n\ninput_tokenizer = RobertaTokenizerFast.from_pretrained('roberta-base')\n\noutput_tokenizer = GPT2Tokenizer.from_pretrained(\"gpt2\")\n\narticle = \"\"\"Your Input Text\"\"\"\n\ninput_ids = input_tokenizer(article, return_tensors=\"pt\").input_ids\n\noutput_ids = model.generate(input_ids)\n\nprint(output_tokenizer.decode(output_ids[0], skip_special_tokens=True))\n\nMore information needed\n\nMore information needed\n\n## Training procedure\n\n### Training hyperparameters\n\nThe following hyperparameters were used during training:\n- learning_rate: 5e-05\n- train_batch_size: 8\n- eval_batch_size: 8\n- seed: 42\n- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08\n- lr_scheduler_type: linear\n- lr_scheduler_warmup_steps: 2000\n- num_epochs: 3.0\n- mixed_precision_training: Native AMP\n\n### Training results\n\n\n\n### Framework versions\n\n- Transformers 4.12.0.dev0\n- Pytorch 1.10.0+cu111\n- Datasets 1.16.1\n- Tokenizers 0.10.3\n", "size_bytes": "1135171497", "downloads": 17}