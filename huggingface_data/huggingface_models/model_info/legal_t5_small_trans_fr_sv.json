{"pretrained_model_name": "SEBIS/legal_t5_small_trans_fr_sv", "description": "\n---\nlanguage: French Swedish  \ntags:\n- translation French Swedish  model\ndatasets:\n- dcep europarl jrc-acquis\nwidget:\n- text: \"pos\u00e9e conform\u00e9ment \u00e0 l'article 43 du r\u00e8glement\"\n\n---\n\n# legal_t5_small_trans_fr_sv model\n\nModel on translating legal text from French to Swedish. It was first released in\n[this repository](https://github.com/agemagician/LegalTrans). This model is trained on three parallel corpus from jrc-acquis, europarl and dcep.\n\n\n## Model description\n\nlegal_t5_small_trans_fr_sv is based on the `t5-small` model and was trained on a large corpus of parallel text. This is a smaller model, which scales the baseline model of t5 down by using `dmodel = 512`, `dff = 2,048`, 8-headed attention, and only 6 layers each in the encoder and decoder. This variant has about 60 million parameters.\n\n## Intended uses & limitations\n\nThe model could be used for translation of legal texts from French to Swedish.\n\n### How to use\n\nHere is how to use this model to translate legal text from French to Swedish in PyTorch:\n\n```python\nfrom transformers import AutoTokenizer, AutoModelWithLMHead, TranslationPipeline\n\npipeline = TranslationPipeline(\nmodel=AutoModelWithLMHead.from_pretrained(\"SEBIS/legal_t5_small_trans_fr_sv\"),\ntokenizer=AutoTokenizer.from_pretrained(pretrained_model_name_or_path = \"SEBIS/legal_t5_small_trans_fr_sv\", do_lower_case=False, \n                                            skip_special_tokens=True),\n    device=0\n)\n\nfr_text = \"pos\u00e9e conform\u00e9ment \u00e0 l'article 43 du r\u00e8glement\"\n\npipeline([fr_text], max_length=512)\n```\n\n## Training data\n\nThe legal_t5_small_trans_fr_sv model was trained on [JRC-ACQUIS](https://wt-public.emm4u.eu/Acquis/index_2.2.html), [EUROPARL](https://www.statmt.org/europarl/), and [DCEP](https://ec.europa.eu/jrc/en/language-technologies/dcep) dataset consisting of 5 Million parallel texts.\n\n## Training procedure\n\nThe model was trained on a single TPU Pod V3-8 for 250K steps in total, using sequence length 512 (batch size 4096). It has a total of approximately 220M parameters and was trained using the encoder-decoder architecture. The optimizer used is AdaFactor with inverse square root learning rate schedule for pre-training.\n\n### Preprocessing\n\nAn unigram model trained with 88M lines of text from the parallel corpus (of all possible language pairs) to get the vocabulary (with byte pair encoding), which is used with this model.\n\n### Pretraining\n\n\n\n## Evaluation results\n\nWhen the model is used for translation test dataset, achieves the following results:\n\nTest results :\n\n| Model | BLEU score |\n|:-----:|:-----:|\n|   legal_t5_small_trans_fr_sv | 41.9|\n\n\n### BibTeX entry and citation info\n\n> Created by [Ahmed Elnaggar/@Elnaggar_AI](https://twitter.com/Elnaggar_AI) | [LinkedIn](https://www.linkedin.com/in/prof-ahmed-elnaggar/)\n", "size_bytes": "242087498", "downloads": 4}