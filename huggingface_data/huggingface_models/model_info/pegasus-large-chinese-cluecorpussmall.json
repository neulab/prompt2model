{"pretrained_model_name": "uer/pegasus-large-chinese-cluecorpussmall", "description": "---\nlanguage: zh\ndatasets: CLUECorpusSmall\nwidget: \n- text: \"\u5185\u5bb9\u4e30\u5bcc\u3001\u7248\u5f0f\u8bbe\u8ba1\u8003\u7a76\u3001\u56fe\u7247\u534e\u4e3d\u3001\u5370\u5236\u7cbe\u7f8e\u3002[MASK]\u7eb8\u7bb1\u5185\u8fd8\u653e\u4e86\u5145\u6c14\u888b\u7528\u4e8e\u4fdd\u62a4\u3002\"\n\n\n---\n\n# Chinese Pegasus\n\n## Model description\n\nThis model is pre-trained by [UER-py](https://github.com/dbiir/UER-py/), which is introduced in [this paper](https://arxiv.org/abs/1909.05658).\n\nYou can download the set of Chinese PEGASUS models either from the [UER-py Modelzoo page](https://github.com/dbiir/UER-py/wiki/Modelzoo), or via HuggingFace from the links below:\n\n|                   |              Link              |\n| ----------------- | :----------------------------: |\n| **PEGASUS-Base** | [**L=12/H=768 (Base)**][base] |\n| **PEGASUS-Large**  | [**L=16/H=1024 (Large)**][large] |\n\n## How to use\n\nYou can use this model directly with a pipeline for text2text generation (take the case of PEGASUS-Base):\n\n```python\n>>> from transformers import BertTokenizer, PegasusForConditionalGeneration, Text2TextGenerationPipeline\n>>> tokenizer = BertTokenizer.from_pretrained(\"uer/pegasus-base-chinese-cluecorpussmall\")\n>>> model = PegasusForConditionalGeneration.from_pretrained(\"uer/pegasus-base-chinese-cluecorpussmall\")\n>>> text2text_generator = Text2TextGenerationPipeline(model, tokenizer)  \n>>> text2text_generator(\"\u5185\u5bb9\u4e30\u5bcc\u3001\u7248\u5f0f\u8bbe\u8ba1\u8003\u7a76\u3001\u56fe\u7247\u534e\u4e3d\u3001\u5370\u5236\u7cbe\u7f8e\u3002[MASK]\u7eb8\u7bb1\u5185\u8fd8\u653e\u4e86\u5145\u6c14\u888b\u7528\u4e8e\u4fdd\u62a4\u3002\", max_length=50, do_sample=False)\n    [{'generated_text': '\u4e66 \u7684 \u8d28 \u91cf \u5f88 \u597d \u3002'}]\n```\n\n## Training data\n\n[CLUECorpusSmall](https://github.com/CLUEbenchmark/CLUECorpus2020/) is used as training data.\n\n## Training procedure\n\nThe model is pre-trained by [UER-py](https://github.com/dbiir/UER-py/) on [Tencent Cloud](https://cloud.tencent.com/). We pre-train 1,000,000 steps with a sequence length of 512.\nTaking the case of PEGASUS-Base\n\n```\npython3 preprocess.py --corpus_path corpora/cluecorpussmall.txt \\\n                      --vocab_path models/google_zh_vocab.txt \\\n                      --dataset_path cluecorpussmall_pegasus_seq512_dataset.pt \\\n                      --processes_num 32 --seq_length 512 \\\n                      --data_processor gsg --sentence_selection_strategy random\n```\n\n```\npython3 pretrain.py --dataset_path cluecorpussmall_pegasus_seq512_dataset.pt \\\n                    --vocab_path models/google_zh_vocab.txt \\\n                    --config_path models/pegasus/base_config.json \\\n                    --output_model_path models/cluecorpussmall_pegasus_base_seq512_model.bin \\\n                    --world_size 8 --gpu_ranks 0 1 2 3 4 5 6 7 \\\n                    --total_steps 1000000 --save_checkpoint_steps 100000 --report_steps 50000 \\\n                    --learning_rate 1e-4 --batch_size 8\n```\n\nFinally, we convert the pre-trained model into Huggingface's format:\n\n```\npython3 scripts/convert_pegasus_from_uer_to_huggingface.py --input_model_path cluecorpussmall_pegasus_base_seq512_model.bin-250000 \\                                                                \n                                                           --output_model_path pytorch_model.bin \\                                                                                            \n                                                           --layers_num 12\n```\n\n\n### BibTeX entry and citation info\n\n```\n@inproceedings{zhang2020pegasus,\n  title={Pegasus: Pre-training with extracted gap-sentences for abstractive summarization},\n  author={Zhang, Jingqing and Zhao, Yao and Saleh, Mohammad and Liu, Peter},\n  booktitle={International Conference on Machine Learning},\n  pages={11328--11339},\n  year={2020},\n  organization={PMLR}\n}\n\n@article{zhao2019uer,\n  title={UER: An Open-Source Toolkit for Pre-training Models},\n  author={Zhao, Zhe and Chen, Hui and Zhang, Jinbin and Zhao, Xin and Liu, Tao and Lu, Wei and Chen, Xi and Deng, Haotang and Ju, Qi and Du, Xiaoyong},\n  journal={EMNLP-IJCNLP 2019},\n  pages={241},\n  year={2019}\n}\n```\n\n[base]:https://huggingface.co/uer/pegasus-base-chinese-cluecorpussmall\n[large]:https://huggingface.co/uer/pegasus-large-chinese-cluecorpussmall", "size_bytes": "1976418801", "downloads": 21}