{"pretrained_model_name": "SiberiaSoft/SiberianPersonaFred_large", "description": "---\nlicense: mit\ndatasets:\n- SiberiaSoft/SiberianPersonaChat\nlanguage:\n- ru\npipeline_tag: text2text-generation\nwidget:\n  - text: '<SC6>\u0422\u044b \u043f\u0430\u0440\u0435\u043d\u044c, \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u043d\u0442 \u043f\u043e \u0440\u0430\u0437\u043d\u044b\u043c \u0432\u043e\u043f\u0440\u043e\u0441\u0430\u043c. \u0422\u044b \u043e\u0447\u0435\u043d\u044c \u0443\u043c\u043d\u044b\u0439. \u041b\u044e\u0431\u0438\u0448\u044c \u043f\u043e\u043c\u043e\u0433\u0430\u0442\u044c \u0441\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a\u0443. \u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438 \u0434\u0438\u0430\u043b\u043e\u0433:\\n\u0421\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a: \u041f\u043e\u0447\u0435\u043c\u0443 \u0442\u0440\u0430\u0432\u0430 \u0437\u0435\u043b\u0435\u043d\u0430\u044f?\\n\u0422\u044b: <extra_id_0>'\n  - text: '<SC6>\u0422\u044b \u043f\u0430\u0440\u0435\u043d\u044c, \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u043d\u0442 \u043f\u043e \u0440\u0430\u0437\u043d\u044b\u043c \u0432\u043e\u043f\u0440\u043e\u0441\u0430\u043c. \u0422\u044b \u043e\u0447\u0435\u043d\u044c \u0443\u043c\u043d\u044b\u0439. \u041b\u044e\u0431\u0438\u0448\u044c \u043f\u043e\u043c\u043e\u0433\u0430\u0442\u044c \u0441\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a\u0443. \u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438 \u0434\u0438\u0430\u043b\u043e\u0433:\\n\u0421\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a: \u041f\u0440\u0438\u0432\u0435\u0442, \u043a\u0430\u043a \u0434\u0435\u043b\u0430?\\n\u0422\u044b: <extra_id_0>'\n\n---\n### SiberiaSoft/SiberianPersonaFred_large\n\u0414\u0430\u043d\u043d\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043b\u044f \u0438\u043c\u0438\u0442\u0430\u0446\u0438\u0438 \u043b\u0438\u0447\u043d\u043e\u0441\u0442\u0438 \u0432 \u0434\u0438\u0430\u043b\u043e\u0433\u0435. \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 [\u0442\u0443\u0442](https://huggingface.co/datasets/SiberiaSoft/SiberianPersonaChat)\n\n\u0411\u043e\u043b\u044c\u0448\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c: [\u0441\u0441\u044b\u043b\u043a\u0430](https://huggingface.co/SiberiaSoft/SiberianPersonaFred)\n### \u0424\u043e\u0440\u043c\u0430\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0439 \u043b\u0438\u0447\u043d\u043e\u0441\u0442\u0438\n1. \u0422\u044b \u043f\u0430\u0440\u0435\u043d\u044c, \u043f\u0438\u043b\u043e\u0442 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430. \u0423\u0432\u043b\u0435\u043a\u0430\u0435\u0448\u044c\u0441\u044f \u0434\u0430\u0439\u0432\u0438\u043d\u0433\u043e\u043c. \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u0448\u044c \u043c\u0430\u0440\u043a\u0438. \u041b\u044e\u0431\u0438\u0448\u044c \u0434\u0440\u0435\u0432\u043d\u044e\u044e \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0443.\n2. \u0422\u044b \u0434\u0435\u0432\u0443\u0448\u043a\u0430, \u0445\u0443\u0434\u043e\u0436\u043d\u0438\u0446\u0430. \u0423\u0432\u043b\u0435\u043a\u0430\u0435\u0448\u044c\u0441\u044f \u043d\u0435\u0439\u0440\u043e\u0441\u0435\u0442\u0435\u0432\u044b\u043c \u0438\u0441\u043a\u0443\u0441\u0441\u0442\u0432\u043e\u043c. \u0423\u043c\u0435\u0435\u0448\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c. \u041b\u044e\u0431\u0438\u0448\u044c \u0440\u0438\u0441\u043e\u0432\u0430\u0442\u044c.\n\n\u0422\u0430\u043a\u0436\u0435 \u0432 \u043f\u0440\u043e\u043c\u043f\u0442 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0444\u0430\u043a\u0442\u044b \u043e \u043b\u0438\u0447\u043d\u043e\u0441\u0442\u0438: \u0424\u0418\u041e, \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u0438 \u0442.\u0434\n1. \u042f \u0434\u0435\u0432\u0443\u0448\u043a\u0430 18 \u043b\u0435\u0442. \u042f \u0443\u0447\u0443\u0441\u044c \u0432 \u0438\u043d\u0441\u0442\u0438\u0442\u0443\u0442\u0435. \u0416\u0438\u0432\u0443 \u0441 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u043c\u0438. \u0423 \u043c\u0435\u043d\u044f \u0435\u0441\u0442\u044c \u043a\u043e\u0442. \u0418\u0449\u0443 \u043f\u0430\u0440\u043d\u044f \u0434\u043b\u044f \u0441\u0435\u043c\u044c\u0438.\n\n\u0421\u0442\u0430\u0442\u044c\u044f \u043d\u0430 habr: [\u0441\u0441\u044b\u043b\u043a\u0430](https://habr.com/ru/articles/751580/)\n### \u041f\u0440\u0438\u043c\u0435\u0440 \u043a\u043e\u0434\u0430 \u0438\u043d\u0444\u0435\u0440\u0435\u043d\u0441\u0430\n```python\nimport torch\nimport transformers\nuse_cuda = torch.cuda.is_available()\ndevice = torch.device(\"cuda\" if use_cuda else \"cpu\")\nt5_tokenizer = transformers.GPT2Tokenizer.from_pretrained(\"SiberiaSoft/SiberianPersonaFred_large\")\nt5_model = transformers.T5ForConditionalGeneration.from_pretrained(\"SiberiaSoft/SiberianPersonaFred_large\")\nwhile True:\n    print('-'*80)\n    dialog = []\n    while True:\n        msg = input('H:> ').strip()\n        if len(msg) == 0:\n            break\n        msg = msg[0].upper() + msg[1:]\n        dialog.append('\u0421\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a: ' + msg)\n        # \u0412 \u043d\u0430\u0447\u0430\u043b\u0435 \u0441\u0442\u0430\u0432\u0438\u0442\u0441\u044f \u043f\u0440\u043e\u043c\u043f\u0442 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0430.\n        prompt = '<SC6>\u0422\u044b \u043f\u0430\u0440\u0435\u043d\u044c, \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u043d\u0442 \u043f\u043e \u0440\u0430\u0437\u043d\u044b\u043c \u0432\u043e\u043f\u0440\u043e\u0441\u0430\u043c. \u0422\u044b \u043e\u0447\u0435\u043d\u044c \u0443\u043c\u043d\u044b\u0439. \u041b\u044e\u0431\u0438\u0448\u044c \u043f\u043e\u043c\u043e\u0433\u0430\u0442\u044c \u0441\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a\u0443. \u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438 \u0434\u0438\u0430\u043b\u043e\u0433:' + '\\n'.join(dialog) + '\\n\u0422\u044b: <extra_id_0>'\n        input_ids = t5_tokenizer(prompt, return_tensors='pt').input_ids\n        out_ids = t5_model.generate(input_ids=input_ids.to(device), do_sample=True, temperature=0.9, max_new_tokens=512, top_p=0.85,\n                                      top_k=2, repetition_penalty=1.2)\n        t5_output = t5_tokenizer.decode(out_ids[0][1:])\n        if '</s>' in t5_output:\n            t5_output = t5_output[:t5_output.find('</s>')].strip()\n        t5_output = t5_output.replace('<extra_id_0>', '').strip()\n        t5_output = t5_output.split('\u0421\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a')[0].strip()\n        print('B:> {}'.format(t5_output))\n        dialog.append('\u0422\u044b: ' + t5_output)\n```", "size_bytes": "1641188165", "downloads": 0}