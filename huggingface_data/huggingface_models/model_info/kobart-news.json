{"pretrained_model_name": "ainize/kobart-news", "description": "---\nlanguage: ko\nlicense: mit\ntags:\n- summarization\n- bart\n---\n# kobart-news\n- This model is a [kobart](https://huggingface.co/hyunwoongko/kobart) fine-tuned on the [\ubb38\uc11c\uc694\uc57d \ud14d\uc2a4\ud2b8/\uc2e0\ubb38\uae30\uc0ac](https://aihub.or.kr/aidata/8054) using [Ainize Teachable-NLP](https://ainize.ai/teachable-nlp).\n\n## Usage\n### Python Code\n```python\nfrom transformers import PreTrainedTokenizerFast, BartForConditionalGeneration\n#  Load Model and Tokenize\ntokenizer = PreTrainedTokenizerFast.from_pretrained(\"ainize/kobart-news\")\nmodel = BartForConditionalGeneration.from_pretrained(\"ainize/kobart-news\")\n# Encode Input Text\ninput_text = '\uad6d\ub0b4 \uc804\ubc18\uc801\uc778 \uacbd\uae30\uce68\uccb4\ub85c \uc0c1\uac00 \uac74\ubb3c\uc8fc\uc758 \uc218\uc775\ub3c4 \uc804\uad6d\uc801\uc778 \uac10\uc18c\uc138\ub97c \ubcf4\uc774\uace0 \uc788\ub294 \uac83\uc73c\ub85c \ub098\ud0c0\ub0ac\ub2e4. \uc218\uc775\ud615 \ubd80\ub3d9\uc0b0 \uc5f0\uad6c\uac1c\ubc1c\uae30\uc5c5 \uc0c1\uac00\uc815\ubcf4\uc5f0\uad6c\uc18c\ub294 \ud55c\uad6d\uac10\uc815\uc6d0 \ud1b5\uacc4\ub97c \ubd84\uc11d\ud55c \uacb0\uacfc \uc804\uad6d \uc911\ub300\ud615 \uc0c1\uac00 \uc21c\uc601\uc5c5\uc18c\ub4dd(\ubd80\ub3d9\uc0b0\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \uc784\ub300\uc218\uc785, \uae30\ud0c0\uc218\uc785\uc5d0\uc11c \uc81c\ubc18 \uacbd\ube44\ub97c \uacf5\uc81c\ud55c \uc21c\uc18c\ub4dd)\uc774 1\ubd84\uae30 \u33a1\ub2f9 3\ub9cc4200\uc6d0\uc5d0\uc11c 3\ubd84\uae30 2\ub9cc5800\uc6d0\uc73c\ub85c \uac10\uc18c\ud588\ub2e4\uace0 17\uc77c \ubc1d\ud614\ub2e4. \uc218\ub3c4\uad8c, \uc138\uc885\uc2dc, \uc9c0\ubc29\uad11\uc5ed\uc2dc\uc5d0\uc11c \uc21c\uc601\uc5c5\uc18c\ub4dd\uc774 \uac00\uc7a5 \ub9ce\uc774 \uac10\uc18c\ud55c \uc9c0\uc5ed\uc740 3\ubd84\uae30 1\ub9cc3100\uc6d0\uc744 \uae30\ub85d\ud55c \uc6b8\uc0b0\uc73c\ub85c, 1\ubd84\uae30 1\ub9cc9100\uc6d0 \ub300\ube44 31.4% \uac10\uc18c\ud588\ub2e4. \uc774\uc5b4 \ub300\uad6c(-27.7%), \uc11c\uc6b8(-26.9%), \uad11\uc8fc(-24.9%), \ubd80\uc0b0(-23.5%), \uc138\uc885(-23.4%), \ub300\uc804(-21%), \uacbd\uae30(-19.2%), \uc778\ucc9c(-18.5%) \uc21c\uc73c\ub85c \uac10\uc18c\ud588\ub2e4. \uc9c0\ubc29 \ub3c4\uc2dc\uc758 \uacbd\uc6b0\ub3c4 \ube44\uc2b7\ud588\ub2e4. \uacbd\ub0a8\uc758 3\ubd84\uae30 \uc21c\uc601\uc5c5\uc18c\ub4dd\uc740 1\ub9cc2800\uc6d0\uc73c\ub85c 1\ubd84\uae30 1\ub9cc7400\uc6d0 \ub300\ube44 26.4% \uac10\uc18c\ud588\uc73c\uba70 \uc81c\uc8fc(-25.1%), \uacbd\ubd81(-24.1%), \ucda9\ub0a8(-20.9%), \uac15\uc6d0(-20.9%), \uc804\ub0a8(-20.1%), \uc804\ubd81(-17%), \ucda9\ubd81(-15.3%) \ub4f1\ub3c4 \uac10\uc18c\uc138\ub97c \ubcf4\uc600\ub2e4. \uc870\ud604\ud0dd \uc0c1\uac00\uc815\ubcf4\uc5f0\uad6c\uc18c \uc5f0\uad6c\uc6d0\uc740 \"\uc62c\ud574 \ub0b4\uc218 \uacbd\uae30\uc758 \uce68\uccb4\ub41c \ubd84\uc704\uae30\uac00 \uc720\uc9c0\ub418\uba70 \uc0c1\uac00, \uc624\ud53c\uc2a4 \ub4f1\uc744 \ube44\ub86f\ud55c \uc218\uc775\ud615 \ubd80\ub3d9\uc0b0 \uc2dc\uc7a5\uc758 \ubd84\uc704\uae30\ub3c4 \uacbd\uc9c1\ub41c \ubaa8\uc2b5\uc744 \ubcf4\uc600\uace0 \uc624\ud53c\uc2a4\ud154, \uc9c0\uc2dd\uc0b0\uc5c5\uc13c\ud130 \ub4f1\uc758 \uc218\uc775\ud615 \ubd80\ub3d9\uc0b0 \uacf5\uae09\ub3c4 \uc99d\uac00\ud574 \uacf5\uc2e4\uc758 \uc704\ud5d8\ub3c4 \ub298\uc5c8\ub2e4\"\uba70 \"\uc2e4\uc81c \uc62c 3\ubd84\uae30 \uc804\uad6d \uc911\ub300\ud615 \uc0c1\uac00 \uacf5\uc2e4\ub960\uc740 11.5%\ub97c \uae30\ub85d\ud558\uba70 1\ubd84\uae30 11.3% \ub300\ube44 0.2% \ud3ec\uc778\ud2b8 \uc99d\uac00\ud588\ub2e4\"\uace0 \ub9d0\ud588\ub2e4. \uadf8\ub294 \"\ucd5c\uadfc \uc18c\uc15c\ucee4\uba38\uc2a4(SNS\ub97c \ud1b5\ud55c \uc804\uc790\uc0c1\uac70\ub798), \uc74c\uc2dd \ubc30\ub2ec \uc911\uac1c \uc560\ud50c\ub9ac\ucf00\uc774\uc158, \uc911\uace0 \ubb3c\ud488 \uac70\ub798 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub4f1\uc758 \uc0ac\uc6a9 \uc99d\uac00\ub85c \uc624\ud504\ub77c\uc778 \ub9e4\uc7a5\uc5d0 \uc601\ud5a5\uc744 \ubbf8\ucce4\ub2e4\"\uba70 \"\ud5a5\ud6c4 \uc9c0\uc5ed, \ucf58\ud150\uce20\uc5d0 \ub530\ub978 \uc0c1\uad8c \uc591\uadf9\ud654 \ud604\uc0c1\uc740 \uc2ec\ud654\ub420 \uac83\uc73c\ub85c \ubcf4\uc778\ub2e4\"\uace0 \ub367\ubd99\uc600\ub2e4.'\ninput_ids = tokenizer.encode(input_text, return_tensors=\"pt\")\n# Generate Summary Text Ids\nsummary_text_ids = model.generate(\n    input_ids=input_ids,\n    bos_token_id=model.config.bos_token_id,\n    eos_token_id=model.config.eos_token_id,\n    length_penalty=2.0,\n    max_length=142,\n    min_length=56,\n    num_beams=4,\n)\n# Decoding Text\nprint(tokenizer.decode(summary_text_ids[0], skip_special_tokens=True))\n```\n### API and Demo\nYou can experience this model through [ainize-api](https://ainize.ai/gkswjdzz/summarize-torchserve?branch=main) and [ainize-demo](https://main-summarize-torchserve-gkswjdzz.endpoint.ainize.ai/).\n\n\n", "size_bytes": "495662867", "downloads": 75676}