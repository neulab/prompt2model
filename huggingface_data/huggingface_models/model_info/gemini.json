{"pretrained_model_name": "describeai/gemini", "description": "---\nlanguage: en\ntags:\n- Explain code\n- Code Summarization\n- Summarization\n\nlicense: mit\n---\n\n\n# Gemini\n\nFor in-depth understanding of our model and methods, please see our blog [here](https://www.describe-ai.com/gemini)\n\n## Model description\n\nGemini is a transformer based on Google's T5 model. The model is pre-trained on approximately 800k code/description pairs and then fine-tuned on 10k higher-level explanations that were synthetically generated. Gemini is capable of summarization/explaining short to medium code snippets in:\n\n- Python\n- Javascript (mostly vanilla JS, however, it can handle frameworks like React as well)\n- Java\n- Ruby\n- Go\n\nAnd outputs a description in English. \n\n## Intended uses\n\nGemini without any additional fine-tuning is capable of explaining code in a sentence or two and typically performs best in Python and Javascript. We recommend using Gemini for either simple code explanation, documentation or producing more synthetic data to improve its explanations.\n\n### How to use\n\nYou can use this model directly with a pipeline for Text2Text generation, as shown below:\n\n```python\nfrom transformers import pipeline, set_seed\n\nsummarizer = pipeline('text2text-generation', model='describeai/gemini')\ncode = \"print('hello world!')\"\n\nresponse = summarizer(code, max_length=100, num_beams=3)\nprint(\"Summarized code: \" + response[0]['generated_text'])\n\n```\n\nWhich should yield something along the lines of:\n\n```\nSummarized code: The following code is greeting the world.\n```\n\n### Model sizes\n\n- Gemini (this repo): 770 Million Parameters\n- Gemini-Small - 220 Million Parameters\n\n\n### Limitations\n\nTypically, Gemini may produce overly simplistic descriptions that don't encompass the entire code snippet. We suspect with more training data, this could be circumvented and will produce better results.\n\n\n### About Us\n\nA Describe.ai, we are focused on building Artificial Intelligence systems that can understand language as well as humans. While a long path, we plan to contribute our findings to our API to the Open Source community.", "size_bytes": "2950904711", "downloads": 34}