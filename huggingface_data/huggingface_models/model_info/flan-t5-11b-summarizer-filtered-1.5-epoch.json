{"pretrained_model_name": "jordiclive/flan-t5-11b-summarizer-filtered-1.5-epoch", "description": "---\nlanguage:\n- en\nlicense:\n- apache-2.0\n- bsd-3-clause\ntags:\n- summarization\n- extractive\n- summary\n- abstractive\n- multi-task\n- document summary\ndatasets:\n- jordiclive/scored_summarization_datasets\n- jordiclive/wikipedia-summary-dataset\nmetrics:\n- rouge\n---\n\n# Multi-purpose Summarizer (Fine-tuned 11B google/flan-t5-xxl on several Summarization datasets)\n\n <a href=\"https://colab.research.google.com/drive/1MQYzGD8Ksi2GDjHhNN0t-DY7LxuRz5N9\">\n  <img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/>\n</a>\n\n**Note**: This model is a further trained version of [jordiclive/flan-t5-11b-summarizer-filtered](https://huggingface.co/jordiclive/flan-t5-11b-summarizer-filtered).\n\n\nA fine-tuned version of [google/flan-t5-xxl](https://huggingface.co/google/flan-t5-xxl) on various summarization datasets (xsum, wikihow, cnn_dailymail/3.0.0, samsum, scitldr/AIC, billsum, TLDR, wikipedia-summary)\n\n70% of the data was also filtered with the use of the [contriever](https://github.com/facebookresearch/contriever) with a cosine similarity between text and summary of 0.6 as threshold.\n\nGoal: a model that can be used for a general-purpose summarizer for academic and general usage. Control over the type of summary can be given by varying the instruction prepended to the source document. The result works well on lots of text, although trained with a max source length of 512 tokens and 150 max summary length. \n\n---\n\n## Usage \nCheck the colab notebook for desired usage.\n**The model expects a prompt prepended to the source document to indicate the type of summary**, this model was trained with a large (100s) variety of prompts:\n```\n\n. \nexample_prompts = {\n    \"social\": \"Produce a short summary of the following social media post:\",\n    \"ten\": \"Summarize the following article in 10-20 words:\",\n    \"5\": \"Summarize the following article in 0-5 words:\",\n    \"100\": \"Summarize the following article in about 100 words:\",\n    \"summary\": \"Write a ~ 100 word summary of the following text:\",\n    \"short\": \"Provide a short summary of the following article:\",\n}\n```\nThe model has also learned for the length of the summary to be specified in words by a range \"x-y words\" or e.g. \"~/approximately/about/ x words.\"\n\nPrompts should be formatted with a colon at the end so that the input to the model is formatted as e.g. \"Summarize the following: \\n\\n  {input_text}\"\n\nAfter `pip install transformers` run the following code:\n\nThis pipeline will run slower and not have some of the tokenization parameters as the colab.\n```python\nfrom transformers import pipeline\n\nsummarizer = pipeline(\"summarization\", \"jordiclive/flan-t5-11b-summarizer-filtered-1.5-epoch\", torch_dtype=torch.bfloat16)\n\nraw_document = 'You must be 18 years old to live or work in New York State...'\nprompt = \"Summarize the following article in 10-20 words:\"\nresults = summarizer(\n        f\"{prompt} \\n\\n {raw_document}\",\n        num_beams=5,\n        min_length=5,\n        no_repeat_ngram_size=3,\n        truncation=True,\n        max_length=512,\n    )\n```\n\n---\n\n## Training procedure\n\n- Training was done in BF16, deepspeed stage 2 with CPU offload for 1 epoch with val loss monitored.\n\n## Hardware\n- GPU count\t8 NVIDIA A100-SXM4-80GB\n- CPU count\t48\n### Training hyperparameters\n\n\nThe following hyperparameters were used during training:\n- learning_rate: 3e-05\n- train_batch_size: 4\n- eval_batch_size: 4\n- seed: 42\n- distributed_type: multi-GPU\n- gradient_accumulation_steps: 2\n- effective_train_batch_size: 64\n- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08\n- lr_scheduler_type: linear\n- warmup_steps: 2000\n- num_epochs: 4\n\n\n### Framework versions\n\n- Transformers 4.24.0\n- Pytorch 1.9.1+cu111\n- Deepspeed 0.7.4\n- Pytorch-lightning 1.8.1", "size_bytes": 22797049856, "downloads": 150}