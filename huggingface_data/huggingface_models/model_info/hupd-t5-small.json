{"pretrained_model_name": "HUPD/hupd-t5-small", "description": "---\nlanguage: \n  - en\ntags:\n- hupd\n- t5\n- summarization\n- conditional-generation\n- patents\nlicense: cc-by-sa-4.0\ndatasets:\n- HUPD/hupd\n---\n\n# HUPD T5-Small Summarization Model\n\nThis HUPD T5-Small summarization model was fine-tuned on the HUPD dataset. It was originally introduced in [this paper](TBD). \n\nFor more information about the Harvard USPTO Patent Dataset, please feel free to visit the [project website](https://patentdataset.org/) or the [project's GitHub repository](https://github.com/suzgunmirac/hupd).\n\n\n### How to Use\n\nYou can use this model directly with a pipeline for masked language modeling:\n\n```python\nfrom transformers import pipeline\nsummarizer = pipeline(task=\"summarization\", model=\"HUPD/hupd-t5-small\")\n\nTEXT = \"1. An optical coherent receiver for an optical communication network, said optical coherent receiver being configured to receive a modulated optical signal and to process said modulated optical signal for generating an in-phase component and a quadrature component, said in-phase component and said quadrature component being electrical signals, said optical coherent receiver comprising a power adjuster in turn comprising: a multiplying unit configured to multiply said in-phase component by an in-phase gain thereby providing a power-adjusted in-phase component, and to multiply said quadrature component by a quadrature gain thereby providing a power-adjusted quadrature component; and a digital circuit connected between output and input of said multiplying unit and configured to compute: a common gain indicative of a sum of a power of said power-adjusted in-phase component and a power of said power-adjusted quadrature component, and a differential gain indicative of a difference between said power of said power-adjusted in-phase component and said power of said power-adjusted quadrature component; and said in-phase gain as a product between said common gain and said differential gain, and said quadrature gain as a ratio between said common gain and said differential gain. 2. An optical coherent receiver according to claim 1, wherein it further comprises an analog-to-digital unit connected at the input of said power adjuster, said analog-to-digital unit being configured to ...\"\n\nsummarizer(TEXT)\n```\n\nHere is the output:\n```python\n[{'summary_text': 'An optical coherent receiver for an optical communication network includes a power adjuster and a digital circuit connected between output and input of the multiplying unit and configured to compute a common gain indicative of a sum of the power of an in-phase component and the power-adjusted quadrature component, and the differential gain as a product between the common gain and the diffractive gain.'}]\n```\n\nAlternatively, you can load the model and use it as follows:\n\n```python\nimport torch\nfrom transformers import AutoTokenizer, AutoModelWithLMHead\n# cuda/cpu\ndevice = 'cuda' if torch.cuda.is_available() else 'cpu'\ntokenizer = AutoTokenizer.from_pretrained(\"HUPD/hupd-t5-small\")\nmodel = AutoModelWithLMHead.from_pretrained(\"HUPD/hupd-t5-small\").to(device)\n\ninputs = tokenizer(TEXT, return_tensors=\"pt\").to(device)\n\nwith torch.no_grad():\n    outputs = model.generate(inputs.input_ids, max_new_tokens=256)\n\ngenerated_text = tokenizer.decode(outputs[0], skip_special_tokens=True)\n```\n\n## Citation\n\nFor more information, please take a look at the original paper.\n\n* Paper: [The Harvard USPTO Patent Dataset: A Large-Scale, Well-Structured, and Multi-Purpose Corpus of Patent Applications](TBD)\n\n* Authors: *Mirac Suzgun, Luke Melas-Kyriazi, Suproteem K. Sarkar, Scott Duke Kominers, and Stuart M. Shieber* \n\n* BibTeX:\n```\n@article{suzgun2022hupd,\n  title={The Harvard USPTO Patent Dataset: A Large-Scale, Well-Structured, and Multi-Purpose Corpus of Patent Applications},\n  author={Suzgun, Mirac and Melas-Kyriazi, Luke and Sarkar, Suproteem K and Kominers, Scott Duke and Shieber, Stuart M},\n  journal={arXiv preprint arXiv:2207.04043},\n  year={2022}\n}\n```", "size_bytes": "243335099", "downloads": 75}