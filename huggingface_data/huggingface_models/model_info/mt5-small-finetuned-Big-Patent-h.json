{"pretrained_model_name": "AhiyaB/mt5-small-finetuned-Big-Patent-h", "description": "---\nlicense: apache-2.0\ntags:\n- summarization\n- generated_from_trainer\ndatasets:\n- big_patent\nmetrics:\n- rouge\nmodel-index:\n- name: mt5-small-finetuned-Big-Patent-h\n  results:\n  - task:\n      name: Sequence-to-sequence Language Modeling\n      type: text2text-generation\n    dataset:\n      name: big_patent\n      type: big_patent\n      config: h\n      split: train\n      args: h\n    metrics:\n    - name: Rouge1\n      type: rouge\n      value: 33.9091\n---\n\n<!-- This model card has been generated automatically according to the information the Trainer had access to. You\nshould probably proofread and complete it, then remove this comment. -->\n\n# mt5-small-finetuned-Big-Patent-h\n\nThis model is a fine-tuned version of [google/mt5-small](https://huggingface.co/google/mt5-small) on the big_patent dataset.\nIt achieves the following results on the evaluation set:\n- Loss: 2.2622\n- Rouge1: 33.9091\n- Rouge2: 14.1731\n- Rougel: 30.105\n- Rougelsum: 30.3666\n\n## Model description\n\nIn this project, we fine-tuned mT5small, a multilingual variant of T5 that was pre-trained on a new Common Crawl-based dataset covering 101 languages.\nThe model was fine-tuned on the electric patent corpus using a variety of techniques, including transfer learning, data augmentation, and hyperparameter tuning.\n\n## Intended uses & limitations\n\nThe fine-tuned model showed significant improvements in performance on the electric patent-specific tasks compared to the original pre-trained model.\n\nNote: This project is suitable for researchers who are working on electric patent, as it's fine-tuned on electric patents and it can be used for related NLP problems for electric patent and electric patent research.\n\n## Training and evaluation data\nA subset of electric patents were used to fine-tune the model.\n\nThe fine-tuned model was evaluated using the ROUGE metric on a variety of natural language processing tasks specific to the patent domain, including, named entity recognition, and summarization.\n\n## Training procedure\n\nThe model was fine-tuned on the electric patent corpus using a variety of techniques, including transfer learning, data augmentation, and hyperparameter tuning.\n\n### Training hyperparameters\n\nThe following hyperparameters were used during training:\n- learning_rate: 5.6e-05\n- train_batch_size: 8\n- eval_batch_size: 8\n- seed: 42\n- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08\n- lr_scheduler_type: linear\n- num_epochs: 8\n\n### Training results\n\n| Training Loss | Epoch | Step | Validation Loss | Rouge1  | Rouge2  | Rougel  | Rougelsum |\n|:-------------:|:-----:|:----:|:---------------:|:-------:|:-------:|:-------:|:---------:|\n| 2.5817        | 1.0   | 1071 | 2.3830          | 32.8521 | 13.2087 | 29.5594 | 29.7744   |\n| 2.5657        | 2.0   | 2142 | 2.3345          | 33.9434 | 14.0573 | 30.0135 | 30.2533   |\n| 2.4915        | 3.0   | 3213 | 2.2761          | 33.2033 | 13.2053 | 29.5126 | 29.8023   |\n| 2.4365        | 4.0   | 4284 | 2.3041          | 33.8649 | 13.6629 | 30.0377 | 30.257    |\n| 2.3952        | 5.0   | 5355 | 2.2722          | 33.9208 | 13.8018 | 30.1035 | 30.3432   |\n| 2.3628        | 6.0   | 6426 | 2.2850          | 33.883  | 13.9537 | 30.0579 | 30.2417   |\n| 2.3474        | 7.0   | 7497 | 2.2858          | 33.7201 | 14.0808 | 30.0762 | 30.255    |\n| 2.331         | 8.0   | 8568 | 2.2622          | 33.9091 | 14.1731 | 30.105  | 30.3666   |\n\n\n### Framework versions\n\n- Transformers 4.24.0\n- Pytorch 1.12.1+cu113\n- Datasets 2.7.1\n- Tokenizers 0.13.2\n", "size_bytes": "1200770757", "downloads": 97}