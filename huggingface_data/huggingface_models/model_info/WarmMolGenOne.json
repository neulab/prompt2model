{"pretrained_model_name": "gokceuludogan/WarmMolGenOne", "description": "---\nlicense: mit\ninference: false\ntags:\n  - molecule-generation\n  - cheminformatics\n  - targeted-drug-design\n  - biochemical-language-models\n---\n\n## WarmMolGenOne\n\nA target specific molecule generator model which is warm started (i.e. initialized) from pretrained biochemical language models and trained on interacting protein-compound pairs, viewing targeted molecular generation as a translation task between protein and molecular languages. It was introduced in the paper, \"Exploiting pretrained biochemical language models for\ntargeted drug design\", which has been accepted for publication in *Bioinformatics* Published by Oxford University Press and first released in [this repository](https://github.com/boun-tabi/biochemical-lms-for-drug-design).\n\nWarmMolGenOne is a Transformer-based encoder-decoder model initialized with [Protein RoBERTa](https://github.com/PaccMann/paccmann_proteomics) and [ChemBERTa](https://huggingface.co/seyonec/PubChem10M_SMILES_BPE_450k) checkpoints and trained on interacting protein-compound pairs filtered from [BindingDB](https://www.bindingdb.org/rwd/bind/index.jsp). The model takes a protein sequence as an input and outputs a SMILES sequence. \n\n## How to use\n\n```python\nfrom transformers import EncoderDecoderModel, RobertaTokenizer, pipeline\nprotein_tokenizer = RobertaTokenizer.from_pretrained(\"gokceuludogan/WarmMolGenOne\")\nmol_tokenizer = RobertaTokenizer.from_pretrained(\"seyonec/PubChem10M_SMILES_BPE_450k\")\nmodel = EncoderDecoderModel.from_pretrained(\"gokceuludogan/WarmMolGenOne\")\ninputs = protein_tokenizer(\"MENTENSVDSKSIKNLEPKIIHGSESMDSGISLDNSYKMDYPEMGLCIIINNKNFHKSTG\", >>> return_tensors=\"pt\")\noutputs = model.generate(**inputs, decoder_start_token_id=mol_tokenizer.bos_token_id, \n                          eos_token_id=mol_tokenizer.eos_token_id, pad_token_id=mol_tokenizer.eos_token_id, \n                          max_length=128, num_return_sequences=5, do_sample=True, top_p=0.95)\nmol_tokenizer.batch_decode(outputs, skip_special_tokens=True)\n# Sample output\n# ['Cn1cc(nn1)-c1ccccc1NS(=O)(=O)c1ccc2[nH]ccc2c1',\n# 'CC(C)(C)c1[se]nc2sc(cc12)C(O)=O',\n# '[O-][N+](=O)c1ccc(CN2CCC(CC2)NC(=O)c2cccc3ccccc23)cc1',\n# 'OC(=O)CNC(=O)CCC\\\\C=C\\\\CN1[C@@H](Cc2cn(nn2)-c2ccccc2)C(=O)N[C@@H](CCCN2C(S)=NC(C)(C2=O)c2ccc(F)cc2)C1=O',\n# 'OCC1(CCC1)C(=O)NCC1CCN(CC1)c1nc(c(s1)-c1ccc2OCOc2c1)C(O)=O']\n```\n\n## Citation\n\n```bibtex\n@article{10.1093/bioinformatics/btac482,\n    author = {Uludo\u011fan, G\u00f6k\u00e7e and Ozkirimli, Elif and Ulgen, Kutlu O. and Karal\u0131, Nilg\u00fcn L\u00fctfiye and \u00d6zg\u00fcr, Arzucan},\n    title = \"{Exploiting Pretrained Biochemical Language Models for Targeted Drug Design}\",\n    journal = {Bioinformatics},\n    year = {2022},\n    doi = {10.1093/bioinformatics/btac482},\n    url = {https://doi.org/10.1093/bioinformatics/btac482}\n}\n```\n\n", "size_bytes": "766604630", "downloads": 24}