{"pretrained_model_name": "varadhbhatnagar/fc-claim-det-T5-base", "description": "---\n'[object Object]': null\nlicense: apache-2.0\nlanguage:\n- en\npipeline_tag: summarization\n---\n\n\n\n\n\n\n\n\n\n# Model Card for T5-base for Claim Summarization\n\n<!-- Provide a quick summary of what the model is/does. -->\n\nThis model can be used to summarize noisy claims on social media into clean and concise claims which can be used for downstream tasks in a fact-checking pipeline.\n\n# Model Details\n\nThis is the fine-tuned T5-base model with 'Pre-processed with Mention and Hashtag Run Removed (P-MRR-HRR)' preprocessing strategy detailed in Table 2 in the paper.\n\n## Model Description\n\n<!-- Provide a longer summary of what this model is. -->\n\n- **Developed by:** Varad Bhatnagar, Diptesh Kanojia and Kameswari Chebrolu\n- **Model type:** Summarization\n- **Language(s) (NLP):** English\n- **Finetuned from model:** https://huggingface.co/t5-base\n\n## Model Sources\n\n<!-- Provide the basic links for the model. -->\n\n- **Repository:** https://github.com/varadhbhatnagar/FC-Claim-Det\n- **Paper:** https://aclanthology.org/2022.coling-1.259/\n\n## Tokenizer\nSame as [T5-base](https://huggingface.co/t5-base)\n\n# Uses\n\n<!-- Address questions around how the model is intended to be used, including the foreseeable users of the model and those affected by the model. -->\n\n## Direct Use\n\n<!-- This section is for the model use without fine-tuning or plugging into a larger ecosystem/app. -->\n\nEnglish to English summarization on noisy fact-checking worthy claims found on social media.\n\n## Downstream Use\n\n<!-- This section is for the model use when fine-tuned for a task, or when plugged into a larger ecosystem/app -->\n\nCan be used for other tasks in a fact-checking pipeline such as claim matching and evidence retrieval.\n\n# Bias, Risks, and Limitations\n\n<!-- This section is meant to convey both technical and sociotechnical limitations. -->\n\nAs the [Google Fact Check Explorer](https://toolbox.google.com/factcheck/explorer) is an ever growing and evolving system, the current Retrieval@k results may not exactly match\nthose in the corresponding paper as those experiments were conducted in the month of April and May 2022.\n\n# Training Details\n\n## Training Data\n\n<!-- This should link to a Data Card, perhaps with a short stub of information on what the training data is all about as well as documentation related to data pre-processing or additional filtering. -->\n\n[Data](https://github.com/varadhbhatnagar/FC-Claim-Det/blob/main/public_data/released_data.csv)\n## Training Procedure \n<!-- This relates heavily to the Technical Specifications. Content here should link to that section when it is relevant to the training procedure. -->\nFinetuning the pretrained T5-base model on the 567 pairs released in our paper.\n\n### Preprocessing\n\nPre-processed with Mention and Hashtag Run Removed (P-MRR-HRR). Apply this strategy on the input text before feeding it to model for summarization.\n\n# Evaluation\n<!-- This section describes the evaluation protocols and provides the results. -->\nRetrieval@5 and Mean Reciprocal Recall scores are reported.\n\n## Results\n\nRetrieval@5 = 28.75\nMRR = 0.25\n\nFurther details can be found in the paper.\n\n# Other Models from same work\n\n[DBART](https://huggingface.co/varadhbhatnagar/fc-claim-det-DBART)\n\n[DPEGASUS](https://huggingface.co/varadhbhatnagar/fc-claim-det-DPEGASUS)\n\n# Citation\n\n<!-- If there is a paper or blog post introducing the model, the APA and Bibtex information for that should go in this section. -->\n\n**BibTeX:**\n```\n@inproceedings{bhatnagar-etal-2022-harnessing,\n    title = \"Harnessing Abstractive Summarization for Fact-Checked Claim Detection\",\n    author = \"Bhatnagar, Varad  and\n      Kanojia, Diptesh  and\n      Chebrolu, Kameswari\",\n    booktitle = \"Proceedings of the 29th International Conference on Computational Linguistics\",\n    month = oct,\n    year = \"2022\",\n    address = \"Gyeongju, Republic of Korea\",\n    publisher = \"International Committee on Computational Linguistics\",\n    url = \"https://aclanthology.org/2022.coling-1.259\",\n    pages = \"2934--2945\",\n    abstract = \"Social media platforms have become new battlegrounds for anti-social elements, with misinformation being the weapon of choice. Fact-checking organizations try to debunk as many claims as possible while staying true to their journalistic processes but cannot cope with its rapid dissemination. We believe that the solution lies in partial automation of the fact-checking life cycle, saving human time for tasks which require high cognition. We propose a new workflow for efficiently detecting previously fact-checked claims that uses abstractive summarization to generate crisp queries. These queries can then be executed on a general-purpose retrieval system associated with a collection of previously fact-checked claims. We curate an abstractive text summarization dataset comprising noisy claims from Twitter and their gold summaries. It is shown that retrieval performance improves 2x by using popular out-of-the-box summarization models and 3x by fine-tuning them on the accompanying dataset compared to verbatim querying. Our approach achieves Recall@5 and MRR of 35{\\%} and 0.3, compared to baseline values of 10{\\%} and 0.1, respectively. Our dataset, code, and models are available publicly: https://github.com/varadhbhatnagar/FC-Claim-Det/.\",\n}\n```\n\n# Model Card Authors\n\nVarad Bhatnagar\n\n# Model Card Contact\n\nEmail: varadhbhatnagar@gmail.com\n\n# How to Get Started with the Model\n\nUse the code below to get started with the model.\n\n```\nfrom transformers import T5ForConditionalGeneration, T5TokenizerFast\nhft = T5TokenizerFast.from_pretrained('varadhbhatnagar/fc-claim-det-T5-base')\nhfm = T5ForConditionalGeneration.from_pretrained('varadhbhatnagar/fc-claim-det-T5-base').to(device)\nrow = 'hi satya my name is arman today i got this video which is being spread in whatsapp and it is being said that the all old age covid 19 patients are being killed in the government hospital kindly check the facts'\n\ntokenized_text = hft.encode(row, return_tensors=\"pt\")\nsummary_ids = hfm.generate(tokenized_text,\n                                  num_beams=6,\n                                  no_repeat_ngram_size=2,\n                                  min_length=5,\n                                  max_length=15,\n                                  early_stopping=True)\n\noutput = hft.decode(summary_ids[0], skip_special_tokens=True) \n```", "size_bytes": "891702929", "downloads": 12}