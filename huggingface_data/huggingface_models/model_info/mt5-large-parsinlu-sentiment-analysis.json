{"pretrained_model_name": "persiannlp/mt5-large-parsinlu-sentiment-analysis", "description": "---\nlanguage:\n- fa\n- multilingual\nthumbnail: https://upload.wikimedia.org/wikipedia/commons/a/a2/Farsi.svg\ntags:\n- sentiment\n- sentiment-analysis\n- mt5\n- persian\n- farsi\nlicense: cc-by-nc-sa-4.0\ndatasets:\n- parsinlu\nmetrics:\n- accuracy\n---\n\n# Sentiment Analysis (\u0622\u0646\u0627\u0644\u06cc\u0632 \u0627\u062d\u0633\u0627\u0633\u0627\u062a)\n\nThis is a mT5 model for sentiment analysis.\nHere is an example of how you can run this model: \n\n```python \nimport torch\nfrom transformers import MT5ForConditionalGeneration, MT5Tokenizer\nimport numpy as np\n\nmodel_name_or_path = \"persiannlp/mt5-large-parsinlu-sentiment-analysis\"\ntokenizer = MT5Tokenizer.from_pretrained(model_name)\nmodel = MT5ForConditionalGeneration.from_pretrained(model_name)\n\n\ndef model_predict(text_a, text_b):\n    features = tokenizer( [(text_a, text_b)], padding=\"max_length\", truncation=True, return_tensors='pt')\n    output = model(**features)\n    logits = output[0]\n    probs = torch.nn.functional.softmax(logits, dim=1).tolist()\n    idx = np.argmax(np.array(probs))\n    print(labels[idx], probs)\n\n\ndef run_model(context, query, **generator_args):\n    input_ids = tokenizer.encode(context + \"<sep>\" + query, return_tensors=\"pt\")\n    res = model.generate(input_ids, **generator_args)\n    output = tokenizer.batch_decode(res, skip_special_tokens=True)\n    print(output)\n    return output\n\n\nrun_model(\n    \"\u06cc\u06a9 \u0641\u06cc\u0644\u0645 \u0636\u0639\u06cc\u0641 \u0628\u06cc \u0645\u062d\u062a\u0648\u0627 \u0628\u062f\u0648\u0646 \u0641\u06cc\u0644\u0645\u0646\u0627\u0645\u0647 . \u0634\u0648\u062e\u06cc \u0647\u0627\u06cc \u0633\u062e\u06cc\u0641 .\",\n    \"\u0646\u0638\u0631 \u0634\u0645\u0627 \u062f\u0631 \u0645\u0648\u0631\u062f \u062f\u0627\u0633\u062a\u0627\u0646\u060c \u0641\u06cc\u0644\u0645\u0646\u0627\u0645\u0647\u060c \u062f\u06cc\u0627\u0644\u0648\u06af \u0647\u0627 \u0648 \u0645\u0648\u0636\u0648\u0639 \u0641\u06cc\u0644\u0645  \u0644\u0648\u0646\u0647 \u0632\u0646\u0628\u0648\u0631 \u0686\u06cc\u0633\u062a\u061f\"\n)\n\nrun_model(\n    \"\u0641\u06cc\u0644\u0645 \u062a\u0627 \u0648\u0633\u0637 \u0641\u06cc\u0644\u0645 \u06cc\u0639\u0646\u06cc \u062f\u0642\u06cc\u0642\u0627 \u062a\u0627 \u062c\u0627\u06cc\u06cc \u06a9\u0647 \u0645\u0639\u0644\u0648\u0645 \u0645\u06cc\u0634\u0647 \u0628\u0686\u0647 \u0647\u0627\u06cc \u0627\u0645\u0644\u0634\u06cc \u062f\u0646\u0628\u0627\u0644 \u0631\u0636\u0627\u0646 \u062e\u06cc\u0644\u06cc \u062e\u0648\u0628 \u0648 \u062c\u0630\u0627\u0628 \u067e\u06cc\u0634 \u0645\u06cc\u0631\u0647 \u0648\u0644\u06cc \u062f\u0642\u06cc\u0642\u0627 \u0627\u0632 \u0647\u0645\u0648\u0646\u062c\u0627\u0634 \u0633\u06a9\u062a\u0647 \u0645\u06cc\u0632\u0646\u0647 \u0648 \u062e\u0644\u0627\u0635...\",\n    \"\u0646\u0638\u0631 \u0634\u0645\u0627 \u0628\u0647 \u0635\u0648\u0631\u062a \u06a9\u0644\u06cc \u062f\u0631 \u0645\u0648\u0631\u062f \u0641\u06cc\u0644\u0645  \u0698\u0646 \u062e\u0648\u06a9 \u0686\u06cc\u0633\u062a\u061f\"\n)\nrun_model(\n    \"\u0627\u0635\u0644\u0627 \u0628\u0647 \u0647\u06cc\u0686 \u0639\u0646\u0648\u0627\u0646 \u0639\u0644\u0627\u0642\u0647 \u0646\u062f\u0627\u0634\u062a\u0645 \u0627\u062c\u0631\u0627\u06cc \u0645\u06cc \u0633\u06cc \u0633\u06cc \u067e\u06cc \u0646\u0634\u0633\u062a\u0647 \u0645\u06cc\u0645\u06cc\u0631\u062f \u0631\u0648\u06cc \u067e\u0631\u062f\u0647 \u0633\u06cc\u0646\u0645\u0627 \u0628\u0628\u06cc\u0646\u0645  \u062f\u06cc\u0627\u0644\u0648\u06af \u0647\u0627\u06cc \u062a\u06a9\u0631\u0627\u0631\u06cc   \u0647\u0644\u06cc\u06a9\u0648\u067e\u062a\u0631  \u0645\u0627\u0634\u06cc\u0646  \u0622\u0644\u0646\u062f\u0644\u0648\u0646  \u0644\u0626\u0648\u0646  \u067e\u0627\u067e\u06cc\u0648\u0646  \u0622\u062e\u0647 \u0686\u0631\u0627\u0627\u0627\u0627\u0627\u0627\u0627\u0627\u0627\u0627\u0627\u0627\u0627\u0627\u0627   \u0647\u0645\u0648\u0646 \u062d\u0633\u06cc \u06a9\u0647 \u062a\u0648\u06cc \u062a\u0627\u0644\u0627\u0631 \u0648\u062d\u062f\u062a \u0628\u0639\u062f \u0627\u0632 \u0646\u06cc\u0645 \u0633\u0627\u0639\u062a \u0628\u0647 \u0633\u0631\u0645 \u0627\u0648\u0645\u062f \u0627\u0645\u0634\u0628 \u062a\u0648\u06cc \u0633\u0627\u0644\u0646 \u0633\u06cc\u0646\u0645\u0627 \u062a\u062c\u0631\u0628\u0647 \u06a9\u0631\u062f\u0645 \u060c\u062d\u0633 \u06af\u0631\u06cc\u0632 \u0627\u0632 \u0633\u0627\u0644\u0646.......\u2066 \u2066(\u30ce\u0ca0\u76ca\u0ca0)\u30ce\u2069 \",\n    \" \u0646\u0638\u0631 \u0634\u0645\u0627 \u062f\u0631 \u0645\u0648\u0631\u062f \u0635\u062f\u0627\u06af\u0630\u0627\u0631\u06cc \u0648 \u062c\u0644\u0648\u0647 \u0647\u0627\u06cc \u0635\u0648\u062a\u06cc \u0641\u06cc\u0644\u0645  \u0645\u0633\u062e\u0631\u0647\u200c\u0628\u0627\u0632 \u0686\u06cc\u0633\u062a\u061f\"\n)\n\nrun_model(\n    \" \u06af\u0648\u0644 \u0646\u062e\u0648\u0631\u06cc\u062f \u0627\u06cc\u0646 \u0631\u0646\u06af\u0627\u0631\u0646\u06af \u0645\u06cc\u0646\u0648 \u0646\u06cc\u0633\u062a \u0628\u0631\u0627\u06cc \u0634\u0631\u06a9\u062a \u06af\u0631\u062c\u06cc\u0647 \u0648 \u0645\u062a\u0627\u0633\u0641\u0627\u0646\u0647 \u0627\u06cc\u0646 \u0645\u062d\u0635\u0648\u0644\u0634 \u0627\u0635\u0644\u0627 \u0645\u0632\u0647 \u0631\u0646\u06af\u0627\u0631\u0646\u06af\u06cc \u06a9\u0647 \u0627\u0646\u062a\u0638\u0627\u0631 \u062f\u0627\u0631\u06cc\u062f \u0631\u0648 \u0646\u0645\u06cc\u062f\u0647 \",\n    \" \u0646\u0638\u0631 \u0634\u0645\u0627 \u062f\u0631 \u0645\u0648\u0631\u062f \u0639\u0637\u0631\u060c \u0628\u0648\u060c \u0648 \u0637\u0639\u0645 \u0627\u06cc\u0646 \u0628\u06cc\u0633\u06a9\u0648\u06cc\u062a \u0648 \u0648\u06cc\u0641\u0631 \u0686\u06cc\u0633\u062a\u061f\"\n)\n\nrun_model(\n    \"\u062f\u0631 \u0645\u0642\u0627\u06cc\u0633\u0647 \u0628\u0627 \u0633\u0627\u06cc\u0631 \u0628\u0631\u0646\u062f\u0647\u0627\u06cc \u0645\u0648\u062c\u0648\u062f \u062f\u0631 \u0628\u0627\u0632\u0627\u0631 \u0628\u0627 \u062a\u0648\u062c\u0647 \u0628\u0647 \u062d\u0631\u0627\u062c\u06cc \u06a9\u0647 \u062f\u0627\u0634\u062a \u0627\u0631\u0632\u0627\u0646\u062a\u0631 \u0628\",\n    \" \u0634\u0645\u0627 \u062f\u0631 \u0645\u0648\u0631\u062f \u0642\u06cc\u0645\u062a \u0648 \u0627\u0631\u0632\u0634 \u062e\u0631\u06cc\u062f \u0627\u06cc\u0646 \u062d\u0628\u0648\u0628\u0627\u062a \u0648 \u0633\u0648\u06cc\u0627 \u0686\u06cc\u0633\u062a\u061f\"\n)\n\nrun_model(\n    \"\u0645\u0646 \u067e\u0633\u0631\u0645 \u0639\u0627\u0634\u0642 \u0627\u06cc\u0646\u0627\u0633 \u0648\u0644\u06cc \u062f\u06cc\u06af\u0647 \u0628\u0647 \u062e\u0627\u0637\u0631 \u062d\u0641\u0638 \u0645\u062d\u06cc\u0637 \u0632\u06cc\u0633\u062a \u0641\u0642\u0637 \u0632\u0645\u0627\u0646\u0647\u0627\u06cc\u06cc \u06a9\u0647 \u0645\u062c\u0628\u0648\u0631 \u0628\u0627\u0634\u0645 \u0634\u06cc\u0631 \u062f\u0648\u0646\u0647 \u0627\u06cc \u0645\u06cc\u062e\u0631\u0645 \u0648 \u0633\u0639\u06cc \u0645\u06cc\u06a9\u0646\u0645 \u062f\u06cc\u06af\u0647 \u06a9\u0645\u062a\u0631 \u0634\u06cc\u0631 \u0628\u0627 \u0628\u0633\u062a\u0647 \u0628\u0646\u062f\u06cc \u062a\u062a\u0631\u0627\u067e\u06a9 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u0645 \",\n    \"\u0646\u0638\u0631 \u0634\u0645\u0627 \u0628\u0647 \u0635\u0648\u0631\u062a \u06a9\u0644\u06cc \u062f\u0631 \u0645\u0648\u0631\u062f \u0627\u06cc\u0646 \u0634\u06cc\u0631 \u0686\u06cc\u0633\u062a\u061f\"\n)\n```\n\n\nFor more details, visit this page: https://github.com/persiannlp/parsinlu/ \n", "size_bytes": "4918521259", "downloads": 34}