{"pretrained_model_name": "DeathReaper0965/t5-context-corrector", "description": "---\ndatasets:\n- google-research-datasets/C4_200M-synthetic-dataset-for-grammatical-error-correction\n- common-crawl\n\nlanguage:\n- en\n\nlicense: mit\n\nwidget:\n- text: Patient has a I have a blinding headache\n  example_title: Medical Example\n- text: Do you even know why I always need changed our checking account number.\n  example_title: Banking Example\n- text: Ironman and Captain America is going out.\n  example_title: General Example 1\n- text: We all eat fish and then made dessert.\n  example_title: General Example 2\n- text: We have our Dinner yesterday.\n  example_title: General Example 3\n\ninference:\n  parameters:\n    max_length: 256\n    num_beams: 3\n    no_repeat_ngram_size: 2\n    repetition_penalty: 2.5\n    temperature: 0.7\n    do_sample: True\n\ntags:\n- context-correction\n- error-correction\n---\n\n# T5 Context Corrector (base-sized)\nThis model is a fine-tuned [T5 model](https://huggingface.co/t5-base) on the [Synthetic GEC](https://github.com/google-research-datasets/C4_200M-synthetic-dataset-for-grammatical-error-correction) dataset and filtered CommonCrawl data in English Language.\nThe Base Model(T5) is Pre-trained on C4(Colossal Clean Crawled Corpus) dataset and works with numerous downstrem tasks. <br>\nOur Model specifically is fine-tuned on a single downstream task of context correction on the above mentioned two datasets.\n\n## Model description\nThis Model has the same architecture as its base model, thus having 220 Million Parameters while consisting of 12 encoder blocks and 12 decoder blocks with an input embedding size of 32128. Please refer to this [link](https://arxiv.org/pdf/1910.10683.pdf) to know more about the model details.\n\n## Intended Use & Limitations\nAs the model is intented to correct the context of the given sentence, all you have to do is pass the non-contextually correct sentence and get the corrected response back.<br>\nBased on Multiple experiments performed as part of the training, we observe that the model works best when the the total number of tokens in the input is less than 256.<br>\nSo, if you have a long paragraph that needs to be context corrected, we suggest to first sentence tokenize the paragraph and run the context corrector for each sentence separately to obtain best results.\n\nNote that the model is primarily trained on general publicly available corpus, so it maynot work well for Medical Contexts.\n\n## Usage\n\nYou can use this model directly with a pipeline for Text to Text Generation:\n\n```python\nfrom transformers import pipeline\n\n\nctx_corr = pipeline(\"text2text-generation\", model='DeathReaper0965/t5-context-corrector')\nctx_corr(\"Do you even know why I always need changed our checking account number\")\n\n###########OUTPUT###########\n# [{'generated_text': 'Do you even know why I always need to change our checking account number?'}]\n```\n\nOr you can also use the model to get the features for a given text:\n\n```python\nfrom nltk import sent_tokenize\n\nfrom transformers import T5ForConditionalGeneration, T5Tokenizer\n\n\n# Load model and tokenizer\ncc_tokenizer = T5Tokenizer.from_pretrained(\"DeathReaper0965/t5-context-corrector\")\ncc_model = T5ForConditionalGeneration.from_pretrained(\"DeathReaper0965/t5-context-corrector\")\n\n# Utility function to correct context\ndef correct_context(input_text, temperature=0.5):\n    # tokenize\n    batch = cc_tokenizer(input_text,\n                         truncation=True,\n                         padding='max_length',\n                         max_length=256, \n                         return_tensors=\"pt\")\n\n    # forward pass\n    results = cc_model.generate(**batch,\n                                max_length=256,\n                                num_beams=3,\n                                no_repeat_ngram_size=2,\n                                repetition_penalty=2.5,\n                                temperature=temperature,\n                                do_sample=True)\n    \n    return results\n\n# Utility function to split the paragraph into multiple sentences\ndef split_and_correct_context(sent):\n    sents = sent_tokenize(sent)\n    \n    final_sents = cc_tokenizer.batch_decode(correct_context(sents), \n                                            clean_up_tokenization_spaces=True, \n                                            skip_special_tokens=True)\n    \n    final_sents = \" \".join([final_sents[i].strip() for i in range(len(final_sents))])\n    \n    return final_sents\n\n\nsplit_and_correct_context(\"Do you even know why I always need changed our checking account number. Because of the securty purpos.\")\n\n###########OUTPUT###########\n# 'Do you even know why I always need to change our checking account number? Because of the security purpose.'\n```\n\n> Designed and Developed with <span style=\"color: #e25555;\">&hearts;</span> by [Praneet](https://deathreaper0965.github.io/) | [LinkedIn](http://linkedin.com/in/deathreaper0965) | [GitHub](https://github.com/DeathReaper0965/)\n", "size_bytes": "891730879", "downloads": 9}