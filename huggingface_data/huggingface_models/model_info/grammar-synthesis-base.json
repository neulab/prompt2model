{"pretrained_model_name": "pszemraj/grammar-synthesis-base", "description": "---\nlicense: cc-by-nc-sa-4.0\ntags:\n- grammar\n- spelling\n- punctuation\n- error-correction\n- grammar synthesis\ndatasets:\n- jfleg\nwidget:\n- text: \"i can has cheezburger\"\n  example_title: \"cheezburger\"\n- text: \"There car broke down so their hitching a ride to they're class.\"\n  example_title: \"compound-1\"\n- text: \"so em if we have an now so with fito ringina know how to estimate the tren given the ereafte mylite trend we can also em an estimate is nod s\ni again tort watfettering an we have estimated the trend an\ncalled wot to be called sthat of exty right now we can and look at\nwy this should not hare a trend i becan we just remove the trend an and we can we now estimate\ntesees ona effect of them exty\"\n  example_title: \"Transcribed Audio Example 2\"\n- text: \"My coworker said he used a financial planner to help choose his stocks so he wouldn't loose money.\"\n  example_title: \"incorrect word choice (context)\"\n- text: \"good so hve on an tadley i'm not able to make it to the exla session on monday this week e which is why i am e recording pre recording\nan this excelleision and so to day i want e to talk about two things and first of all em i wont em wene give a summary er about\nta ohow to remove trents in these nalitives from time series\"\n  example_title: \"lowercased audio transcription output\"\n- text: \"Semo eaxmeslp of bda gmaramr ttah occru deu to nounprnooun ageremten errrso inlceud Anan adn Pat aer mairred he has bnee togethre fro 20 yaesr Anna and Pta aer plraul wheil he is sniurgla Teh sentecne suhold rdea Aann adn Pat are mraried tyhe heav\"\n  example_title: \"descramble unintelligible text\"\n- text: \"Most of the course is about semantic or  content of language but there are also interesting topics to be learned from the servicefeatures except statistics in characters in documents. At this point, Elvthos introduces himself as his native English speaker and goes on to say that if you continue to work on social scnce,\"\n  example_title: \"social science ASR summary output\"\n  \nparameters:\n  max_length: 128\n  min_length: 2\n  num_beams: 8\n  repetition_penalty: 1.5\n  length_penalty: 0.95\n  early_stopping: True\n---\n\n\n# grammar-synthesis-base (beta)\n\na fine-tuned version of [google/t5-base-lm-adapt](https://huggingface.co/google/t5-base-lm-adapt) for grammar correction on an expanded version of the [JFLEG](https://paperswithcode.com/dataset/jfleg) dataset. Check out a [demo notebook on Colab here](https://colab.research.google.com/gist/pszemraj/91abb08aa99a14d9fdc59e851e8aed66/demo-for-grammar-synthesis-base.ipynb).\n\nusage in Python (after `pip install transformers`):\n\n```python\nfrom transformers import pipeline\ncorrector = pipeline(\n              'text2text-generation',\n              'pszemraj/grammar-synthesis-base',\n              )\nraw_text = 'i can has cheezburger'\nresults = corrector(raw_text)\nprint(results)\n```\n\n## Model description\n\nThe intent is to create a text2text language model that successfully completes \"single-shot grammar correction\" on a potentially grammatically incorrect text **that could have a lot of mistakes** with the important qualifier of **it does not semantically change text/information that IS grammatically correct.**\n\nCompare some of the heavier-error examples on [other grammar correction models](https://huggingface.co/models?dataset=dataset:jfleg) to see the difference :)\n\n## Limitations\n\n- dataset: `cc-by-nc-sa-4.0`\n- model: `apache-2.0`\n- this is **still a work-in-progress** and while probably useful for \"single-shot grammar correction\" in a lot of cases, **give the outputs a glance for correctness ok?**\n\n## Use Cases\n\nObviously, this section is quite general as there are many things one can use \"general single-shot grammar correction\" for. Some ideas or use cases:\n\n1. Correcting highly error-prone LM outputs. Some examples would be audio transcription (ASR) (this is literally some of the examples) or something like handwriting OCR. \n    - To be investigated further, depending on what model/system is used it _might_ be worth it to apply this after OCR on typed characters. \n2. Correcting/infilling text generated by text generation models to be cohesive/remove obvious errors that break the conversation immersion. I use this on the outputs of [this OPT 2.7B chatbot-esque model of myself](https://huggingface.co/pszemraj/opt-peter-2.7B).\n  > An example of this model running on CPU with beam search:\n  \n```\noriginal response:\n                ive heard it attributed to a bunch of different philosophical schools, including stoicism, pragmatism, existentialism and even some forms of post-structuralism. i think one of the most interesting (and most difficult) philosophical problems is trying to let dogs (or other animals) out of cages. the reason why this is a difficult problem is because it seems to go against our grain (so to\nsynthesizing took 306.12 seconds\nFinal response in 1294.857 s:\n        I've heard it attributed to a bunch of different philosophical schools, including solipsism, pragmatism, existentialism and even some forms of post-structuralism. i think one of the most interesting (and most difficult) philosophical problems is trying to let dogs (or other animals) out of cages. the reason why this is a difficult problem is because it seems to go against our grain (so to speak)\n```\n  _Note: that I have some other logic that removes any periods at the end of the final sentence in this chatbot setting [to avoid coming off as passive aggressive](https://www.npr.org/2020/09/05/909969004/before-texting-your-kid-make-sure-to-double-check-your-punctuation)_\n  \n3. Somewhat related to #2 above, fixing/correcting so-called [tortured-phrases](https://arxiv.org/abs/2107.06751) that are dead giveaways text was generated by a language model. _Note that _SOME_ of these are not fixed, especially as they venture into domain-specific terminology (i.e. irregular timberland instead of Random Forest)._\n\n\n## Training and evaluation data\n\nMore information needed \ud83d\ude09\n\n## Training procedure\n\n### Training hyperparameters\n\nThe following hyperparameters were used during training:\n- learning_rate: 0.0002\n- train_batch_size: 8\n- eval_batch_size: 8\n- seed: 42\n- distributed_type: multi-GPU\n- gradient_accumulation_steps: 64\n- total_train_batch_size: 512\n- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08\n- lr_scheduler_type: cosine\n- lr_scheduler_warmup_ratio: 0.02\n- num_epochs: 2\n\n### Training results\n\n\n\n### Framework versions\n\n- Transformers 4.20.1\n- Pytorch 1.12.0+cu113\n- Datasets 2.3.2\n- Tokenizers 0.12.1\n", "size_bytes": "990347691", "downloads": 60}