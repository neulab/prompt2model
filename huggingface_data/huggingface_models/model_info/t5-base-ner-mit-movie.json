{"pretrained_model_name": "olgaduchovny/t5-base-ner-mit-movie", "description": "---\nlanguage: \n  - en\n\ntags:\n- pytorch\n- ner\n- text generation\n- seq2seq\n\ninference: false\n\nlicense: mit\n\ndatasets:\n- conll2003\n\nmetrics:\n- f1\n---\n# t5-base-qa-ner-conll\n\nUnofficial implementation of [InstructionNER](https://arxiv.org/pdf/2203.03903v1.pdf).\nt5-base model tuned on conll2003 dataset.\n\nhttps://github.com/ovbystrova/InstructionNER \n\n## Inference \n```shell\ngit clone https://github.com/ovbystrova/InstructionNER \ncd InstructionNER\n```\n\n```python\nfrom instruction_ner.model import Model\nmodel = Model(\n    model_path_or_name=\"olgaduchovny/t5-base-ner-mit-movie\",\n    tokenizer_path_or_name=\"olgaduchovny/t5-base-ner-mit-movie\"\n)\noptions = [\n        \"ACTOR\",\n        \"AWARD\",\n        \"CHARACTER\",\n        \"DIRECTOR\",\n        \"GENRE\",\n        \"OPINION\",\n        \"ORIGIN\",\n        \"PLOT\",\n        \"QUOTE\",\n        \"RELATIONSHIP\",\n        \"SOUNDTRACK\",\n        \"YEAR\"\n    ]\ninstruction = \"please extract entities and their types from the input sentence, \" \\\n              \"all entity types are in options\"\ntext = \"are there any good romantic comedies out right now\"\ngeneration_kwargs = {\n    \"num_beams\": 2,\n    \"max_length\": 128\n}\npred_spans = model.predict(\n    text=text,\n    generation_kwargs=generation_kwargs,\n    instruction=instruction,\n    options=options\n)\n>>> [(19, 36, 'GENRE'), (41, 50, 'YEAR')]\n```", "size_bytes": "891730879", "downloads": 2}