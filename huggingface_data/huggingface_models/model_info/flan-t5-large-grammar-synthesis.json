{"pretrained_model_name": "pszemraj/flan-t5-large-grammar-synthesis", "description": "---\nlanguages:\n- en\nlicense: \n- cc-by-nc-sa-4.0\n- apache-2.0\ntags:\n- grammar\n- spelling\n- punctuation\n- error-correction\n- grammar synthesis\n- FLAN\n\ndatasets:\n- jfleg\nwidget:\n\n- text: \"There car broke down so their hitching a ride to they're class.\"\n  example_title: \"compound-1\"\n- text: \"i can has cheezburger\"\n  example_title: \"cheezburger\"\n- text: \"so em if we have an now so with fito ringina know how to estimate the tren given the ereafte mylite trend we can also em an estimate is nod s\ni again tort watfettering an we have estimated the trend an\ncalled wot to be called sthat of exty right now we can and look at\nwy this should not hare a trend i becan we just remove the trend an and we can we now estimate\ntesees ona effect of them exty\"\n  example_title: \"Transcribed Audio Example 2\"\n- text: \"My coworker said he used a financial planner to help choose his stocks so he wouldn't loose money.\"\n  example_title: \"incorrect word choice (context)\"\n- text: \"good so hve on an tadley i'm not able to make it to the exla session on monday this week e which is why i am e recording pre recording\nan this excelleision and so to day i want e to talk about two things and first of all em i wont em wene give a summary er about\nta ohow to remove trents in these nalitives from time series\"\n  example_title: \"lowercased audio transcription output\"\n- text: \"Frustrated, the chairs took me forever to set up.\"\n  example_title: \"dangling modifier\"\n- text: \"I would like a peice of pie.\"\n  example_title: \"miss-spelling\"\n- text: \"Which part of Zurich was you going to go hiking in when we were there for the first time together? ! ?\"\n  example_title: \"chatbot on Zurich\"\n- text: \"Most of the course is about semantic or  content of language but there are also interesting topics to be learned from the servicefeatures except statistics in characters in documents. At this point, Elvthos introduces himself as his native English speaker and goes on to say that if you continue to work on social scnce,\"\n  example_title: \"social science ASR summary output\"\n- text: \"they are somewhat nearby right yes please i'm not sure how the innish is tepen thut mayyouselect one that istatte lo variants in their property e ere interested and anyone basical e may be applyind reaching the browing approach were\"\n- \"medical course audio transcription\"\n\nparameters:\n  max_length: 128\n  min_length: 4\n  num_beams: 8\n  repetition_penalty: 1.21\n  length_penalty: 1\n  early_stopping: True\n---\n\n\n# grammar-synthesis-large: FLAN-t5\n\n <a href=\"https://colab.research.google.com/gist/pszemraj/5dc89199a631a9c6cfd7e386011452a0/demo-flan-t5-large-grammar-synthesis.ipynb\">\n  <img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/>\n</a>\n\nA fine-tuned version of [google/flan-t5-large](https://huggingface.co/google/flan-t5-large) for grammar correction on an expanded version of the [JFLEG](https://paperswithcode.com/dataset/jfleg) dataset. [Demo](https://huggingface.co/spaces/pszemraj/FLAN-grammar-correction) on HF spaces.\n\n## Example\n\n![example](https://i.imgur.com/PIhrc7E.png)\n\nCompare vs. the original [grammar-synthesis-large](https://huggingface.co/pszemraj/grammar-synthesis-large).\n\n---\n\n## usage in Python \n\n> There's a colab notebook that already has this basic version implemented (_click on the Open in Colab button_)\n\nAfter `pip install transformers` run the following code:\n\n```python\nfrom transformers import pipeline\n\ncorrector = pipeline(\n              'text2text-generation',\n              'pszemraj/flan-t5-large-grammar-synthesis',\n              )\nraw_text = 'i can has cheezburger'\nresults = corrector(raw_text)\nprint(results)\n```\n\n**For Batch Inference:** see [this discussion thread](https://huggingface.co/pszemraj/flan-t5-large-grammar-synthesis/discussions/1) for details, but essentially the dataset consists of several sentences at a time, and so I'd recommend running inference **in the same fashion:** batches of 64-96 tokens ish (or, 2-3 sentences split with regex) \n\n- it is also helpful to **first** check whether or not a given sentence needs grammar correction before using the text2text model. You can do this with BERT-type models fine-tuned on CoLA like `textattack/roberta-base-CoLA`\n- I made a notebook demonstrating batch inference [here](https://colab.research.google.com/gist/pszemraj/6e961b08970f98479511bb1e17cdb4f0/batch-grammar-check-correct-demo.ipynb)\n\n\n\n---\n\n\n## Model description\n\nThe intent is to create a text2text language model that successfully completes \"single-shot grammar correction\" on a potentially grammatically incorrect text **that could have a lot of mistakes** with the important qualifier of **it does not semantically change text/information that IS grammatically correct.**\n\nCompare some of the heavier-error examples on [other grammar correction models](https://huggingface.co/models?dataset=dataset:jfleg) to see the difference :)\n\n### ONNX Checkpoint\n\nThis model has been converted to ONNX and can be loaded/used with huggingface's `optimum` library.\n\nYou first need to [install optimum](https://huggingface.co/docs/optimum/installation)\n\n```bash\npip install optimum[onnxruntime]\n# ^ if you want to use a different runtime read their docs\n```\nload with the optimum `pipeline`\n\n```python\nfrom optimum.pipelines import pipeline\n\ncorrector = pipeline(\n    \"text2text-generation\", model=corrector_model_name, accelerator=\"ort\"\n)\n# use as normal\n```\n\n### Other checkpoints\n\nIf trading a slight decrease in grammatical correction quality for faster inference speed makes sense for your use case, check out the **[base](https://huggingface.co/pszemraj/grammar-synthesis-base)** and **[small](https://huggingface.co/pszemraj/grammar-synthesis-small)** checkpoints fine-tuned from the relevant t5 checkpoints. \n\n## Limitations\n\n- dataset: `cc-by-nc-sa-4.0`\n- model: `apache-2.0`\n- this is **still a work-in-progress** and while probably useful for \"single-shot grammar correction\" in a lot of cases, **give the outputs a glance for correctness ok?**\n\n\n## Use Cases\n\nObviously, this section is quite general as there are many things one can use \"general single-shot grammar correction\" for. Some ideas or use cases:\n\n1. Correcting highly error-prone LM outputs. Some examples would be audio transcription (ASR) (this is literally some of the examples) or something like handwriting OCR. \n    - To be investigated further, depending on what model/system is used it _might_ be worth it to apply this after OCR on typed characters. \n2. Correcting/infilling text generated by text generation models to be cohesive/remove obvious errors that break the conversation immersion. I use this on the outputs of [this OPT 2.7B chatbot-esque model of myself](https://huggingface.co/pszemraj/opt-peter-2.7B).\n  > An example of this model running on CPU with beam search:\n  \n```\nOriginal response:\n                ive heard it attributed to a bunch of different philosophical schools, including stoicism, pragmatism, existentialism and even some forms of post-structuralism. i think one of the most interesting (and most difficult) philosophical problems is trying to let dogs (or other animals) out of cages. the reason why this is a difficult problem is because it seems to go against our grain (so to\nsynthesizing took 306.12 seconds\nFinal response in 1294.857 s:\n        I've heard it attributed to a bunch of different philosophical schools, including solipsism, pragmatism, existentialism and even some forms of post-structuralism. i think one of the most interesting (and most difficult) philosophical problems is trying to let dogs (or other animals) out of cages. the reason why this is a difficult problem is because it seems to go against our grain (so to speak)\n```\n  _Note: that I have some other logic that removes any periods at the end of the final sentence in this chatbot setting [to avoid coming off as passive aggressive](https://www.npr.org/2020/09/05/909969004/before-texting-your-kid-make-sure-to-double-check-your-punctuation)_\n  \n3. Somewhat related to #2 above, fixing/correcting so-called [tortured-phrases](https://arxiv.org/abs/2107.06751) that are dead giveaways text was generated by a language model. _Note that _SOME_ of these are not fixed, especially as they venture into domain-specific terminology (i.e. irregular timberland instead of Random Forest)._\n\n---\n\n## Citation info\n\nIf you find this fine-tuned model useful in your work, please consider citing it :)\n\n```\n@misc {peter_szemraj_2022,\n\tauthor       = { {Peter Szemraj} },\n\ttitle        = { flan-t5-large-grammar-synthesis (Revision d0b5ae2) },\n\tyear         = 2022,\n\turl          = { https://huggingface.co/pszemraj/flan-t5-large-grammar-synthesis },\n\tdoi          = { 10.57967/hf/0138 },\n\tpublisher    = { Hugging Face }\n}\n```", "size_bytes": "3132793669", "downloads": 59808}