{"pretrained_model_name": "aware-ai/byt5-german-grammar", "description": "---\nlanguage: de\ntags:\n- grammar\nwidget:\n- text: \"correct german grammar: es ist sch\u00f6n so viele tolle menschen um sich zu haben denn ohne sie w\u00e4re es nicht so sch\u00f6n\"\n---\n\nexample outputs:\n\ninput: ich liebe das leben --> output: Ich liebe das Leben.\n\ninput: es ist sch\u00f6n so viele tolle menschen um sich zu haben denn ohne sie w\u00e4re es nicht so sch\u00f6n --> output: Es ist sch\u00f6n, so viele tolle Menschen, um sich zu haben, denn ohne sie w\u00e4re es nicht so sch\u00f6n.\n\ninput: der kunde hat ausdr\u00fccklich nach dirk verlangt weil er den rabatt haben m\u00f6chte --> output: Der Kunde hat ausdr\u00fccklich nach Dirk verlangt, weil er den Rabatt haben m\u00f6chte.\n\n\nthe data can be prepared like this:\nthe broken_text is used as input, while the text is the output\n```python\n\nimport re\nimport phonetics\nimport random\n\nchars_to_ignore_regex = \"[^A-Za-z0-9\\\u00f6\\\u00e4\\\u00fc\\\u00d6\\\u00c4\\\u00dc\\\u00df\\-,;.:?! ]+\"\nbroken_chars_to_ignore_regex = \"[^A-Za-z0-9\\\u00f6\\\u00e4\\\u00fc\\\u00d6\\\u00c4\\\u00dc\\\u00df\\- ]+\"\n\n\ndef do_manipulation(string):\n    text = re.sub(chars_to_ignore_regex, '', string)\n    broken_text = re.sub(broken_chars_to_ignore_regex, \"\", text.lower())\n\n    if(random.randint(0,100) >= 50):\n        for xyz in range(int(len(broken_text.split(\" \"))/4)):\n            if(random.randint(0,100) > 30):\n                randc = random.choice(broken_text.split(\" \"))\n                if(random.randint(0,10) > 4):\n                    broken_text = broken_text.replace(randc, ''.join(random.choice('abcdefghijklmnopqrstuvxyz') for _ in range(len(randc))).lower())\n                else:\n                    broken_text = broken_text.replace(randc, phonetics.metaphone(randc).lower())\n\n    return text, broken_text\n\n```\n", "size_bytes": "1198631743", "downloads": 40}