{"pretrained_model_name": "BlackKakapo/t5-small-grammar-ro-root", "description": "---\nannotations_creators: []\nlanguage:\n- ro\nlanguage_creators:\n- machine-generated\nlicense: \n- apache-2.0\nmultilinguality:\n- monolingual\npretty_name: BlackKakapo/t5-small-grammar-ro-root\nsize_categories:\n- 100K<n<1M\nsource_datasets:\n- original\ntags: []\ntask_categories:\n- text2text-generation\ntask_ids: []\n---\n\n# Romanian grammar\n![v1.0](https://img.shields.io/badge/V.1-31.03.2023-brightgreen)\n\nThis model is trained on sentences with words in the root form. To bring the words to a syntactically correct form.\n\n# Prefix\n\ngrammar: text\n\n### How to use\n```python\nfrom transformers import AutoTokenizer, AutoModelForSeq2SeqLM\n\ntokenizer = AutoTokenizer.from_pretrained(\"BlackKakapo/t5-small-grammar-ro-root\")\nmodel = AutoModelForSeq2SeqLM.from_pretrained(\"BlackKakapo/t5-small-grammar-ro-root\")\n```\n\n### Or\n```cmd\npip install happytransformer\n```\n\n```python\nfrom happytransformer import TTSettings, HappyTextToText\n\nhappy_tt_save = HappyTextToText('T5',r\"BlackKakapo/t5-small-grammar-ro\")\nbeam_settings =  TTSettings(num_beams=10, min_length=10, max_length=100)\n```\n### Generate\n```python\nsent = \"As dori ca sa corecteze toate gre\u0219elile.\"\nprefix = \"grammar: \"\nexample = prefix + sent\n\nresult = happy_tt_save.generate_text(example, args=beam_settings)\n\nprint(result.text)\n```\n### Output\n```out\nA\u0219 dori ca s\u0103 corecteze toate gre\u0219elile.\n```", "size_bytes": "891730879", "downloads": 6}