{"pretrained_model_name": "sagard21/python-code-explainer", "description": "---\ntags:\n- autotrain\n- summarization\nlanguage:\n- en\nwidget:\n- text: > \n    def preprocess(text: str) -> str:\n        text = str(text)\n        text = text.replace('\\\\n', ' ')\n        tokenized_text = text.split(' ')\n        preprocessed_text = \" \".join([token for token in tokenized_text if token])\n\n        return preprocessed_text\ndatasets:\n- sagard21/autotrain-data-code-explainer\nco2_eq_emissions:\n  emissions: 5.393079045128973\nlicense: mit\npipeline_tag: summarization\n---\n\n# Model Trained Using AutoTrain\n\n- Problem type: Summarization\n- Model ID: 2745581349\n- CO2 Emissions (in grams): 5.3931\n\n# Model Description\n\nThis model is an attempt to simplify code understanding by generating line by line explanation of a source code. This model was fine-tuned using the Salesforce/codet5-large model. Currently it is trained on a small subset of Python snippets.\n\n# Model Usage\n\n```py\nfrom transformers import (\n    AutoModelForSeq2SeqLM,\n    AutoTokenizer,\n    AutoConfig,\n    pipeline,\n)\n\nmodel_name = \"sagard21/python-code-explainer\"\n\ntokenizer = AutoTokenizer.from_pretrained(model_name, padding=True)\n\nmodel = AutoModelForSeq2SeqLM.from_pretrained(model_name)\n\nconfig = AutoConfig.from_pretrained(model_name)\n\nmodel.eval()\n\npipe = pipeline(\"summarization\", model=model_name, config=config, tokenizer=tokenizer)\n\nraw_code = \"\"\"\ndef preprocess(text: str) -> str:\n    text = str(text)\n    text = text.replace(\"\\n\", \" \")\n    tokenized_text = text.split(\" \")\n    preprocessed_text = \" \".join([token for token in tokenized_text if token])\n\n    return preprocessed_text\n\"\"\"\n\nprint(pipe(raw_code)[0][\"summary_text\"])\n\n```\n\n## Validation Metrics\n\n- Loss: 2.156\n- Rouge1: 29.375\n- Rouge2: 18.128\n- RougeL: 25.445\n- RougeLsum: 28.084\n- Gen Len: 19.000\n", "size_bytes": "2950733825", "downloads": 314}