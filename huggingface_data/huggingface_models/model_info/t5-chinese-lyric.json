{"pretrained_model_name": "souljoy/t5-chinese-lyric", "description": "---\nlanguage: zh\nwidget:\n- text: \u7528\u6237\uff1a\u5199\u4e00\u9996\u6b4c\uff0c\u6b4c\u624b\u201c\u6bdb\u6bdb\u201d\uff0c\u6b4c\u66f2\u201c\u591a\u5c11\u5e74\u540e\u201d\uff0c\u4ee5\u201c\u8c0e\u8a00\uff0c\u4f24\u75db\uff0c\u5fc3\u7231\uff0c\u63a9\u9970\uff0c\u9000\u4e00\u6b65\uff0c\u5bfb\u627e\u201d\u4e3a\u4e3b\u9898\u3002\\n\u5c0fL\uff1a\nlicense: apache-2.0\npipeline_tag: text2text-generation\ntags:\n- music\n- art\n---\n\n\n# Chinese T5\n\n## Model description\n\nControllable lyrics creation generation model. Chinese lyrics can be generated based on the provided singer name, song name and several song theme keywords.\n\n\n\nThe lyric creation robot is called \u201c\u5c0fL\u201d. So at the end of the input question, you need to add \"\\\\n\u5c0fL\uff1a\"\n\n## How to use\n\nYou can use this model directly with a pipeline for text2text generation:\n\n```python\n>>> from transformers import T5Tokenizer, T5ForConditionalGeneration, Text2TextGenerationPipeline\n>>> tokenizer = T5Tokenizer.from_pretrained(\"souljoy/t5-chinese-lyric\")\n>>> model = T5ForConditionalGeneration.from_pretrained(\"souljoy/t5-chinese-lyric\")\n>>> text2text_generator = Text2TextGenerationPipeline(model, tokenizer)  \n>>> text2text_generator(\"\u7528\u6237\uff1a\u5199\u4e00\u9996\u6b4c\uff0c\u6b4c\u624b\u201c\u6bdb\u6bdb\u201d\uff0c\u6b4c\u66f2\u201c\u591a\u5c11\u5e74\u540e\u201d\uff0c\u4ee5\u201c\u8c0e\u8a00\uff0c\u4f24\u75db\uff0c\u5fc3\u7231\uff0c\u63a9\u9970\uff0c\u9000\u4e00\u6b65\uff0c\u5bfb\u627e\u201d\u4e3a\u4e3b\u9898\u3002\\\\n\u5c0fL\uff1a\", max_length=512, do_sample=True)\n```", "size_bytes": "3132789733", "downloads": 74}