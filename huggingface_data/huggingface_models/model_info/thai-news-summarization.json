{"pretrained_model_name": "juierror/thai-news-summarization", "description": "---\nlicense: mit\nlanguage: th\ndatasets:\n- thaisum\nwidget:\n- text: \"some news with head line\"\n---\n\n\n# How to use\n```python3\nfrom transformers import MT5Tokenizer, MT5ForConditionalGeneration\n\ntokenizer = MT5Tokenizer.from_pretrained('juierror/thai-news-summarization')\nmodel = MT5ForConditionalGeneration.from_pretrained('juierror/thai-news-summarization')\n\ntext = \"some news with head line\"\n\ntokenized_text = tokenizer(text, truncation=True, padding=True, return_tensors='pt')\n    \nsource_ids = tokenized_text['input_ids'].to(\"cpu\", dtype = torch.long)\nsource_mask = tokenized_text['attention_mask'].to(\"cpu\", dtype = torch.long)\n    \ngenerated_ids = model.generate(\n    input_ids = source_ids,\n    attention_mask = source_mask, \n    max_length=512,\n    num_beams=5,\n    repetition_penalty=1, \n    length_penalty=1, \n    early_stopping=True,\n    no_repeat_ngram_size=2\n)\n\npred = tokenizer.decode(generated_ids[0], skip_special_tokens=True, clean_up_tokenization_spaces=True)\n```", "size_bytes": "1200768197", "downloads": 22}