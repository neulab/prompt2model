{"pretrained_model_name": "LarkAI/bart_large_nl2sql", "description": "---\nlicense: apache-2.0\ndatasets:\n- wikisql\nlanguage:\n- en\npipeline_tag: text2text-generation\ntags:\n- nl2sql\nwidget:\n- text: \"question: get people name with age less 25 table: id, name, age\"\n  example_title: \"less than\"\n- text: \"question: get people name with age equal 25 table: id, name, age\"\n  example_title: \"equal\"\n---\n\nnew version: [LarkAI/codet5p-770m_nl2sql_oig](https://huggingface.co/LarkAI/codet5p-770m_nl2sql_oig)\n\nuse oig-sql dataset and support more complex sql parse\n\n# How to Use\n\n```python\nimport torch\nfrom transformers import AutoTokenizer, BartForConditionalGeneration\n\ndevice = torch.device('cuda:0')\n\ntokenizer = AutoTokenizer.from_pretrained(\"LarkAI/bart_large_nl2sql\")\nmodel = BartForConditionalGeneration.from_pretrained(\"LarkAI/bart_large_nl2sql\").to(device)\n\ntext = \"question: get people name with age less 25 table: id, name, age\"\ninputs = tokenizer([text], max_length=1024, return_tensors=\"pt\")\noutput_ids = model.generate(inputs[\"input_ids\"].to(device), num_beams=self.beams, max_length=128, min_length=8)\nresponse_text = tokenizer.batch_decode(output_ids, skip_special_tokens=True, clean_up_tokenization_spaces=False)[0]\n# SELECT name FROM table WHERE age < 25\n```\n\nreference: [juierror/flan-t5-text2sql-with-schema](https://huggingface.co/juierror/flan-t5-text2sql-with-schema) - fix this [discussion](https://huggingface.co/juierror/flan-t5-text2sql-with-schema/discussions/5)\n\n# How to Train\n\nQuick start: https://github.com/huggingface/transformers/blob/main/examples/pytorch/summarization/README.md", "size_bytes": "1625329737", "downloads": 179}