{"pretrained_model_name": "SEBIS/legal_t5_small_multitask_sv_de", "description": "\n---\nlanguage: Swedish Deustch  \ntags:\n- translation Swedish Deustch  model\ndatasets:\n- dcep europarl jrc-acquis\nwidget:\n- text: \"Kan kommissionen bekr\u00e4fta att i Olaf\u2011handlingar som samlats in inom ramen f\u00f6r denna granskning, daterade mellan 2000 och 2004, kan f\u00f6ljande information hittas: \u2014\"\n\n---\n\n# legal_t5_small_multitask_sv_de model\n\nModel on translating legal text from Swedish to Deustch. It was first released in\n[this repository](https://github.com/agemagician/LegalTrans). The model is parallely trained on the three parallel corpus with 42 language pair\nfrom jrc-acquis, europarl and dcep along with the unsupervised task where the model followed the task of prediction in a masked language model.\n\n\n## Model description\n\nNo pretraining is involved in case of legal_t5_small_multitask_sv_de model, rather the unsupervised task is added with all the translation task\nto realize the multitask learning scenario.\n\n## Intended uses & limitations\n\nThe model could be used for translation of legal texts from Swedish to Deustch.\n\n### How to use\n\nHere is how to use this model to translate legal text from Swedish to Deustch in PyTorch:\n\n```python\nfrom transformers import AutoTokenizer, AutoModelWithLMHead, TranslationPipeline\n\npipeline = TranslationPipeline(\nmodel=AutoModelWithLMHead.from_pretrained(\"SEBIS/legal_t5_small_multitask_sv_de\"),\ntokenizer=AutoTokenizer.from_pretrained(pretrained_model_name_or_path = \"SEBIS/legal_t5_small_multitask_sv_de\", do_lower_case=False, \n                                            skip_special_tokens=True),\n    device=0\n)\n\nsv_text = \"Kan kommissionen bekr\u00e4fta att i Olaf\u2011handlingar som samlats in inom ramen f\u00f6r denna granskning, daterade mellan 2000 och 2004, kan f\u00f6ljande information hittas: \u2014\"\n\npipeline([sv_text], max_length=512)\n```\n\n## Training data\n\nThe legal_t5_small_multitask_sv_de model (the supervised task which involved only the corresponding langauge pair and as well as unsupervised task where all of the data of all language pairs were available) model was trained on [JRC-ACQUIS](https://wt-public.emm4u.eu/Acquis/index_2.2.html), [EUROPARL](https://www.statmt.org/europarl/), and [DCEP](https://ec.europa.eu/jrc/en/language-technologies/dcep) dataset consisting of 8 Million parallel texts.\n\n## Training procedure\n\nThe model was trained on a single TPU Pod V3-8 for 250K steps in total, using sequence length 512 (batch size 4096). It has a total of approximately 220M parameters and was trained using the encoder-decoder architecture. The optimizer used is AdaFactor with inverse square root learning rate schedule.\n\n### Preprocessing\n\nAn unigram model trained with 88M lines of text from the parallel corpus (of all possible language pairs) to get the vocabulary (with byte pair encoding), which is used with this model.\n\n### Pretraining\n\n\n## Evaluation results\n\nWhen the model is used for translation test dataset, achieves the following results:\n\nTest results :\n\n| Model | BLEU score |\n|:-----:|:-----:|\n|   legal_t5_small_multitask_sv_de | 44.684|\n\n\n### BibTeX entry and citation info\n\n> Created by [Ahmed Elnaggar/@Elnaggar_AI](https://twitter.com/Elnaggar_AI) | [LinkedIn](https://www.linkedin.com/in/prof-ahmed-elnaggar/)\n", "size_bytes": "242087498", "downloads": 3}