{"pretrained_model_name": "krotima1/mbart-ht2a-cs", "description": "---\nlanguage:\n- cs\n- cs\ntags:\n- Summarization\n- abstractive summarization\n- mbart-cc25\n- Czech\nlicense: apache-2.0\ndatasets:\n- private Czech News Center dataset news-based\n- SumeCzech dataset news-based\nmetrics:\n- rouge\n- rougeraw\n---\n\n# mBART fine-tuned model for Czech abstractive summarization (HT2A-CS)\nThis model is a fine-tuned checkpoint of [facebook/mbart-large-cc25](https://huggingface.co/facebook/mbart-large-cc25) on the Czech news dataset to produce Czech abstractive summaries.\n## Task\nThe model deals with the task ``Headline + Text to Abstract`` (HT2A) which consists in generating a multi-sentence summary considered as an abstract from a Czech news text.\n\n## Dataset\nThe model has been trained on a large Czech news dataset developed by a concatenation of two datasets, the private CNC dataset provided by Czech News Center and [SumeCzech](https://ufal.mff.cuni.cz/sumeczech) dataset. The dataset includes around 1.75M Czech news-based documents consisting of a Headline, Abstract, and Full-text sections. Truncation and padding were set to 512 tokens for the encoder and 128 for the decoder.\n\n## Training\nThe model has been trained on 1x NVIDIA Tesla A100 40GB for 60 hours and 4x NVIDIA Tesla A100 40GB for 40 hours. During training, the model has seen 12896K documents corresponding to roughly 8.4 epochs.\n\n# Use\nAssuming that you are using the provided Summarizer.ipynb file.\n```python\ndef summ_config():\n    cfg = OrderedDict([\n        # summarization model - checkpoint from website\n        (\"model_name\", \"krotima1/mbart-ht2a-cs\"),\n        (\"inference_cfg\", OrderedDict([\n            (\"num_beams\", 4),\n            (\"top_k\", 40),\n            (\"top_p\", 0.92),\n            (\"do_sample\", True),\n            (\"temperature\", 0.89),\n            (\"repetition_penalty\", 1.2),\n            (\"no_repeat_ngram_size\", None),\n            (\"early_stopping\", True),\n            (\"max_length\", 128),\n            (\"min_length\", 10),\n        ])),\n        #texts to summarize\n        (\"text\",\n            [\n                \"Input your Czech text\",\n            ]\n        ),\n    ])\n    return cfg\ncfg = summ_config()\n#load model    \nmodel = AutoModelForSeq2SeqLM.from_pretrained(cfg[\"model_name\"])\ntokenizer = AutoTokenizer.from_pretrained(cfg[\"model_name\"])\n# init summarizer\nsummarize = Summarizer(model, tokenizer, cfg[\"inference_cfg\"])\nsummarize(cfg[\"text\"])\n```", "size_bytes": "2444592057", "downloads": 35}