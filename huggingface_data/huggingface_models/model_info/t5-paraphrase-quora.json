{"pretrained_model_name": "Deep1994/t5-paraphrase-quora", "description": "---\nlicense: afl-3.0\n---\n## Model description\n\u200bT5 Model for generating paraphrases of english sentences. Trained on the [Quora Paraphrase dataset](https://www.kaggle.com/c/quora-question-pairs).\n\n## Online demo website\nClick [https://huggingface.co/spaces/Deep1994/t5-paraphrase](https://huggingface.co/spaces/Deep1994/t5-paraphrase) to have a try online.\n\n## How to use\n```python\nfrom transformers import T5ForConditionalGeneration, T5Tokenizer\nimport torch\n\ndef set_seed(seed):\n    torch.manual_seed(seed)\n    if torch.cuda.is_available():\n        torch.cuda.manual_seed_all(seed)\n\nset_seed(1234)\n\nmodel = T5ForConditionalGeneration.from_pretrained('Deep1994/t5-paraphrase-quora')\ntokenizer = T5Tokenizer.from_pretrained('Deep1994/t5-paraphrase-quora')\n\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\nmodel = model.to(device)\n\nsentence = \"What is the best comedy TV serial/series?\"\n\ntext =  \"paraphrase: \" + sentence\n\nencoding = tokenizer.encode_plus(text, pad_to_max_length=True, return_tensors=\"pt\")\ninput_ids, attention_masks = encoding[\"input_ids\"].to(device), encoding[\"attention_mask\"].to(device)\n\n# top k/ top p sampling\nbeam_outputs = model.generate(\n    input_ids=input_ids, \n    attention_mask=attention_masks,\n    do_sample=True,\n    max_length=20,\n    top_k=50,\n    top_p=0.95,\n    early_stopping=True,\n    num_return_sequences=5\n)\n\n# beam search\n# beam_outputs = model.generate(\n#     input_ids=input_ids, \n#     attention_mask=attention_masks, \n#     max_length=20, \n#     num_beams=5, \n#     no_repeat_ngram_size=2, \n#     num_return_sequences=5, \n#     early_stopping=True\n# )\n\nprint (\"\\nOriginal Question: \")\nprint (sentence)\nprint (\"\\n\")\nprint (\"Paraphrased Questions: \")\nfinal_outputs = []\nfor beam_output in beam_outputs:\n    sent = tokenizer.decode(beam_output, skip_special_tokens=True, clean_up_tokenization_spaces=True)\n    if sent.lower() != sentence.lower() and sent not in final_outputs:\n        final_outputs.append(sent)\n\nfor i, final_output in enumerate(final_outputs):\n    print(\"{}: {}\".format(i, final_output))\n\n```\n```\nOriginal Question:\nWhat is the best comedy TV serial/series?\n\nBeam search: \n0: What is the best comedy TV series?\n1: What are some of the best comedy TV series?\n2: Which is the best comedy TV series?\n3: What are the best comedy TV series?\n4: What are some of the best comedy TV shows?\n\nTop k/ Top p sampling:\n0: What are some of the best comedy TV dramas?\n1: What are the best comedy TV series or series?\n2: What are the best comedy television serials?\n3: What is the best comedy series?\n4: Which are some best comedy TV series series?\n```\n\nFor more reference on training your own T5 model, do check out [t5-paraphrase-generation](https://github.com/Deep1994/t5-paraphrase-generation).", "size_bytes": "242089354", "downloads": 10}