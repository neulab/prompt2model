{"pretrained_model_name": "scutcyr/BianQue-1.0", "description": "---\nlicense: apache-2.0\ninference:\n  parameters:\n    max_length: 250\n    temperature: 0.7\n    top_p: 1\nwidget:\n- text: \u75c5\u4eba\uff1a\u6211\u6700\u8fd1\u611f\u89c9\u5168\u8eab\u75b2\u60eb\u3002\\n\u533b\u751f\uff1a\u662f\u52b3\u7d2f\u4e86\uff0c\u8fd8\u662f\u71ac\u591c\u4e86\uff1f\\n\u75c5\u4eba\uff1a\u8fd9\u5468\u90fd\u5728\u71ac\u591c\u8d76\u8bba\u6587\\n\u533b\u751f\uff1a\n- text: \u75c5\u4eba\uff1a\u6211\u6700\u8fd1\u611f\u89c9\u5168\u8eab\u75b2\u60eb\u3002\\n\u533b\u751f\uff1a\n- text: \u75c5\u4eba\uff1a\u6211\u611f\u89c9\u81ea\u5df1\u597d\u50cf\u53d1\u70e7\u4e86\uff0c\u600e\u4e48\u529e\uff1f\\n\u533b\u751f\uff1a\nlanguage:\n- zh\n---\n\n# \u6241\u9e4a-1.0\uff1a\u901a\u8fc7\u6df7\u5408\u6307\u4ee4\u548c\u591a\u8f6e\u533b\u751f\u95ee\u8be2\u6570\u636e\u96c6\u7684\u5fae\u8c03\uff0c\u63d0\u9ad8\u533b\u7597\u804a\u5929\u6a21\u578b\u7684\u201c\u95ee\u201d\u80fd\u529b\n\n<a href='https://huggingface.co/spaces/scutcyr/BianQue' target=\"__blank\">Space Demo</a> &nbsp; | \n &nbsp; <a href='https://github.com/scutcyr/BianQue' target=\"__blank\">Github Project</a>&nbsp; |\n\n## \u7b80\u4ecb\n\n\n**\u6241\u9e4a-1.0\uff08BianQue-1.0\uff09**\u662f\u4e00\u4e2a\u7ecf\u8fc7\u6307\u4ee4\u4e0e\u591a\u8f6e\u95ee\u8be2\u5bf9\u8bdd\u8054\u5408\u5fae\u8c03\u7684\u533b\u7597\u5bf9\u8bdd\u5927\u6a21\u578b\u3002\u6211\u4eec\u7ecf\u8fc7\u8c03\u7814\u53d1\u73b0\uff0c\u5728\u533b\u7597\u9886\u57df\uff0c\u5f80\u5f80\u533b\u751f\u9700\u8981\u901a\u8fc7\u591a\u8f6e\u95ee\u8be2\u624d\u80fd\u8fdb\u884c\u51b3\u7b56\uff0c\u8fd9\u5e76\u4e0d\u662f\u5355\u7eaf\u7684\u201c\u6307\u4ee4-\u56de\u590d\u201d\u6a21\u5f0f\u3002\u7528\u6237\u5728\u54a8\u8be2\u533b\u751f\u65f6\uff0c\u5f80\u5f80\u4e0d\u4f1a\u5728\u6700\u521d\u5c31\u628a\u5b8c\u6574\u7684\u60c5\u51b5\u544a\u77e5\u533b\u751f\uff0c\u56e0\u6b64\u533b\u751f\u9700\u8981\u4e0d\u65ad\u8fdb\u884c\u8be2\u95ee\uff0c\u6700\u540e\u624d\u80fd\u8fdb\u884c\u8bca\u65ad\u5e76\u7ed9\u51fa\u5408\u7406\u7684\u5efa\u8bae\u3002\u57fa\u4e8e\u6b64\uff0c\u6211\u4eec\u6784\u5efa\u4e86**\u6241\u9e4a-1.0\uff08BianQue-1.0\uff09**\uff0c\u62df\u5728**\u5f3a\u5316AI\u7cfb\u7edf\u7684\u95ee\u8be2\u80fd\u529b**\uff0c\u4ece\u800c\u8fbe\u5230\u6a21\u62df\u533b\u751f\u95ee\u8bca\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u628a\u8fd9\u79cd\u80fd\u529b\u5b9a\u4e49\u4e3a\u201c\u671b\u95fb\u95ee\u5207\u201d\u5f53\u4e2d\u7684\u201c\u95ee\u201d\u3002\n\n\u7efc\u5408\u8003\u8651\u5f53\u524d\u4e2d\u6587\u8bed\u8a00\u6a21\u578b\u67b6\u6784\u3001\u53c2\u6570\u91cf\u4ee5\u53ca\u6240\u9700\u8981\u7684\u7b97\u529b\uff0c\u6211\u4eec\u91c7\u7528\u4e86[ClueAI/ChatYuan-large-v2](https://huggingface.co/ClueAI/ChatYuan-large-v2)\u4f5c\u4e3a\u57fa\u51c6\u6a21\u578b\uff0c\u57288\u5f20 NVIDIA RTX 4090\u663e\u5361\u4e0a\u5fae\u8c03\u4e861\u4e2aepoch\u5f97\u5230**\u6241\u9e4a-1.0\uff08BianQue-1.0\uff09**\uff0c\u7528\u4e8e\u8bad\u7ec3\u7684**\u4e2d\u6587\u533b\u7597\u95ee\u7b54\u6307\u4ee4\u4e0e\u591a\u8f6e\u95ee\u8be2\u5bf9\u8bdd\u6df7\u5408\u6570\u636e\u96c6**\u5305\u542b\u4e86\u8d85\u8fc7900\u4e07\u6761\u6837\u672c\uff0c\u8fd9\u82b1\u8d39\u4e86\u5927\u7ea616\u5929\u7684\u65f6\u95f4\u5b8c\u6210\u4e00\u4e2aepoch\u7684\u8bad\u7ec3\u3002\n\n\u6211\u4eec\u5c06\u8ba1\u5212\u56f4\u7ed5\u6241\u9e4a\u6a21\u578b\u7684\u201c\u671b\u95fb\u95ee\u5207\u201d\u80fd\u529b\uff0c\u7ed3\u5408\u533b\u5b66\u4e13\u5bb6\u77e5\u8bc6\u3001\u591a\u6a21\u6001\u6280\u672f\u3001\u591a\u751f\u7406\u4fe1\u53f7\u8ba1\u7b97\u7b49\uff0c\u8fdb\u884c\u591a\u4e2a\u7248\u672c\u7684\u6a21\u578b\u8fed\u4ee3\u7814\u7a76\u3002\n\n\u6241\u9e4a\uff08BianQue\uff09\u6a21\u578b\u6b22\u8fce\u4f60\u7684\u8d21\u732e\uff01\u6211\u4eec\u9f13\u52b1\u4f60\u5728 [BianQue GitHub](https://github.com/scutcyr/BianQue) \u9875\u9762\u62a5\u544a\u95ee\u9898\u3001\u8d21\u732e PR \u5e76\u53c2\u4e0e\u8ba8\u8bba\u3002\u6211\u4eec\u671f\u5f85\u4e0e\u66f4\u591a\u7684\u9ad8\u6821\u3001\u533b\u9662\u3001\u7814\u7a76\u5b9e\u9a8c\u5ba4\u3001\u516c\u53f8\u7b49\u8fdb\u884c\u5408\u4f5c\uff0c\u5171\u540c\u5f00\u5c55\u4e0b\u4e00\u4ee3\u6241\u9e4a\u6a21\u578b\u7814\u7a76\u3002\u5bf9\u4e8e\u6b64\u7c7b\u9700\u6c42\uff08\u4ee5\u53ca\u5176\u4ed6\u4e0d\u9002\u5408\u5728 GitHub \u4e0a\u63d0\u51fa\u7684\u9700\u6c42\uff09\uff0c\u8bf7\u76f4\u63a5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3 [eeyirongchen@mail.scut.edu.cn](mailto:eeyirongchen@mail.scut.edu.cn)\u3002\n\n\n\n## \u8bad\u7ec3\u6570\u636e\n\u6211\u4eec\u7ed3\u5408\u5f53\u524d\u5f00\u6e90\u7684\u4e2d\u6587\u533b\u7597\u95ee\u7b54\u6570\u636e\u96c6\uff08[MedDialog-CN](https://github.com/UCSD-AI4H/Medical-Dialogue-System)\u3001[IMCS-V2](https://github.com/lemuria-wchen/imcs21)\u3001[CHIP-MDCFNPC](https://tianchi.aliyun.com/dataset/95414)\u3001[MedDG](https://tianchi.aliyun.com/dataset/95414)\u3001[cMedQA2](https://github.com/zhangsheng93/cMedQA2)\u3001[Chinese-medical-dialogue-data](https://github.com/Toyhom/Chinese-medical-dialogue-data)\uff09\uff0c\u4ee5\u53ca\u81ea\u5efa\u7684\u6307\u4ee4\u6570\u636e\u96c6\uff0c\u901a\u8fc7\u8fdb\u4e00\u6b65\u7684\u6570\u636e\u6e05\u6d17\uff0c\u6784\u5efa\u4e86\u4e00\u4e2a\u5927\u4e8e900\u4e07\u6761\u6837\u672c\u7684**\u4e2d\u6587\u533b\u7597\u95ee\u7b54\u6307\u4ee4\u4e0e\u591a\u8f6e\u95ee\u8be2\u5bf9\u8bdd\u6df7\u5408\u6570\u636e\u96c6**\uff0c\u6570\u636e\u96c6\u7684\u5e73\u5747\u8f6e\u6570\u4e3a3\uff0c\u6700\u5927\u8f6e\u6570\u8fbe\u5230218\uff0c\u6570\u636e\u683c\u5f0f\u4e3a\uff1a\n```data\ninput: \"\u75c5\u4eba\uff1a\u516d\u5c81\u5b9d\u5b9d\u62c9\u5927\u4fbf\u90fd\u662f\u4e00\u4e2a\u793c\u62dc\u6216\u800510\u5929\u624d\u4e00\u6b21\u6b63\u5e38\u5417\uff0c\u8981\u53bb\u533b\u9662\u68c0\u67e5\u4ec0\u4e48\u9879\u76ee\\n\u533b\u751f\uff1a\u60a8\u597d\\n\u75c5\u4eba\uff1a\u516d\u5c81\u5b9d\u5b9d\u62c9\u5927\u4fbf\u90fd\u662f\u4e00\u4e2a\u793c\u62dc\u6216\u800510\u5929\u624d\u4e00\u6b21\u6b63\u5e38\u5417\uff0c\u8981\u53bb\u533b\u9662\u68c0\u67e5\u4ec0\u4e48\u9879\u76ee\\n\u533b\u751f\uff1a\u5b9d\u5b9d\u4e4b\u524d\u5927\u4fbf\u4ec0\u4e48\u6837\u5462\uff1f\u591a\u4e45\u4e00\u6b21\u5462\\n\u75c5\u4eba\uff1a\u4e00\u822c\u90fd\u662f\u4e00\u4e2a\u793c\u62dc\uff0c\u6700\u8fd1\u8fd9\u51e0\u4e2a\u6708\u90fd\u662f10\u591a\u5929\\n\u533b\u751f\uff1a\u5927\u4fbf\u5e72\u5417\uff1f\\n\u75c5\u4eba\uff1a\u6bcf\u6b2110\u591a\u5929\u62c9\u7684\u5f88\u591a\\n\u533b\u751f\uff1a\"\ntarget: \"\u6210\u5f62\u8fd8\u662f\u4e0d\u6210\u5f62\u5462\uff1f\u5b69\u5b50\u5403\u996d\u600e\u4e48\u6837\u5462\uff1f\"\n```\n\u8bad\u7ec3\u6570\u636e\u5f53\u4e2d\u6df7\u5408\u4e86\u5927\u91cftarget\u6587\u672c\u4e3a**\u533b\u751f\u95ee\u8be2\u7684\u5185\u5bb9**\u800c\u975e\u76f4\u63a5\u7684\u5efa\u8bae\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u63d0\u5347AI\u6a21\u578b\u7684\u95ee\u8be2\u80fd\u529b\u3002\n\n\n\n\n## \u6a21\u578b\u201c\u95ee\u201d\u80fd\u529b\u793a\u4f8b\n\u201c\u671b\u95fb\u95ee\u5207\u201d\u56db\u8bca\u6cd5\u7531\u6241\u9e4a\u53d1\u660e\u3002\u201c\u56db\u8bca\u6cd5\u201d\uff08\u671b\u3001\u95fb\u3001\u95ee\u3001\u5207\uff09\uff0c\u662f\u4e2d\u533b\u8bca\u75c5\u7684\u57fa\u672c\u65b9\u6cd5\u3002\u5176\u4e2d\uff0c\u201c\u95ee\u201d\u7684\u80fd\u529b\u53ef\u4ee5\u88ab\u5efa\u6a21\u5230\u8bed\u8a00\u6a21\u578b\u5f53\u4e2d\u3002\u6211\u4eec\u628aAI\u6a21\u578b\u7684\u201c\u95ee\u201d\u80fd\u529b\u5b9a\u4e49\u4e3a\uff1a    \n**\u201c\u95ee\u201d\u80fd\u529b**\uff1aAI\u6a21\u578b\u80fd\u591f\u6839\u636e\u75c5\u4eba\u8f93\u5165\u7684\u4fe1\u606f\uff0c\u7ed3\u5408\u533b\u5b66\u77e5\u8bc6\u6765\u8fdb\u884c**\u6070\u5f53\u7684\u95ee\u8be2**\uff0c\u5e76\u4e14\u7ed3\u5408\u8fdb\u4e00\u6b65\u7684\u95ee\u8be2\u5f97\u5230\u7684\u75c5\u4eba\u7684\u4fe1\u606f\uff0c\u7ed9\u51fa\u201c\u5408\u9002\u7684\u8bca\u65ad\u6216\u5efa\u8bae\u201d\u3002\u201c\u95ee\u201d\u7684\u8fc7\u7a0b\u901a\u5e38\u662f\u4e00\u4e2a\u591a\u8f6e\u5bf9\u8bdd\u8fc7\u7a0b\u3002\n\n\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\n\n* **\u4f8b\u5b501**    \n\u7528\u6237\uff1a\u6211\u6700\u8fd1\u611f\u89c9\u5168\u8eab\u75b2\u60eb   \n\u6241\u9e4a-1.0\uff1a\u662f\u52b3\u7d2f\u4e86\uff0c\u8fd8\u662f\u71ac\u591c\u4e86\uff1f    \n\u7528\u6237\uff1a\u8fd9\u5468\u90fd\u5728\u71ac\u591c\u8d76\u8bba\u6587    \n\u6241\u9e4a-1.0\uff1a\u55ef\uff0c\u71ac\u591c\u5bb9\u6613\u5f15\u8d77\u5404\u79cd\u4e0d\u9002\uff0c\u5982\u5934\u6655\u3001\u4e4f\u529b\u3001\u5931\u7720\u3001\u591a\u68a6\u7b49\uff0c\u591a\u4f11\u606f\uff0c\u53ef\u4ee5\u53e3\u670d\u8c37\u7ef4\u7d20\u3001\u7ef4\u751f\u7d20B1\u548c\u5b89\u795e\u8865\u8111\u6db2\uff0c\u907f\u514d\u71ac\u591c\u3002    \n\n* **\u4f8b\u5b502**   \n\u7528\u6237\uff1a\u6211\u6700\u8fd1\u7ecf\u5e38\u5931\u7720    \n\u6241\u9e4a-1.0\uff1a\u5931\u7720\u591a\u4e45\u4e86\uff1f    \n\u7528\u6237\uff1a\u4e24\u5468\u4e86    \n\u6241\u9e4a-1.0\uff1a\u7761\u7720\u600e\u4e48\u6837\uff1f    \n\u7528\u6237\uff1a\u4e0a\u5e8a\u51e0\u5c0f\u65f6\u624d\u7761\u5f97\u7740    \n\u6241\u9e4a-1.0\uff1a\u53ef\u4ee5\u53e3\u670d\u4e00\u4e9b\u836f\u7269   \n\u7528\u6237\uff1a\u6709\u5177\u4f53\u63a8\u8350\u5417   \n\u6241\u9e4a-1.0\uff1a\u9700\u8981\u5148\u68c0\u67e5\u4e00\u4e0b   \n\u7528\u6237\uff1a\u90a3\u6211\u9700\u8981\u505a\u4ec0\u4e48\u68c0\u67e5\uff1f   \n\u6241\u9e4a-1.0\uff1a\u5fc3\u7535\u56fe   \n\n\n## \u4f7f\u7528\u65b9\u6cd5\n\n\n\n```python\nimport os\nfrom transformers import T5Tokenizer, T5ForConditionalGeneration, AutoTokenizer\nimport torch\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n\n\ntokenizer = T5Tokenizer.from_pretrained(\"scutcyr/BianQue-1.0\")\nmodel = T5ForConditionalGeneration.from_pretrained(\"scutcyr/BianQue-1.0\")\nmodel = model.to(device)\n\ndef preprocess(text):\n    text = text.replace(\"\\n\", \"\\\\n\").replace(\"\\t\", \"\\\\t\")\n    return text\n\ndef postprocess(text):\n    return text.replace(\"\\\\n\", \"\\n\").replace(\"\\\\t\", \"\\t\")\n\ndef answer(user_history, bot_history, sample=True, top_p=1, temperature=0.7):\n    '''sample\uff1a\u662f\u5426\u62bd\u6837\u3002\u751f\u6210\u4efb\u52a1\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aTrue;\n    top_p\uff1a0-1\u4e4b\u95f4\uff0c\u751f\u6210\u7684\u5185\u5bb9\u8d8a\u591a\u6837\n    max_new_tokens=512 lost...'''\n\n    if len(bot_history)>0:\n        context = \"\\n\".join([f\"\u75c5\u4eba\uff1a{user_history[i]}\\n\u533b\u751f\uff1a{bot_history[i]}\" for i in range(len(bot_history))])\n        input_text = context + \"\\n\u75c5\u4eba\uff1a\" + user_history[-1] + \"\\n\u533b\u751f\uff1a\"\n    else:\n        input_text = \"\u75c5\u4eba\uff1a\" + user_history[-1] + \"\\n\u533b\u751f\uff1a\"\n        return \"\u6211\u662f\u5229\u7528\u4eba\u5de5\u667a\u80fd\u6280\u672f\uff0c\u7ed3\u5408\u5927\u6570\u636e\u8bad\u7ec3\u5f97\u5230\u7684\u667a\u80fd\u533b\u7597\u95ee\u7b54\u6a21\u578b\u6241\u9e4a\uff0c\u4f60\u53ef\u4ee5\u5411\u6211\u63d0\u95ee\u3002\"\n    \n\n    input_text = preprocess(input_text)\n    print(input_text)\n    encoding = tokenizer(text=input_text, truncation=True, padding=True, max_length=768, return_tensors=\"pt\").to(device) \n    if not sample:\n        out = model.generate(**encoding, return_dict_in_generate=True, output_scores=False, max_new_tokens=512, num_beams=1, length_penalty=0.6)\n    else:\n        out = model.generate(**encoding, return_dict_in_generate=True, output_scores=False, max_new_tokens=512, do_sample=True, top_p=top_p, temperature=temperature, no_repeat_ngram_size=3)\n    out_text = tokenizer.batch_decode(out[\"sequences\"], skip_special_tokens=True)\n    print('\u533b\u751f: '+postprocess(out_text[0]))\n    return postprocess(out_text[0])\n\nanswer_text = answer(user_history=[\"\u4f60\u597d\uff01\",\n                                   \"\u6211\u6700\u8fd1\u7ecf\u5e38\u5931\u7720\",\n                                   \"\u4e24\u5468\u4e86\",\n                                   \"\u4e0a\u5e8a\u51e0\u5c0f\u65f6\u624d\u7761\u5f97\u7740\"], \n                     bot_history=[\"\u6211\u662f\u5229\u7528\u4eba\u5de5\u667a\u80fd\u6280\u672f\uff0c\u7ed3\u5408\u5927\u6570\u636e\u8bad\u7ec3\u5f97\u5230\u7684\u667a\u80fd\u533b\u7597\u95ee\u7b54\u6a21\u578b\u6241\u9e4a\uff0c\u4f60\u53ef\u4ee5\u5411\u6211\u63d0\u95ee\u3002\",\n                                  \"\u5931\u7720\u591a\u4e45\u4e86\uff1f\",\n                                  \"\u7761\u7720\u600e\u4e48\u6837\uff1f\"])\n```\n\n## \u58f0\u660e\n\n**\u6241\u9e4a-1.0\uff08BianQue-1.0\uff09**\u5f53\u524d\u4ec5\u7ecf\u8fc71\u4e2aepoch\u7684\u8bad\u7ec3\uff0c\u5c3d\u7ba1\u6a21\u578b\u5177\u5907\u4e86\u4e00\u5b9a\u7684\u533b\u7597\u95ee\u8be2\u80fd\u529b\uff0c\u4f46\u5176\u4ecd\u7136\u5b58\u5728\u4ee5\u4e0b\u5c40\u9650\uff1a\n* \u8bad\u7ec3\u6570\u636e\u6765\u6e90\u4e8e\u5f00\u6e90\u6570\u636e\u96c6\u4ee5\u53ca\u4e92\u8054\u7f51\uff0c\u5c3d\u7ba1\u6211\u4eec\u91c7\u7528\u4e86\u4e25\u683c\u7684\u6570\u636e\u6e05\u6d17\u6d41\u7a0b\uff0c\u6570\u636e\u96c6\u5f53\u4e2d\u4ecd\u7136\u4e0d\u53ef\u907f\u514d\u5730\u5b58\u5728\u5927\u91cf\u566a\u58f0\uff0c\u8fd9\u4f1a\u4f7f\u5f97\u90e8\u5206\u56de\u590d\u4ea7\u751f\u9519\u8bef\uff1b\n* \u533b\u751f\u201c\u95ee\u8be2\u201d\u662f\u4e00\u9879\u590d\u6742\u7684\u80fd\u529b\uff0c\u8fd9\u662f\u975e\u533b\u751f\u7fa4\u4f53\u6240\u4e0d\u5177\u5907\u7684\uff0c\u5f53\u524d\u7684\u6a21\u578b\u5bf9\u4e8e\u6a21\u62df\u201c\u533b\u751f\u95ee\u8be2\u201d\u8fc7\u7a0b\u662f\u901a\u8fc7\u5927\u91cf\u6837\u672c\u5b66\u4e60\u5f97\u5230\u7684\uff0c\u56e0\u6b64\u5728\u95ee\u8be2\u8fc7\u7a0b\u5f53\u4e2d\uff0c\u6709\u53ef\u80fd\u51fa\u73b0\u4e00\u4e9b\u5947\u5f02\u7684\u63d0\u95ee\u98ce\u683c\u3002\u6362\u4e00\u53e5\u8bdd\u6765\u8bf4\uff0c\u5f53\u524d\u7248\u672c\u7684\u6a21\u578b\u5f3a\u5316\u4e86\u201c\u95ee\u201d\u7684\u80fd\u529b\uff0c\u4f46\u662f\u201c\u671b\u201d\u3001\u201c\u95fb\u201d\u3001\u201c\u5207\u201d\u7684\u80fd\u529b\u4ecd\u5f85\u8fdb\u4e00\u6b65\u7814\u7a76\uff01\n\n\n## \u5f15\u7528\n```bib\n@article{chen2023bianque1,\n      title={BianQue-1.0: Improving the \"Question\" Ability of Medical Chat Model through finetuning with Hybrid Instructions and Multi-turn Doctor QA Datasets}, \n      author={Yirong Chen and Zhenyu Wang and Xiaofen Xing and Zhipei Xu and Kai Fang and Sihang Li and Junhong Wang and Xiangmin Xu},\n      year={2023},\n      url={https://github.com/scutcyr/BianQue}\n}\n```", "size_bytes": "3132793669", "downloads": 166}